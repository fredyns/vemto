{
    "tables": {
        "basicrelationships": {
            "basicrelationships": {
                "count": 218,
                "lastPrimaryKey": 376,
                "index": {
                    "1": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                2
                            ],
                            "hasmanydetails.relationshipId": [
                                1
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                1
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "3": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                4
                            ],
                            "hasmanydetails.relationshipId": [
                                2
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                3
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                6
                            ],
                            "hasmanydetails.relationshipId": [
                                3
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                5
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                8
                            ],
                            "hasmanydetails.relationshipId": [
                                4
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                7
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                10
                            ],
                            "hasmanydetails.relationshipId": [
                                5
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                9
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                12
                            ],
                            "hasmanydetails.relationshipId": [
                                6
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                11
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                14
                            ],
                            "hasmanydetails.relationshipId": [
                                7
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                13
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                16
                            ],
                            "hasmanydetails.relationshipId": [
                                8
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                15
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                20
                            ],
                            "hasmanydetails.relationshipId": [
                                9
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                19
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                22
                            ],
                            "hasmanydetails.relationshipId": [
                                10
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                21
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "23": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                24
                            ],
                            "hasmanydetails.relationshipId": [
                                11
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                23
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                26
                            ],
                            "hasmanydetails.relationshipId": [
                                12
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                25
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                28
                            ],
                            "hasmanydetails.relationshipId": [
                                13
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                27
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "29": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                30
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "30": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                29
                            ],
                            "hasmanydetails.relationshipId": [
                                14
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "31": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                32
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "32": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                31
                            ],
                            "hasmanydetails.relationshipId": [
                                15
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "33": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                34
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                33
                            ],
                            "hasmanydetails.relationshipId": [
                                16
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "35": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                36
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "36": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                35
                            ],
                            "hasmanydetails.relationshipId": [
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "37": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                38
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                37
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "39": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                40
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "40": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                39
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "41": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                42
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "42": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                41
                            ],
                            "hasmanydetails.relationshipId": [
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "43": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                44
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "44": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                43
                            ],
                            "hasmanydetails.relationshipId": [
                                19
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "45": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                46
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "46": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                45
                            ],
                            "hasmanydetails.relationshipId": [
                                20
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "47": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                48
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "48": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                47
                            ],
                            "hasmanydetails.relationshipId": [
                                21
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "49": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                50
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "50": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                49
                            ],
                            "hasmanydetails.relationshipId": [
                                22
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "51": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                52
                            ],
                            "hasmanydetails.relationshipId": [
                                24
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "52": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                51
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "53": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                54
                            ],
                            "hasmanydetails.relationshipId": [
                                25
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "54": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                53
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "55": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                56
                            ],
                            "hasmanydetails.relationshipId": [
                                26
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "56": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                55
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "57": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                58
                            ],
                            "hasmanydetails.relationshipId": [
                                27
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "58": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                57
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "59": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                60
                            ],
                            "hasmanydetails.relationshipId": [
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                59
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "61": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                62
                            ],
                            "hasmanydetails.relationshipId": [
                                29
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "62": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                61
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "63": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                64
                            ],
                            "hasmanydetails.relationshipId": [
                                30
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "64": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                63
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "65": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                66
                            ],
                            "hasmanydetails.relationshipId": [
                                31
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "66": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                65
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "67": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                68
                            ],
                            "hasmanydetails.relationshipId": [
                                37
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "68": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                67
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "69": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                70
                            ],
                            "hasmanydetails.relationshipId": [
                                38
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "70": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                69
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "71": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                72
                            ],
                            "hasmanydetails.relationshipId": [
                                39
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "72": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                71
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "73": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                74
                            ],
                            "hasmanydetails.relationshipId": [
                                40
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "74": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                73
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "75": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                76
                            ],
                            "hasmanydetails.relationshipId": [
                                41
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "76": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                75
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "77": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                78
                            ],
                            "hasmanydetails.relationshipId": [
                                42
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "78": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                77
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "79": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                80
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "80": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                79
                            ],
                            "hasmanydetails.relationshipId": [
                                43
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "81": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "82": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                81
                            ],
                            "hasmanydetails.relationshipId": [
                                44
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "83": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                84
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "84": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                83
                            ],
                            "hasmanydetails.relationshipId": [
                                45
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "97": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                98
                            ],
                            "hasmanydetails.relationshipId": [
                                118
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "98": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                97
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "101": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                102
                            ],
                            "inputs.relationshipId": [
                                573
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "102": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                101
                            ],
                            "hasmanydetails.relationshipId": [
                                48
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "105": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                106
                            ],
                            "hasmanydetails.relationshipId": [
                                49
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "106": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                105
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "107": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                108
                            ],
                            "hasmanydetails.relationshipId": [
                                51
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "108": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                107
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "109": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                110
                            ],
                            "hasmanydetails.relationshipId": [
                                50
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "110": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                109
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "111": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                112
                            ],
                            "hasmanydetails.relationshipId": [
                                53
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "112": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                111
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "113": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                114
                            ],
                            "hasmanydetails.relationshipId": [
                                52
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "114": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                113
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "243": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                244
                            ],
                            "hasmanydetails.relationshipId": [
                                116
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "244": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                243
                            ],
                            "inputs.relationshipId": [
                                1070
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "245": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                246
                            ],
                            "hasmanydetails.relationshipId": [
                                120
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "246": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                245
                            ],
                            "inputs.relationshipId": [
                                961
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "247": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                248
                            ],
                            "inputs.relationshipId": [
                                984
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "248": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                247
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "249": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                250
                            ],
                            "inputs.relationshipId": [
                                1016
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "250": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                249
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "251": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                252
                            ],
                            "inputs.relationshipId": [
                                1017
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "252": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                251
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "253": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                254
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "254": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                253
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "255": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                256
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "256": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                255
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "257": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                258
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "258": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                257
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "259": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                260
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "260": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                259
                            ],
                            "hasmanydetails.relationshipId": [
                                119
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "261": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                262
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "262": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                261
                            ],
                            "inputs.relationshipId": [
                                1073
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "263": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                264
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "264": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                263
                            ],
                            "inputs.relationshipId": [
                                1107
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "265": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                266
                            ],
                            "hasmanydetails.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "266": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                265
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "267": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                268
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "268": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                267
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "269": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                270
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "270": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                269
                            ],
                            "inputs.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "271": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                272
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "272": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                271
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "273": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                274
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "274": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                273
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "275": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                276
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "276": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                275
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "277": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                278
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "278": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                277
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "279": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                280
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "280": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                279
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "281": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                282
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "282": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                281
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "283": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                284
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "284": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                283
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "287": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                288
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "288": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                287
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "295": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                296
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "296": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                295
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "297": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                298
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "298": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                297
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "299": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                300
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "300": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                299
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "301": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                302
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "302": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                301
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "303": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                304
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "304": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                303
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "305": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                306
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "306": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                305
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "307": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                308
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "308": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                307
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "309": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                310
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "310": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                309
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "313": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                314
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "314": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                313
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "315": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                316
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "316": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                315
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "317": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                318
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "318": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                317
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "319": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                320
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "320": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                319
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "321": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                322
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "322": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                321
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "323": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                324
                            ],
                            "inputs.relationshipId": [
                                1325
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "324": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                323
                            ],
                            "hasmanydetails.relationshipId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "327": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                328
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "328": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                327
                            ],
                            "hasmanydetails.relationshipId": [
                                123
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "329": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                330
                            ],
                            "inputs.relationshipId": [
                                1178
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "330": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                329
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "331": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                332
                            ],
                            "inputs.relationshipId": [
                                1182
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "332": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                331
                            ],
                            "hasmanydetails.relationshipId": [
                                124
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "333": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                334
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "334": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                333
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "335": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                336
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "336": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                335
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "337": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                338
                            ],
                            "inputs.relationshipId": [
                                1190
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "338": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                337
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "339": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                340
                            ],
                            "inputs.relationshipId": [
                                1191
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "340": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                339
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "341": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                342
                            ],
                            "inputs.relationshipId": [
                                1180
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "342": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                341
                            ],
                            "hasmanydetails.relationshipId": [
                                125
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "343": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                344
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "344": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                343
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "345": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                346
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "346": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                345
                            ],
                            "hasmanydetails.relationshipId": [
                                126
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "347": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                348
                            ],
                            "inputs.relationshipId": [
                                1247
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "348": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                347
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "349": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                350
                            ],
                            "inputs.relationshipId": [
                                1251
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "350": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                349
                            ],
                            "hasmanydetails.relationshipId": [
                                127
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "351": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                352
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "352": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                351
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "353": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                354
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "354": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                353
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "355": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                356
                            ],
                            "inputs.relationshipId": [
                                1259
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "356": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                355
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "357": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                358
                            ],
                            "inputs.relationshipId": [
                                1260
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "358": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                357
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "359": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                360
                            ],
                            "inputs.relationshipId": [
                                1249
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "360": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                359
                            ],
                            "hasmanydetails.relationshipId": [
                                128
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "361": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                362
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "362": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                361
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "363": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                364
                            ],
                            "inputs.relationshipId": [
                                1317
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "364": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                363
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "365": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                366
                            ],
                            "inputs.relationshipId": [
                                1318
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "366": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                365
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "367": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                368
                            ],
                            "hasmanydetails.relationshipId": [
                                129
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "368": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                367
                            ],
                            "inputs.relationshipId": [
                                1399
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "369": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                370
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "370": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                369
                            ],
                            "inputs.relationshipId": [
                                1321
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "371": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                372
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "372": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                371
                            ],
                            "inputs.relationshipId": [
                                1371
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "373": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                374
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "374": {
                        "hasMany": {
                            "basicrelationships.inverseId": [
                                373
                            ],
                            "inputs.relationshipId": [
                                1379
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_368": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 185,
                "inverseId": 367,
                "localModelId": 204,
                "parentKeyId": 1730,
                "foreignKeyId": 2011,
                "name": "record",
                "type": "belongsTo",
                "foreignOriginalName": "record_id",
                "hasApi": true,
                "defaultName": "record",
                "usingFirstDefaultName": true,
                "id": 368,
                "createdAt": "2024-05-01 10:23:16",
                "updatedAt": "2024-05-01 10:23:16"
            },
            "item_367": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 204,
                "inverseId": 368,
                "localModelId": 185,
                "parentKeyId": 1730,
                "foreignKeyId": 2011,
                "name": "subrecords",
                "type": "hasMany",
                "foreignOriginalName": "record_id",
                "hasApi": true,
                "defaultName": "subrecords",
                "usingFirstDefaultName": true,
                "id": 367,
                "createdAt": "2024-05-01 10:23:16",
                "updatedAt": "2024-05-01 10:23:16"
            },
            "item_323": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 184,
                "inverseId": 324,
                "localModelId": 185,
                "parentKeyId": 1719,
                "foreignKeyId": 1731,
                "name": "user",
                "type": "belongsTo",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "id": 323,
                "createdAt": "2023-05-11 06:35:08",
                "updatedAt": "2024-05-09 19:31:50"
            },
            "item_324": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 185,
                "inverseId": 323,
                "localModelId": 184,
                "parentKeyId": 1719,
                "foreignKeyId": 1731,
                "name": "records",
                "type": "hasMany",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "records",
                "usingFirstDefaultName": true,
                "id": 324,
                "createdAt": "2023-05-11 06:35:08",
                "updatedAt": "2024-05-09 19:31:50"
            },
            "item_370": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 184,
                "inverseId": 369,
                "localModelId": 205,
                "parentKeyId": 1719,
                "foreignKeyId": 2014,
                "name": "user",
                "type": "belongsTo",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "id": 370,
                "createdAt": "2024-05-01 10:24:44",
                "updatedAt": "2024-05-09 17:19:03"
            },
            "item_369": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 205,
                "inverseId": 370,
                "localModelId": 184,
                "parentKeyId": 1719,
                "foreignKeyId": 2014,
                "name": "userActivityLogs",
                "type": "hasMany",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "userActivityLogs",
                "usingFirstDefaultName": true,
                "id": 369,
                "createdAt": "2024-05-01 10:24:44",
                "updatedAt": "2024-05-09 17:19:03"
            },
            "item_372": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 184,
                "inverseId": 371,
                "localModelId": 206,
                "parentKeyId": 1719,
                "foreignKeyId": 2021,
                "name": "user",
                "type": "belongsTo",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "id": 372,
                "createdAt": "2024-05-01 11:05:00",
                "updatedAt": "2024-05-09 17:19:25"
            },
            "item_371": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 206,
                "inverseId": 372,
                "localModelId": 184,
                "parentKeyId": 1719,
                "foreignKeyId": 2021,
                "name": "userUploads",
                "type": "hasMany",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "userUploads",
                "usingFirstDefaultName": true,
                "id": 371,
                "createdAt": "2024-05-01 11:05:00",
                "updatedAt": "2024-05-09 17:19:25"
            },
            "item_374": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 184,
                "inverseId": 373,
                "localModelId": 207,
                "parentKeyId": 1719,
                "foreignKeyId": 2029,
                "name": "user",
                "type": "belongsTo",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "id": 374,
                "createdAt": "2024-05-01 11:42:12",
                "updatedAt": "2024-05-09 17:19:34"
            },
            "item_373": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "modelId": 207,
                "inverseId": 374,
                "localModelId": 184,
                "parentKeyId": 1719,
                "foreignKeyId": 2029,
                "name": "userGalleries",
                "type": "hasMany",
                "foreignOriginalName": "user_id",
                "hasApi": true,
                "defaultName": "userGalleries",
                "usingFirstDefaultName": true,
                "id": 373,
                "createdAt": "2024-05-01 11:42:12",
                "updatedAt": "2024-05-09 17:19:34"
            }
        },
        "comments": {
            "comments": {
                "count": 1,
                "lastPrimaryKey": 4,
                "index": {
                    "4": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_4": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "content": "Tipe Input Lain:\n- slider\n- multi choice\n- checkboxes\n- star/checkmark",
                "projectId": 12,
                "parsedContent": "<p>Tipe Input Lain:</p>\n<ul>\n<li>slider</li>\n<li>multi choice</li>\n<li>checkboxes</li>\n<li>star/checkmark</li>\n</ul>",
                "top": "878px",
                "left": "440px",
                "id": 4,
                "createdAt": "2024-05-02 06:46:21",
                "updatedAt": "2024-05-02 22:06:43"
            }
        },
        "cruds": {
            "cruds": {
                "count": 99,
                "lastPrimaryKey": 196,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.crudId": [
                                1,
                                2,
                                3
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "inputs.crudId": [
                                6,
                                7,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                20,
                                21,
                                22,
                                4,
                                5,
                                8,
                                9,
                                10,
                                18,
                                19,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {
                            "inputs.crudId": [
                                77,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                91,
                                92,
                                93,
                                94,
                                95,
                                120,
                                121,
                                122,
                                123,
                                124,
                                125,
                                126,
                                127,
                                128,
                                105,
                                106,
                                107,
                                129,
                                130,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                118,
                                117,
                                119
                            ],
                            "hasmanydetails.crudId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                9,
                                10,
                                11,
                                12,
                                13,
                                8,
                                51,
                                53
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {
                            "inputs.crudId": [
                                134,
                                133,
                                132,
                                135,
                                131,
                                138,
                                136
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {
                            "inputs.crudId": [
                                140,
                                139,
                                141,
                                142
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {
                            "inputs.crudId": [
                                144,
                                143,
                                145,
                                146
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {
                            "inputs.crudId": [
                                147,
                                148
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {
                            "inputs.crudId": [
                                149,
                                150
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {
                            "inputs.crudId": [
                                151,
                                167,
                                168,
                                169,
                                155
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {
                            "inputs.crudId": [
                                157,
                                156,
                                162,
                                166,
                                165,
                                164,
                                163
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {
                            "inputs.crudId": [
                                170,
                                174,
                                177,
                                176,
                                175
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "inputs.crudId": [
                                182,
                                178,
                                185,
                                184,
                                183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {
                            "inputs.crudId": [
                                186,
                                189,
                                191,
                                190
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {
                            "inputs.crudId": [
                                196,
                                192,
                                199,
                                198,
                                197
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {
                            "inputs.crudId": [
                                200,
                                203,
                                205,
                                204
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {
                            "inputs.crudId": [
                                209,
                                206,
                                211,
                                210
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {
                            "inputs.crudId": [
                                212,
                                213,
                                214
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {
                            "inputs.crudId": [
                                215,
                                216,
                                217,
                                218
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {
                            "inputs.crudId": [
                                219,
                                220,
                                221,
                                222
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {
                            "inputs.crudId": [
                                223,
                                224,
                                225,
                                226,
                                227
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "23": {
                        "hasMany": {
                            "inputs.crudId": [
                                228,
                                229,
                                230,
                                231,
                                232,
                                233,
                                234,
                                235,
                                236
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {
                            "inputs.crudId": [
                                237,
                                238
                            ],
                            "hasmanydetails.crudId": [
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {
                            "inputs.crudId": [
                                239,
                                240,
                                243,
                                242,
                                241
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {
                            "inputs.crudId": [
                                244,
                                245,
                                246,
                                247,
                                248,
                                249
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {
                            "inputs.crudId": [
                                251,
                                252,
                                250,
                                253,
                                254,
                                255
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {
                            "inputs.crudId": [
                                256,
                                257,
                                262,
                                258,
                                259,
                                263,
                                264,
                                260,
                                261,
                                265
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "29": {
                        "hasMany": {
                            "inputs.crudId": [
                                267,
                                268,
                                266,
                                269,
                                271,
                                272,
                                273,
                                270,
                                274,
                                275,
                                276,
                                277,
                                278,
                                279,
                                280,
                                282,
                                285,
                                281,
                                283,
                                284
                            ],
                            "hasmanydetails.crudId": [
                                16,
                                15,
                                14,
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "30": {
                        "hasMany": {
                            "inputs.crudId": [
                                286,
                                288,
                                287,
                                291,
                                304,
                                305,
                                289,
                                290,
                                292,
                                293,
                                294,
                                295,
                                296,
                                297,
                                298,
                                299,
                                300,
                                301,
                                302,
                                303
                            ],
                            "hasmanydetails.crudId": [
                                19,
                                22,
                                20,
                                21
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "32": {
                        "hasMany": {
                            "inputs.crudId": [
                                322,
                                329,
                                330,
                                331,
                                332,
                                333,
                                334,
                                335,
                                336,
                                337,
                                338,
                                323,
                                324,
                                328,
                                327,
                                326,
                                325
                            ],
                            "hasmanydetails.crudId": [
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                50,
                                52
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "inputs.crudId": [
                                343,
                                342,
                                344
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "35": {
                        "hasMany": {
                            "inputs.crudId": [
                                345
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "36": {
                        "hasMany": {
                            "inputs.crudId": [
                                346
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "37": {
                        "hasMany": {
                            "inputs.crudId": [
                                347,
                                348
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "inputs.crudId": [
                                349,
                                350
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "39": {
                        "hasMany": {
                            "inputs.crudId": [
                                351,
                                352
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "40": {
                        "hasMany": {
                            "inputs.crudId": [
                                353,
                                355,
                                354
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "41": {
                        "hasMany": {
                            "inputs.crudId": [
                                357,
                                356
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "47": {
                        "hasMany": {
                            "inputs.crudId": [
                                372,
                                373
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "48": {
                        "hasMany": {
                            "inputs.crudId": [
                                376,
                                375
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "49": {
                        "hasMany": {
                            "inputs.crudId": [
                                378,
                                379
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "50": {
                        "hasMany": {
                            "inputs.crudId": [
                                380,
                                381
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "51": {
                        "hasMany": {
                            "inputs.crudId": [
                                383,
                                384
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "52": {
                        "hasMany": {
                            "inputs.crudId": [
                                386,
                                387
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "53": {
                        "hasMany": {
                            "inputs.crudId": [
                                388,
                                389,
                                390
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "54": {
                        "hasMany": {
                            "inputs.crudId": [
                                391,
                                392,
                                393
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "55": {
                        "hasMany": {
                            "inputs.crudId": [
                                394
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "56": {
                        "hasMany": {
                            "inputs.crudId": [
                                395,
                                398,
                                396,
                                397,
                                399
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "57": {
                        "hasMany": {
                            "inputs.crudId": [
                                400,
                                401,
                                402
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "58": {
                        "hasMany": {
                            "inputs.crudId": [
                                403,
                                406,
                                409,
                                405,
                                404,
                                407,
                                408,
                                410
                            ],
                            "hasmanydetails.crudId": [
                                45
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "59": {
                        "hasMany": {
                            "inputs.crudId": [
                                442,
                                411,
                                443,
                                423,
                                424,
                                425,
                                417,
                                418,
                                420,
                                419,
                                421,
                                422,
                                426,
                                427,
                                428,
                                429,
                                430,
                                431,
                                432,
                                433,
                                434,
                                435,
                                436,
                                447,
                                412,
                                444,
                                437,
                                438,
                                445,
                                415,
                                413,
                                414,
                                416,
                                446,
                                439,
                                440,
                                441,
                                448
                            ],
                            "hasmanydetails.crudId": [
                                43,
                                44
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "inputs.crudId": [
                                449,
                                450,
                                451
                            ],
                            "hasmanydetails.crudId": [
                                120
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "61": {
                        "hasMany": {
                            "inputs.crudId": [
                                458,
                                452,
                                457,
                                453,
                                454,
                                455,
                                456,
                                959
                            ],
                            "hasmanydetails.crudId": [
                                116
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "65": {
                        "hasMany": {
                            "inputs.crudId": [
                                1073,
                                536,
                                539,
                                535,
                                532,
                                530,
                                529,
                                528,
                                540,
                                541,
                                524,
                                538,
                                531,
                                522
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "67": {
                        "hasMany": {
                            "inputs.crudId": [
                                545,
                                546,
                                547
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "73": {
                        "hasMany": {
                            "inputs.crudId": [
                                574,
                                575,
                                576,
                                577,
                                578,
                                579,
                                580,
                                581,
                                582,
                                583,
                                573
                            ],
                            "hasmanydetails.crudId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "76": {
                        "hasMany": {
                            "inputs.crudId": [
                                600,
                                601,
                                599,
                                603,
                                604,
                                602,
                                605,
                                606,
                                607
                            ],
                            "hasmanydetails.crudId": [
                                48,
                                49
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "77": {
                        "hasMany": {
                            "inputs.crudId": [
                                614,
                                610,
                                611,
                                613,
                                615,
                                616,
                                617,
                                618,
                                609,
                                619
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "78": {
                        "hasMany": {
                            "inputs.crudId": [
                                621,
                                622,
                                623,
                                626,
                                629,
                                628,
                                624,
                                627,
                                625
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "79": {
                        "hasMany": {
                            "inputs.crudId": [
                                632,
                                631
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "80": {
                        "hasMany": {
                            "inputs.crudId": [
                                633,
                                636,
                                634,
                                635
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "81": {
                        "hasMany": {
                            "inputs.crudId": [
                                639,
                                638
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "82": {
                        "hasMany": {
                            "inputs.crudId": [
                                642,
                                643,
                                641,
                                644
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "149": {
                        "hasMany": {
                            "inputs.crudId": [
                                962,
                                961
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "151": {
                        "hasMany": {
                            "inputs.crudId": [
                                973
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "152": {
                        "hasMany": {
                            "inputs.crudId": [
                                982,
                                1003,
                                986,
                                987,
                                988,
                                989,
                                990,
                                991,
                                992,
                                993,
                                994,
                                995,
                                996,
                                997,
                                998,
                                999,
                                1000,
                                1001,
                                1002,
                                1004,
                                1006,
                                1011,
                                1010,
                                975,
                                976,
                                1009,
                                1005,
                                985,
                                978,
                                1008,
                                984,
                                980
                            ],
                            "hasmanydetails.crudId": [
                                118
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "153": {
                        "hasMany": {
                            "inputs.crudId": [
                                1012,
                                1015
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "154": {
                        "hasMany": {
                            "inputs.crudId": [
                                1070,
                                1072
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "156": {
                        "hasMany": {
                            "inputs.crudId": [
                                1109,
                                1111,
                                1112,
                                1108,
                                1107
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "158": {
                        "hasMany": {
                            "inputs.crudId": [
                                1133,
                                1134,
                                1135
                            ],
                            "hasmanydetails.crudId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "162": {
                        "hasMany": {
                            "inputs.crudId": [
                                1161,
                                1162,
                                1163,
                                1164,
                                1165,
                                1166
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "165": {
                        "hasMany": {
                            "inputs.crudId": [
                                1169
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "166": {
                        "hasMany": {
                            "inputs.crudId": [
                                1170,
                                1171,
                                1172
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "167": {
                        "hasMany": {
                            "inputs.crudId": [
                                1173,
                                1174,
                                1175
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "168": {
                        "hasMany": {
                            "inputs.crudId": [
                                1177,
                                1176
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "169": {
                        "hasMany": {
                            "inputs.crudId": [
                                1179
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "170": {
                        "hasMany": {
                            "inputs.crudId": [
                                1180,
                                1181
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "171": {
                        "hasMany": {
                            "inputs.crudId": [
                                1183,
                                1184,
                                1185
                            ],
                            "hasmanydetails.crudId": [
                                124
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "172": {
                        "hasMany": {
                            "inputs.crudId": [
                                1186,
                                1188,
                                1187,
                                1189,
                                1190
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "173": {
                        "hasMany": {
                            "inputs.crudId": [
                                1191,
                                1192,
                                1195,
                                1204,
                                1203,
                                1201,
                                1200,
                                1199,
                                1197,
                                1198,
                                1196,
                                1193,
                                1202,
                                1194
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "174": {
                        "hasMany": {
                            "inputs.crudId": [
                                1205,
                                1182
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "175": {
                        "hasMany": {
                            "inputs.crudId": [
                                1210,
                                1232,
                                1213,
                                1214,
                                1215,
                                1216,
                                1217,
                                1218,
                                1219,
                                1221,
                                1222,
                                1223,
                                1224,
                                1225,
                                1226,
                                1227,
                                1229,
                                1230,
                                1231,
                                1233,
                                1235,
                                1228,
                                1220,
                                1206,
                                1207,
                                1211,
                                1234,
                                1212,
                                1208,
                                1209,
                                1178,
                                1236
                            ],
                            "hasmanydetails.crudId": [
                                123
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "176": {
                        "hasMany": {
                            "inputs.crudId": [
                                1238,
                                1237,
                                1239,
                                1240,
                                1241,
                                1242,
                                1243,
                                1244
                            ],
                            "hasmanydetails.crudId": [
                                125
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "177": {
                        "hasMany": {
                            "inputs.crudId": [
                                1246,
                                1245
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "178": {
                        "hasMany": {
                            "inputs.crudId": [
                                1248
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "179": {
                        "hasMany": {
                            "inputs.crudId": [
                                1249,
                                1250
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "180": {
                        "hasMany": {
                            "inputs.crudId": [
                                1252,
                                1253,
                                1254
                            ],
                            "hasmanydetails.crudId": [
                                127
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "181": {
                        "hasMany": {
                            "inputs.crudId": [
                                1255,
                                1257,
                                1256,
                                1258,
                                1259
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "182": {
                        "hasMany": {
                            "inputs.crudId": [
                                1260,
                                1261,
                                1264,
                                1273,
                                1272,
                                1270,
                                1269,
                                1268,
                                1266,
                                1267,
                                1265,
                                1262,
                                1271,
                                1263
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "183": {
                        "hasMany": {
                            "inputs.crudId": [
                                1274,
                                1251
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "184": {
                        "hasMany": {
                            "inputs.crudId": [
                                1279,
                                1301,
                                1282,
                                1283,
                                1284,
                                1285,
                                1286,
                                1287,
                                1288,
                                1290,
                                1291,
                                1292,
                                1293,
                                1294,
                                1295,
                                1296,
                                1298,
                                1299,
                                1300,
                                1302,
                                1304,
                                1297,
                                1289,
                                1275,
                                1276,
                                1280,
                                1303,
                                1281,
                                1277,
                                1278,
                                1247,
                                1305
                            ],
                            "hasmanydetails.crudId": [
                                126
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "185": {
                        "hasMany": {
                            "inputs.crudId": [
                                1307,
                                1306,
                                1308,
                                1309,
                                1310,
                                1311,
                                1312,
                                1313
                            ],
                            "hasmanydetails.crudId": [
                                128
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "186": {
                        "hasMany": {
                            "inputs.crudId": [
                                1314,
                                1315,
                                1317,
                                1318,
                                1319
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "187": {
                        "hasMany": {
                            "inputs.crudId": [
                                1320,
                                1321,
                                1322,
                                1324,
                                1343,
                                1416
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "188": {
                        "hasMany": {
                            "inputs.crudId": [
                                1325,
                                1326,
                                1327,
                                1329,
                                1333,
                                1336,
                                1345,
                                1346,
                                1369,
                                1340,
                                1362,
                                1363,
                                1330,
                                1331,
                                1332,
                                1334,
                                1335,
                                1337,
                                1328
                            ],
                            "hasmanydetails.crudId": [
                                129
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "189": {
                        "hasMany": {
                            "inputs.crudId": [
                                1355,
                                1370,
                                1356,
                                1357,
                                1367,
                                1368,
                                1349,
                                1348,
                                1350,
                                1351,
                                1352
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "190": {
                        "hasMany": {
                            "inputs.crudId": [
                                1372,
                                1371,
                                1375,
                                1376,
                                1377,
                                1374,
                                1378
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "191": {
                        "hasMany": {
                            "inputs.crudId": [
                                1379,
                                1380,
                                1386,
                                1384,
                                1388,
                                1382,
                                1418,
                                1387
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "195": {
                        "hasMany": {
                            "inputs.crudId": [
                                1396,
                                1397,
                                1398
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "196": {
                        "hasMany": {
                            "inputs.crudId": [
                                1399,
                                1400,
                                1401,
                                1403,
                                1404,
                                1405,
                                1412,
                                1413,
                                1410,
                                1411,
                                1408,
                                1402
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_158": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Users",
                "url": "users",
                "modelId": 184,
                "projectId": 12,
                "hasManyDetailId": null,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "Users List",
                    "create": "Create User",
                    "edit": "Edit User",
                    "update": "Update User",
                    "show": "Show User",
                    "new": "New User"
                },
                "hasApi": false,
                "isHasManyDetail": false,
                "isManyToManyDetail": false,
                "isForLivewire": false,
                "id": 158,
                "createdAt": "2023-05-11 05:40:04",
                "updatedAt": "2023-12-29 06:14:40"
            },
            "item_187": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "User Activity Logs",
                "url": "user-activity-logs",
                "modelId": 205,
                "projectId": 12,
                "hasManyDetailId": null,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "User Activity Logs List",
                    "create": "Create User Activity Log",
                    "edit": "Edit User Activity Log",
                    "update": "Update UserActivityLog",
                    "show": "Show User Activity Log",
                    "new": "New User Activity Log"
                },
                "hasApi": true,
                "isHasManyDetail": false,
                "isManyToManyDetail": false,
                "isForLivewire": false,
                "id": 187,
                "createdAt": "2024-05-01 22:17:22",
                "updatedAt": "2024-05-01 23:13:09"
            },
            "item_188": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Records",
                "url": "records",
                "modelId": 185,
                "projectId": 12,
                "hasManyDetailId": null,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "Records List",
                    "create": "Create Record",
                    "edit": "Edit Record",
                    "update": "Update Record",
                    "show": "Show Record",
                    "new": "New Record"
                },
                "hasApi": true,
                "isHasManyDetail": false,
                "isManyToManyDetail": false,
                "isForLivewire": false,
                "id": 188,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-01 23:15:22"
            },
            "item_189": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Record Subrecords",
                "url": "subrecords",
                "modelId": 204,
                "projectId": 12,
                "hasManyDetailId": 129,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "Subrecords List",
                    "create": "Create Subrecord",
                    "edit": "Edit Subrecord",
                    "update": "Update Subrecord",
                    "show": "Show Subrecord",
                    "new": "New Subrecord"
                },
                "hasApi": false,
                "isHasManyDetail": true,
                "isManyToManyDetail": false,
                "isForLivewire": true,
                "id": 189,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-05-28 21:53:55"
            },
            "item_190": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "User Uploads",
                "url": "user-uploads",
                "modelId": 206,
                "projectId": 12,
                "hasManyDetailId": null,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "UserUploads List",
                    "create": "Create User Upload",
                    "edit": "Edit User Upload",
                    "update": "Update UserUpload",
                    "show": "Show User Upload",
                    "new": "New User Upload"
                },
                "hasApi": true,
                "isHasManyDetail": false,
                "isManyToManyDetail": false,
                "isForLivewire": false,
                "id": 190,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-02 22:32:08"
            },
            "item_191": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "User Galleries",
                "url": "user-galleries",
                "modelId": 207,
                "projectId": 12,
                "hasManyDetailId": null,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "User Galleries List",
                    "create": "Create User Gallery",
                    "edit": "Edit User Gallery",
                    "update": "Update UserGallery",
                    "show": "Show User Gallery",
                    "new": "New User Gallery"
                },
                "hasApi": true,
                "isHasManyDetail": false,
                "isManyToManyDetail": false,
                "isForLivewire": false,
                "id": 191,
                "createdAt": "2024-05-02 22:32:17",
                "updatedAt": "2024-05-02 22:36:30"
            },
            "item_196": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Subrecords",
                "url": "subrecords",
                "modelId": 204,
                "projectId": 12,
                "hasManyDetailId": null,
                "manyToManyDetailId": null,
                "titles": {
                    "index": "Subrecords List",
                    "create": "Create Subrecord",
                    "edit": "Edit Subrecord",
                    "update": "Update Subrecord",
                    "show": "Show Subrecord",
                    "new": "New Subrecord"
                },
                "hasApi": true,
                "isHasManyDetail": false,
                "isManyToManyDetail": false,
                "isForLivewire": false,
                "id": 196,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:53:59"
            }
        },
        "entities": {
            "entities": {
                "count": 127,
                "lastPrimaryKey": 210,
                "index": {
                    "1": {
                        "hasMany": {
                            "fields.entityId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11
                            ],
                            "projects.authModelId": [
                                1
                            ],
                            "cruds.modelId": [
                                1
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "fields.entityId": [
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39
                            ],
                            "cruds.modelId": [
                                2
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "fields.entityId": [
                                47,
                                408,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57
                            ],
                            "projects.authModelId": [
                                2
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {
                            "fields.entityId": [
                                58,
                                93,
                                94,
                                493,
                                74,
                                75,
                                76,
                                77,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                90,
                                89,
                                91,
                                92,
                                107,
                                147,
                                157,
                                165,
                                174,
                                182,
                                189,
                                197,
                                205,
                                213
                            ],
                            "foreigns.relatedEntityId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                54,
                                56
                            ],
                            "basicrelationships.localModelId": [
                                7,
                                9,
                                11,
                                13,
                                19,
                                21,
                                23,
                                25,
                                27,
                                1,
                                3,
                                5,
                                15,
                                17,
                                107,
                                111
                            ],
                            "basicrelationships.modelId": [
                                8,
                                10,
                                12,
                                14,
                                16,
                                18,
                                20,
                                22,
                                24,
                                26,
                                28,
                                2,
                                4,
                                6,
                                108,
                                112
                            ],
                            "cruds.modelId": [
                                5
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {
                            "fields.entityId": [
                                95,
                                105,
                                100,
                                104,
                                101,
                                99,
                                103,
                                102,
                                96
                            ],
                            "basicrelationships.modelId": [
                                1
                            ],
                            "basicrelationships.localModelId": [
                                2
                            ],
                            "cruds.modelId": [
                                6
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {
                            "fields.entityId": [
                                108,
                                113,
                                114,
                                115,
                                112,
                                109
                            ],
                            "basicrelationships.modelId": [
                                3
                            ],
                            "basicrelationships.localModelId": [
                                4
                            ],
                            "cruds.modelId": [
                                7
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {
                            "fields.entityId": [
                                116,
                                121,
                                122,
                                123,
                                120,
                                117
                            ],
                            "basicrelationships.modelId": [
                                5
                            ],
                            "basicrelationships.localModelId": [
                                6
                            ],
                            "cruds.modelId": [
                                8
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {
                            "fields.entityId": [
                                124,
                                128,
                                127,
                                131
                            ],
                            "basicrelationships.modelId": [
                                7
                            ],
                            "basicrelationships.localModelId": [
                                8
                            ],
                            "cruds.modelId": [
                                9
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {
                            "fields.entityId": [
                                132,
                                136,
                                138,
                                133
                            ],
                            "basicrelationships.modelId": [
                                9
                            ],
                            "basicrelationships.localModelId": [
                                10
                            ],
                            "cruds.modelId": [
                                10
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {
                            "fields.entityId": [
                                139,
                                146,
                                142,
                                143,
                                144,
                                145,
                                140
                            ],
                            "basicrelationships.modelId": [
                                11
                            ],
                            "basicrelationships.localModelId": [
                                12
                            ],
                            "cruds.modelId": [
                                11
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {
                            "fields.entityId": [
                                148,
                                156,
                                155,
                                149,
                                154,
                                153,
                                152,
                                151,
                                150
                            ],
                            "basicrelationships.modelId": [
                                13
                            ],
                            "basicrelationships.localModelId": [
                                14
                            ],
                            "cruds.modelId": [
                                12
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {
                            "fields.entityId": [
                                158,
                                164,
                                160,
                                163,
                                162,
                                161,
                                159
                            ],
                            "basicrelationships.modelId": [
                                15
                            ],
                            "basicrelationships.localModelId": [
                                16
                            ],
                            "cruds.modelId": [
                                13
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "fields.entityId": [
                                166,
                                173,
                                168,
                                172,
                                171,
                                170,
                                167
                            ],
                            "basicrelationships.modelId": [
                                17
                            ],
                            "basicrelationships.localModelId": [
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {
                            "fields.entityId": [
                                181,
                                177,
                                180,
                                179,
                                178,
                                175,
                                176
                            ],
                            "basicrelationships.modelId": [
                                19
                            ],
                            "basicrelationships.localModelId": [
                                20
                            ],
                            "cruds.modelId": [
                                14
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {
                            "fields.entityId": [
                                183,
                                188,
                                185,
                                187,
                                186,
                                184
                            ],
                            "basicrelationships.modelId": [
                                21
                            ],
                            "basicrelationships.localModelId": [
                                22
                            ],
                            "cruds.modelId": [
                                15
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {
                            "fields.entityId": [
                                190,
                                196,
                                192,
                                195,
                                194,
                                193,
                                191
                            ],
                            "basicrelationships.modelId": [
                                23
                            ],
                            "basicrelationships.localModelId": [
                                24
                            ],
                            "cruds.modelId": [
                                16
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {
                            "fields.entityId": [
                                198,
                                200,
                                203,
                                202,
                                201,
                                199
                            ],
                            "basicrelationships.modelId": [
                                25
                            ],
                            "basicrelationships.localModelId": [
                                26
                            ],
                            "cruds.modelId": [
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {
                            "fields.entityId": [
                                206,
                                211,
                                212,
                                209,
                                210,
                                208
                            ],
                            "basicrelationships.modelId": [
                                27
                            ],
                            "basicrelationships.localModelId": [
                                28
                            ],
                            "cruds.modelId": [
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {
                            "fields.entityId": [
                                215,
                                216,
                                217,
                                218,
                                219,
                                220,
                                221,
                                222,
                                223,
                                224,
                                225
                            ],
                            "projects.authModelId": [
                                3
                            ],
                            "cruds.modelId": [
                                19
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {
                            "fields.entityId": [
                                226,
                                227,
                                228,
                                229,
                                230,
                                231
                            ],
                            "basicrelationships.modelId": [
                                30
                            ],
                            "basicrelationships.localModelId": [
                                29
                            ],
                            "cruds.modelId": [
                                20
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {
                            "fields.entityId": [
                                232,
                                233,
                                234,
                                235,
                                236,
                                237
                            ],
                            "basicrelationships.modelId": [
                                32
                            ],
                            "basicrelationships.localModelId": [
                                31
                            ],
                            "cruds.modelId": [
                                21
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "23": {
                        "hasMany": {
                            "fields.entityId": [
                                238,
                                239,
                                240,
                                241,
                                242,
                                243,
                                244,
                                245,
                                246,
                                247,
                                248
                            ],
                            "basicrelationships.modelId": [
                                34
                            ],
                            "basicrelationships.localModelId": [
                                33
                            ],
                            "cruds.modelId": [
                                22
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {
                            "fields.entityId": [
                                249,
                                250,
                                251,
                                252,
                                253,
                                254,
                                255,
                                256,
                                257,
                                258,
                                259
                            ],
                            "basicrelationships.modelId": [
                                36
                            ],
                            "basicrelationships.localModelId": [
                                35
                            ],
                            "cruds.modelId": [
                                23
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {
                            "fields.entityId": [
                                260,
                                261,
                                262,
                                263,
                                264,
                                265
                            ],
                            "basicrelationships.modelId": [
                                38
                            ],
                            "basicrelationships.localModelId": [
                                37
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {
                            "fields.entityId": [
                                266,
                                267,
                                268,
                                269,
                                270,
                                271,
                                272,
                                273,
                                274,
                                275,
                                276
                            ],
                            "basicrelationships.modelId": [
                                40
                            ],
                            "basicrelationships.localModelId": [
                                39
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {
                            "fields.entityId": [
                                277,
                                278,
                                279,
                                280
                            ],
                            "basicrelationships.modelId": [
                                35,
                                42
                            ],
                            "basicrelationships.localModelId": [
                                41,
                                36
                            ],
                            "foreigns.relatedEntityId": [
                                18
                            ],
                            "cruds.modelId": [
                                24
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {
                            "fields.entityId": [
                                281,
                                282,
                                283,
                                284,
                                285,
                                286,
                                287,
                                288
                            ],
                            "basicrelationships.modelId": [
                                44
                            ],
                            "basicrelationships.localModelId": [
                                43
                            ],
                            "cruds.modelId": [
                                25
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "29": {
                        "hasMany": {
                            "fields.entityId": [
                                289,
                                290,
                                291,
                                292,
                                293,
                                294,
                                295,
                                296,
                                297
                            ],
                            "basicrelationships.modelId": [
                                46
                            ],
                            "basicrelationships.localModelId": [
                                45
                            ],
                            "cruds.modelId": [
                                26
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "30": {
                        "hasMany": {
                            "fields.entityId": [
                                298,
                                299,
                                300,
                                301,
                                302,
                                303,
                                304,
                                305,
                                306
                            ],
                            "basicrelationships.modelId": [
                                48
                            ],
                            "basicrelationships.localModelId": [
                                47
                            ],
                            "cruds.modelId": [
                                27
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "31": {
                        "hasMany": {
                            "fields.entityId": [
                                307,
                                308,
                                309,
                                310,
                                311,
                                312,
                                313,
                                314,
                                315,
                                316,
                                317,
                                318,
                                319
                            ],
                            "basicrelationships.modelId": [
                                50
                            ],
                            "basicrelationships.localModelId": [
                                49
                            ],
                            "cruds.modelId": [
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "32": {
                        "hasMany": {
                            "fields.entityId": [
                                320,
                                321,
                                322,
                                323,
                                324,
                                325,
                                326,
                                327,
                                328,
                                329,
                                330,
                                331,
                                332,
                                333,
                                334,
                                335,
                                336,
                                337,
                                338,
                                339,
                                340,
                                341,
                                342,
                                343,
                                344,
                                345,
                                346,
                                347,
                                348,
                                349,
                                350,
                                351,
                                352
                            ],
                            "cruds.modelId": [
                                29
                            ],
                            "foreigns.relatedEntityId": [
                                17,
                                16,
                                15,
                                21,
                                19,
                                20
                            ],
                            "basicrelationships.localModelId": [
                                34,
                                32,
                                30,
                                42,
                                38,
                                40
                            ],
                            "basicrelationships.modelId": [
                                33,
                                31,
                                29,
                                41,
                                37,
                                39
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "33": {
                        "hasMany": {
                            "fields.entityId": [
                                353,
                                354,
                                355,
                                356,
                                357,
                                358,
                                359,
                                360,
                                361,
                                362,
                                363,
                                364,
                                365,
                                366,
                                367,
                                368,
                                369,
                                370,
                                371,
                                372,
                                373,
                                374,
                                375,
                                376,
                                377,
                                378,
                                379,
                                380,
                                381,
                                382,
                                383,
                                384,
                                385,
                                386,
                                387,
                                388,
                                389,
                                390,
                                391,
                                392,
                                393,
                                394,
                                395,
                                396,
                                397,
                                398,
                                399,
                                400,
                                401,
                                402,
                                403,
                                404,
                                405,
                                406,
                                407
                            ],
                            "foreigns.relatedEntityId": [
                                24,
                                23,
                                22,
                                25
                            ],
                            "basicrelationships.localModelId": [
                                48,
                                46,
                                44,
                                50
                            ],
                            "basicrelationships.modelId": [
                                47,
                                45,
                                43,
                                49
                            ],
                            "cruds.modelId": [
                                30
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "fields.entityId": [
                                409,
                                412,
                                492,
                                422,
                                423,
                                424,
                                425,
                                426,
                                427,
                                428,
                                429,
                                430,
                                431,
                                432,
                                433,
                                434,
                                435,
                                410,
                                411,
                                421
                            ],
                            "foreigns.relatedEntityId": [
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                55,
                                57
                            ],
                            "basicrelationships.localModelId": [
                                51,
                                53,
                                55,
                                57,
                                59,
                                61,
                                71,
                                63,
                                73,
                                65,
                                75,
                                67,
                                77,
                                69,
                                109,
                                113
                            ],
                            "basicrelationships.modelId": [
                                52,
                                54,
                                56,
                                58,
                                60,
                                62,
                                64,
                                66,
                                68,
                                70,
                                72,
                                74,
                                76,
                                78,
                                110,
                                114
                            ],
                            "cruds.modelId": [
                                32
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "35": {
                        "hasMany": {
                            "fields.entityId": [
                                436,
                                437,
                                438,
                                439,
                                440
                            ],
                            "basicrelationships.modelId": [
                                51
                            ],
                            "basicrelationships.localModelId": [
                                52
                            ],
                            "cruds.modelId": [
                                34
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "36": {
                        "hasMany": {
                            "fields.entityId": [
                                441,
                                442,
                                443
                            ],
                            "basicrelationships.modelId": [
                                53
                            ],
                            "basicrelationships.localModelId": [
                                54
                            ],
                            "cruds.modelId": [
                                35
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "37": {
                        "hasMany": {
                            "fields.entityId": [
                                445,
                                446,
                                444
                            ],
                            "basicrelationships.modelId": [
                                55
                            ],
                            "basicrelationships.localModelId": [
                                56
                            ],
                            "cruds.modelId": [
                                36
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "fields.entityId": [
                                447,
                                448,
                                449,
                                450
                            ],
                            "basicrelationships.modelId": [
                                57
                            ],
                            "basicrelationships.localModelId": [
                                58
                            ],
                            "cruds.modelId": [
                                37
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "39": {
                        "hasMany": {
                            "fields.entityId": [
                                451,
                                454,
                                452,
                                453
                            ],
                            "basicrelationships.modelId": [
                                59
                            ],
                            "basicrelationships.localModelId": [
                                60
                            ],
                            "cruds.modelId": [
                                38
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "40": {
                        "hasMany": {
                            "fields.entityId": [
                                455,
                                456,
                                458,
                                457
                            ],
                            "basicrelationships.modelId": [
                                61
                            ],
                            "basicrelationships.localModelId": [
                                62
                            ],
                            "cruds.modelId": [
                                39
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "41": {
                        "hasMany": {
                            "fields.entityId": [
                                459,
                                460,
                                462,
                                463,
                                461
                            ],
                            "basicrelationships.modelId": [
                                63
                            ],
                            "basicrelationships.localModelId": [
                                64
                            ],
                            "cruds.modelId": [
                                40
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "42": {
                        "hasMany": {
                            "fields.entityId": [
                                464,
                                465,
                                467,
                                466
                            ],
                            "basicrelationships.modelId": [
                                65
                            ],
                            "basicrelationships.localModelId": [
                                66
                            ],
                            "cruds.modelId": [
                                41
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "43": {
                        "hasMany": {
                            "fields.entityId": [
                                468,
                                469,
                                471,
                                470
                            ],
                            "basicrelationships.modelId": [
                                67
                            ],
                            "basicrelationships.localModelId": [
                                68
                            ],
                            "cruds.modelId": [
                                47
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "44": {
                        "hasMany": {
                            "fields.entityId": [
                                472,
                                473,
                                475,
                                474
                            ],
                            "basicrelationships.modelId": [
                                69
                            ],
                            "basicrelationships.localModelId": [
                                70
                            ],
                            "cruds.modelId": [
                                48
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "45": {
                        "hasMany": {
                            "fields.entityId": [
                                476,
                                479,
                                478,
                                477
                            ],
                            "basicrelationships.modelId": [
                                71
                            ],
                            "basicrelationships.localModelId": [
                                72
                            ],
                            "cruds.modelId": [
                                49
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "46": {
                        "hasMany": {
                            "fields.entityId": [
                                480,
                                481,
                                483,
                                482
                            ],
                            "basicrelationships.modelId": [
                                73
                            ],
                            "basicrelationships.localModelId": [
                                74
                            ],
                            "cruds.modelId": [
                                50
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "47": {
                        "hasMany": {
                            "fields.entityId": [
                                484,
                                487,
                                486,
                                485
                            ],
                            "basicrelationships.modelId": [
                                75
                            ],
                            "basicrelationships.localModelId": [
                                76
                            ],
                            "cruds.modelId": [
                                51
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "48": {
                        "hasMany": {
                            "fields.entityId": [
                                488,
                                491,
                                490,
                                489
                            ],
                            "basicrelationships.modelId": [
                                77
                            ],
                            "basicrelationships.localModelId": [
                                78
                            ],
                            "cruds.modelId": [
                                52
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "49": {
                        "hasMany": {
                            "fields.entityId": [
                                494,
                                495,
                                496,
                                497,
                                498,
                                499,
                                500,
                                501,
                                502,
                                503,
                                504
                            ],
                            "projects.authModelId": [
                                4
                            ],
                            "cruds.modelId": [
                                53
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "50": {
                        "hasMany": {
                            "fields.entityId": [
                                505,
                                506,
                                507,
                                508,
                                509
                            ],
                            "basicrelationships.modelId": [
                                80
                            ],
                            "basicrelationships.localModelId": [
                                79
                            ],
                            "cruds.modelId": [
                                54
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "51": {
                        "hasMany": {
                            "fields.entityId": [
                                510,
                                511,
                                512,
                                513
                            ],
                            "basicrelationships.modelId": [
                                82
                            ],
                            "basicrelationships.localModelId": [
                                81
                            ],
                            "cruds.modelId": [
                                55
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "52": {
                        "hasMany": {
                            "fields.entityId": [
                                514,
                                515,
                                516,
                                517,
                                518,
                                519,
                                520
                            ],
                            "cruds.modelId": [
                                56
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "53": {
                        "hasMany": {
                            "fields.entityId": [
                                521,
                                522,
                                523,
                                524,
                                525,
                                526,
                                527,
                                528,
                                529
                            ],
                            "foreigns.relatedEntityId": [
                                42
                            ],
                            "basicrelationships.localModelId": [
                                84
                            ],
                            "basicrelationships.modelId": [
                                83
                            ],
                            "cruds.modelId": [
                                58
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "54": {
                        "hasMany": {
                            "fields.entityId": [
                                530,
                                531,
                                532,
                                533,
                                534
                            ],
                            "basicrelationships.modelId": [
                                84
                            ],
                            "basicrelationships.localModelId": [
                                83
                            ],
                            "cruds.modelId": [
                                57
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "55": {
                        "hasMany": {
                            "fields.entityId": [
                                535,
                                536,
                                537,
                                538,
                                539,
                                540,
                                541,
                                542,
                                543,
                                544,
                                545,
                                546,
                                547,
                                548,
                                549,
                                550,
                                551,
                                552,
                                553,
                                554,
                                555,
                                556,
                                557,
                                558,
                                559,
                                560,
                                561,
                                562,
                                563,
                                564,
                                565,
                                566,
                                567,
                                568,
                                569,
                                570,
                                571,
                                572,
                                573,
                                574,
                                575,
                                576,
                                577,
                                578
                            ],
                            "foreigns.relatedEntityId": [
                                40,
                                41
                            ],
                            "basicrelationships.localModelId": [
                                80,
                                82
                            ],
                            "basicrelationships.modelId": [
                                79,
                                81
                            ],
                            "cruds.modelId": [
                                59
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "56": {
                        "hasMany": {
                            "fields.entityId": [
                                579,
                                580,
                                581,
                                582,
                                583,
                                584,
                                585,
                                586,
                                587,
                                588,
                                589,
                                590
                            ],
                            "projects.authModelId": [
                                5
                            ],
                            "cruds.modelId": [
                                60
                            ],
                            "foreigns.relatedEntityId": [
                                123,
                                182
                            ],
                            "basicrelationships.localModelId": [
                                245,
                                364
                            ],
                            "basicrelationships.modelId": [
                                246,
                                363
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "57": {
                        "hasMany": {
                            "fields.entityId": [
                                591,
                                592,
                                600,
                                593,
                                594,
                                595,
                                596,
                                1477
                            ],
                            "basicrelationships.modelId": [
                                244,
                                262,
                                264,
                                266,
                                365
                            ],
                            "basicrelationships.localModelId": [
                                243,
                                261,
                                263,
                                265,
                                366
                            ],
                            "cruds.modelId": [
                                61
                            ],
                            "foreigns.relatedEntityId": [
                                122,
                                131,
                                132,
                                133,
                                183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "58": {
                        "hasMany": {
                            "fields.entityId": [
                                601,
                                602,
                                603,
                                604,
                                606,
                                621,
                                1475,
                                620,
                                628,
                                605,
                                634,
                                636,
                                635,
                                607,
                                608,
                                609,
                                610,
                                622,
                                633,
                                627,
                                629,
                                630,
                                631,
                                632,
                                611,
                                612,
                                613,
                                614,
                                615,
                                616,
                                617,
                                1476,
                                1490,
                                1491,
                                1492,
                                1479
                            ],
                            "basicrelationships.modelId": [
                                98,
                                265,
                                248,
                                267,
                                269
                            ],
                            "basicrelationships.localModelId": [
                                247,
                                266,
                                268,
                                270,
                                97
                            ],
                            "cruds.modelId": [
                                152
                            ],
                            "foreigns.relatedEntityId": [
                                49
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "fields.entityId": [
                                638,
                                1481,
                                639,
                                679,
                                677,
                                671,
                                670,
                                680,
                                682,
                                658,
                                659,
                                672,
                                663,
                                664,
                                676,
                                642,
                                1493
                            ],
                            "basicrelationships.modelId": [
                                261
                            ],
                            "basicrelationships.localModelId": [
                                262
                            ],
                            "cruds.modelId": [
                                65
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "61": {
                        "hasMany": {
                            "fields.entityId": [
                                683,
                                686,
                                684,
                                685
                            ],
                            "basicrelationships.modelId": [
                                97
                            ],
                            "basicrelationships.localModelId": [
                                98
                            ],
                            "cruds.modelId": [
                                153
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "62": {
                        "hasMany": {
                            "fields.entityId": [
                                687,
                                688,
                                689,
                                690,
                                691,
                                692,
                                693,
                                694,
                                695,
                                696,
                                697
                            ],
                            "projects.authModelId": [
                                6
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "63": {
                        "hasMany": {
                            "fields.entityId": [
                                698,
                                702,
                                701,
                                700,
                                699,
                                703,
                                704,
                                705
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "64": {
                        "hasMany": {
                            "fields.entityId": [
                                706,
                                707,
                                708,
                                709,
                                710,
                                711,
                                712,
                                713,
                                714,
                                715,
                                716,
                                717,
                                719,
                                720,
                                721,
                                722,
                                723,
                                718,
                                727,
                                725,
                                724,
                                726,
                                728,
                                729,
                                730,
                                731
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "65": {
                        "hasMany": {
                            "fields.entityId": [
                                732,
                                733,
                                734,
                                735,
                                736,
                                737,
                                738,
                                739,
                                740
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "66": {
                        "hasMany": {
                            "fields.entityId": [
                                741,
                                742,
                                743,
                                744,
                                745,
                                746,
                                747,
                                748,
                                749,
                                750,
                                751,
                                752
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "67": {
                        "hasMany": {
                            "fields.entityId": [
                                753,
                                754,
                                755,
                                756,
                                757,
                                758,
                                759,
                                760,
                                761,
                                762,
                                763,
                                764,
                                765,
                                766,
                                767,
                                768
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "68": {
                        "hasMany": {
                            "fields.entityId": [
                                769,
                                771,
                                772,
                                773,
                                774,
                                770
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "69": {
                        "hasMany": {
                            "fields.entityId": [
                                775,
                                776,
                                777,
                                778,
                                779,
                                849,
                                850,
                                851,
                                852
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "70": {
                        "hasMany": {
                            "fields.entityId": [
                                780,
                                781,
                                782,
                                783,
                                784,
                                785,
                                786,
                                787,
                                788,
                                789,
                                790
                            ],
                            "projects.authModelId": [
                                7
                            ],
                            "cruds.modelId": [
                                67
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "71": {
                        "hasMany": {
                            "fields.entityId": [
                                791,
                                823,
                                794,
                                795,
                                796,
                                797,
                                798,
                                799,
                                800,
                                801,
                                802,
                                792,
                                793
                            ],
                            "cruds.modelId": [
                                73,
                                77
                            ],
                            "foreigns.relatedEntityId": [],
                            "basicrelationships.modelId": [
                                102
                            ],
                            "basicrelationships.localModelId": [
                                101
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "75": {
                        "hasMany": {
                            "fields.entityId": [
                                825,
                                828,
                                827,
                                826,
                                830,
                                831,
                                829,
                                832,
                                833,
                                834
                            ],
                            "cruds.modelId": [
                                76
                            ],
                            "foreigns.relatedEntityId": [
                                51,
                                53
                            ],
                            "basicrelationships.modelId": [
                                101,
                                106
                            ],
                            "basicrelationships.localModelId": [
                                102,
                                105
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "76": {
                        "hasMany": {
                            "fields.entityId": [
                                835,
                                837,
                                838,
                                839,
                                840,
                                841,
                                842,
                                843,
                                846,
                                848,
                                847
                            ],
                            "basicrelationships.modelId": [
                                105
                            ],
                            "basicrelationships.localModelId": [
                                106
                            ],
                            "cruds.modelId": [
                                78
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "78": {
                        "hasMany": {
                            "fields.entityId": [
                                853,
                                854,
                                855,
                                856,
                                857,
                                858,
                                859,
                                860
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "79": {
                        "hasMany": {
                            "fields.entityId": [
                                861,
                                862,
                                863,
                                864,
                                865,
                                866,
                                867,
                                868,
                                869,
                                870
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "80": {
                        "hasMany": {
                            "fields.entityId": [
                                871,
                                872,
                                873,
                                874,
                                875,
                                876,
                                877,
                                878,
                                879,
                                880,
                                881,
                                882,
                                883,
                                884
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "81": {
                        "hasMany": {
                            "fields.entityId": [
                                885,
                                886,
                                887,
                                888,
                                890,
                                889,
                                891,
                                892,
                                893,
                                894,
                                895,
                                896,
                                897,
                                898,
                                899,
                                900,
                                901,
                                902,
                                903,
                                904,
                                905,
                                906,
                                907,
                                908
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "82": {
                        "hasMany": {
                            "fields.entityId": [
                                910,
                                911,
                                912,
                                913,
                                914,
                                915,
                                916,
                                917,
                                918,
                                919,
                                920,
                                921,
                                922,
                                923,
                                924,
                                925,
                                926,
                                927,
                                928,
                                929,
                                930,
                                931,
                                932,
                                933,
                                934
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "83": {
                        "hasMany": {
                            "fields.entityId": [
                                935,
                                936,
                                937,
                                938,
                                939,
                                940,
                                941,
                                942,
                                943,
                                944,
                                945
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "84": {
                        "hasMany": {
                            "fields.entityId": [
                                946,
                                947,
                                948,
                                949,
                                950,
                                951,
                                952,
                                953,
                                954,
                                955
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "85": {
                        "hasMany": {
                            "fields.entityId": [
                                956,
                                957,
                                958,
                                959,
                                960,
                                961
                            ],
                            "basicrelationships.modelId": [
                                107
                            ],
                            "basicrelationships.localModelId": [
                                108
                            ],
                            "cruds.modelId": [
                                80
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "86": {
                        "hasMany": {
                            "fields.entityId": [
                                962,
                                963,
                                964,
                                965
                            ],
                            "basicrelationships.modelId": [
                                109
                            ],
                            "basicrelationships.localModelId": [
                                110
                            ],
                            "cruds.modelId": [
                                79
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "87": {
                        "hasMany": {
                            "fields.entityId": [
                                966,
                                967,
                                968,
                                969,
                                970,
                                971
                            ],
                            "basicrelationships.modelId": [
                                111
                            ],
                            "basicrelationships.localModelId": [
                                112
                            ],
                            "cruds.modelId": [
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "88": {
                        "hasMany": {
                            "fields.entityId": [
                                972,
                                973,
                                974,
                                975
                            ],
                            "basicrelationships.modelId": [
                                113
                            ],
                            "basicrelationships.localModelId": [
                                114
                            ],
                            "cruds.modelId": [
                                81
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "159": {
                        "hasMany": {
                            "fields.entityId": [
                                1471,
                                1474,
                                1473,
                                1472
                            ],
                            "basicrelationships.modelId": [
                                245,
                                243
                            ],
                            "basicrelationships.localModelId": [
                                244,
                                246
                            ],
                            "cruds.modelId": [
                                154,
                                149
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "160": {
                        "hasMany": {
                            "fields.entityId": [
                                1478,
                                1480
                            ],
                            "foreigns.relatedEntityId": [
                                124
                            ],
                            "basicrelationships.modelId": [
                                247
                            ],
                            "basicrelationships.localModelId": [
                                248
                            ],
                            "cruds.modelId": [
                                151
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "161": {
                        "hasMany": {
                            "fields.entityId": [
                                1483,
                                1486,
                                1489,
                                1488,
                                1487,
                                1495,
                                1484
                            ],
                            "basicrelationships.modelId": [
                                268,
                                270,
                                263
                            ],
                            "basicrelationships.localModelId": [
                                264,
                                267,
                                269
                            ],
                            "foreigns.relatedEntityId": [
                                134,
                                135
                            ],
                            "cruds.modelId": [
                                156
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "162": {
                        "hasMany": {
                            "fields.entityId": [
                                1496,
                                1497,
                                1498,
                                1499,
                                1500,
                                1501,
                                1502,
                                1503,
                                1504,
                                1505,
                                1506
                            ],
                            "projects.authModelId": [
                                10
                            ],
                            "foreigns.relatedEntityId": [
                                138
                            ],
                            "basicrelationships.localModelId": [
                                275
                            ],
                            "basicrelationships.modelId": [
                                276
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "163": {
                        "hasMany": {
                            "fields.entityId": [
                                1507,
                                1508,
                                1509
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "164": {
                        "hasMany": {
                            "fields.entityId": [
                                1510,
                                1513,
                                1514,
                                1515,
                                1517,
                                1516,
                                1511,
                                1512
                            ],
                            "basicrelationships.modelId": [
                                287,
                                298
                            ],
                            "basicrelationships.localModelId": [
                                288,
                                297
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "165": {
                        "hasMany": {
                            "fields.entityId": [
                                1518,
                                1519,
                                1520,
                                1614,
                                1522,
                                1523,
                                1524,
                                1525
                            ],
                            "basicrelationships.modelId": [
                                295,
                                297
                            ],
                            "basicrelationships.localModelId": [
                                296,
                                298
                            ],
                            "foreigns.relatedEntityId": [
                                149
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "166": {
                        "hasMany": {
                            "fields.entityId": [
                                1526,
                                1527,
                                1528,
                                1529,
                                1530,
                                1537,
                                1531,
                                1532
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "167": {
                        "hasMany": {
                            "fields.entityId": [
                                1533,
                                1552,
                                1553,
                                1534,
                                1536,
                                1538,
                                1535
                            ],
                            "foreigns.relatedEntityId": [
                                136
                            ],
                            "basicrelationships.localModelId": [
                                271
                            ],
                            "basicrelationships.modelId": [
                                272
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "168": {
                        "hasMany": {
                            "fields.entityId": [
                                1539,
                                1550,
                                1551,
                                1540,
                                1541,
                                1542
                            ],
                            "foreigns.relatedEntityId": [
                                137
                            ],
                            "basicrelationships.localModelId": [
                                273
                            ],
                            "basicrelationships.modelId": [
                                274
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "169": {
                        "hasMany": {
                            "fields.entityId": [
                                1543,
                                1548,
                                1549,
                                1546,
                                1547,
                                1544,
                                1545
                            ],
                            "basicrelationships.modelId": [
                                271,
                                273,
                                280
                            ],
                            "basicrelationships.localModelId": [
                                272,
                                274,
                                279
                            ],
                            "foreigns.relatedEntityId": [
                                140
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "170": {
                        "hasMany": {
                            "fields.entityId": [
                                1554,
                                1555,
                                1556,
                                1558,
                                1560,
                                1561,
                                1562,
                                1563,
                                1564,
                                1565,
                                1566,
                                1567,
                                1568,
                                1559,
                                1557
                            ],
                            "basicrelationships.modelId": [
                                275,
                                282,
                                284
                            ],
                            "basicrelationships.localModelId": [
                                276,
                                281,
                                283
                            ],
                            "foreigns.relatedEntityId": [
                                141,
                                142
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "171": {
                        "hasMany": {
                            "fields.entityId": [
                                1569,
                                1572,
                                1573,
                                1574,
                                1575,
                                1571,
                                1570
                            ],
                            "foreigns.relatedEntityId": [
                                139
                            ],
                            "basicrelationships.localModelId": [
                                277
                            ],
                            "basicrelationships.modelId": [
                                278
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "172": {
                        "hasMany": {
                            "fields.entityId": [
                                1576,
                                1577,
                                1578,
                                1579,
                                1580,
                                1581
                            ],
                            "basicrelationships.modelId": [
                                277,
                                279
                            ],
                            "basicrelationships.localModelId": [
                                278,
                                280
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "173": {
                        "hasMany": {
                            "fields.entityId": [
                                1582,
                                1583,
                                1584,
                                1585,
                                1586,
                                1587,
                                1588,
                                1589,
                                1590,
                                1591,
                                1592,
                                1593,
                                1594,
                                1595,
                                1596,
                                1597,
                                1598,
                                1599,
                                1600,
                                1601,
                                1602,
                                1603,
                                1604,
                                1605,
                                1606,
                                1608,
                                1609,
                                1607,
                                1610
                            ],
                            "basicrelationships.modelId": [
                                281,
                                283,
                                288,
                                296,
                                300,
                                302
                            ],
                            "basicrelationships.localModelId": [
                                282,
                                284,
                                287,
                                295,
                                299,
                                301
                            ],
                            "foreigns.relatedEntityId": [
                                144,
                                148,
                                150,
                                151
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "174": {
                        "hasMany": {
                            "fields.entityId": [
                                1616,
                                1617,
                                1618,
                                1619,
                                1620,
                                1621,
                                1622,
                                1623,
                                1624,
                                1625,
                                1626,
                                1628,
                                1629,
                                1630,
                                1631,
                                1632,
                                1633,
                                1634,
                                1635,
                                1636,
                                1637,
                                1638,
                                1639,
                                1627,
                                1659,
                                1660,
                                1661,
                                1662
                            ],
                            "basicrelationships.modelId": [
                                299,
                                304
                            ],
                            "basicrelationships.localModelId": [
                                300,
                                303
                            ],
                            "foreigns.relatedEntityId": [
                                152
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "175": {
                        "hasMany": {
                            "fields.entityId": [
                                1640,
                                1641,
                                1644,
                                1643,
                                1642,
                                1645,
                                1646
                            ],
                            "basicrelationships.modelId": [
                                301,
                                305
                            ],
                            "basicrelationships.localModelId": [
                                302,
                                306
                            ],
                            "foreigns.relatedEntityId": [
                                153
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "176": {
                        "hasMany": {
                            "fields.entityId": [
                                1647,
                                1648,
                                1649,
                                1653,
                                1654,
                                1655,
                                1656,
                                1657,
                                1650,
                                1651,
                                1652
                            ],
                            "basicrelationships.modelId": [
                                303,
                                306
                            ],
                            "basicrelationships.localModelId": [
                                304,
                                305
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "177": {
                        "hasMany": {
                            "fields.entityId": [
                                1663,
                                1664,
                                1665,
                                1666,
                                1667,
                                1668,
                                1669,
                                1670,
                                1671,
                                1672,
                                1673
                            ],
                            "projects.authModelId": [
                                11
                            ],
                            "foreigns.relatedEntityId": [
                                157
                            ],
                            "basicrelationships.localModelId": [
                                314
                            ],
                            "basicrelationships.modelId": [
                                313
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "178": {
                        "hasMany": {
                            "fields.entityId": [
                                1674,
                                1682,
                                1687,
                                1684,
                                1685,
                                1686,
                                1683,
                                1697,
                                1713,
                                1714,
                                1675,
                                1676
                            ],
                            "foreigns.relatedEntityId": [
                                154,
                                155,
                                158,
                                160
                            ],
                            "basicrelationships.localModelId": [
                                307,
                                309,
                                315,
                                319
                            ],
                            "basicrelationships.modelId": [
                                308,
                                310,
                                316,
                                320
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "179": {
                        "hasMany": {
                            "fields.entityId": [
                                1677,
                                1678,
                                1693,
                                1709,
                                1679,
                                1681
                            ],
                            "basicrelationships.modelId": [
                                307
                            ],
                            "basicrelationships.localModelId": [
                                308
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "180": {
                        "hasMany": {
                            "fields.entityId": [
                                1688,
                                1690,
                                1694,
                                1705,
                                1706,
                                1695
                            ],
                            "basicrelationships.modelId": [
                                309
                            ],
                            "basicrelationships.localModelId": [
                                310
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "181": {
                        "hasMany": {
                            "fields.entityId": [
                                1698,
                                1700,
                                1701,
                                1699
                            ],
                            "basicrelationships.localModelId": [
                                313
                            ],
                            "basicrelationships.modelId": [
                                314
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "182": {
                        "hasMany": {
                            "fields.entityId": [
                                1702,
                                1703,
                                1710,
                                1711,
                                1704,
                                1712,
                                1707,
                                1708
                            ],
                            "basicrelationships.modelId": [
                                315,
                                318,
                                317,
                                322
                            ],
                            "basicrelationships.localModelId": [
                                316,
                                318,
                                317,
                                321
                            ],
                            "foreigns.relatedEntityId": [
                                159,
                                161
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "183": {
                        "hasMany": {
                            "fields.entityId": [
                                1715,
                                1716,
                                1718,
                                1717
                            ],
                            "basicrelationships.modelId": [
                                319,
                                321
                            ],
                            "basicrelationships.localModelId": [
                                320,
                                322
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "184": {
                        "hasMany": {
                            "fields.entityId": [
                                1720,
                                1721,
                                1722,
                                1723,
                                1724,
                                1725,
                                1726,
                                1727,
                                1728,
                                1729,
                                1719
                            ],
                            "projects.authModelId": [
                                12
                            ],
                            "cruds.modelId": [
                                158
                            ],
                            "foreigns.relatedEntityId": [
                                162,
                                185,
                                186,
                                187
                            ],
                            "basicrelationships.localModelId": [
                                369,
                                371,
                                373,
                                324
                            ],
                            "basicrelationships.modelId": [
                                370,
                                372,
                                374,
                                323
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "185": {
                        "hasMany": {
                            "fields.entityId": [
                                1730,
                                2001,
                                2002,
                                1743,
                                1995,
                                1735,
                                1736,
                                1996,
                                1739,
                                1738,
                                1737,
                                1742,
                                1734,
                                1733,
                                1732,
                                1740,
                                1741,
                                2044,
                                1997,
                                2038,
                                1731,
                                2039
                            ],
                            "basicrelationships.modelId": [
                                368,
                                324
                            ],
                            "basicrelationships.localModelId": [
                                367,
                                323
                            ],
                            "cruds.modelId": [
                                188
                            ],
                            "foreigns.relatedEntityId": [
                                184
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "190": {
                        "hasMany": {
                            "fields.entityId": [
                                1788,
                                1789,
                                1791,
                                1795,
                                1793,
                                1794,
                                1790
                            ],
                            "cruds.modelId": [
                                162
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "192": {
                        "hasMany": {
                            "fields.entityId": [
                                1798,
                                1800,
                                1801,
                                1799
                            ],
                            "cruds.modelId": [
                                166
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "193": {
                        "hasMany": {
                            "fields.entityId": [
                                1802,
                                1804,
                                1805,
                                1803
                            ],
                            "cruds.modelId": [
                                167
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "194": {
                        "hasMany": {
                            "fields.entityId": [
                                1806,
                                1807
                            ],
                            "cruds.modelId": [
                                165
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "195": {
                        "hasMany": {
                            "fields.entityId": [
                                1898,
                                1899,
                                1900,
                                1901
                            ],
                            "basicrelationships.modelId": [
                                346
                            ],
                            "basicrelationships.localModelId": [
                                345
                            ],
                            "cruds.modelId": [
                                177
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "196": {
                        "hasMany": {
                            "fields.entityId": [
                                1902,
                                1903
                            ],
                            "foreigns.relatedEntityId": [
                                174
                            ],
                            "basicrelationships.modelId": [
                                347
                            ],
                            "basicrelationships.localModelId": [
                                348
                            ],
                            "cruds.modelId": [
                                178
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "197": {
                        "hasMany": {
                            "fields.entityId": [
                                1904,
                                1905,
                                1906,
                                1907,
                                1908,
                                1909,
                                1910,
                                1911,
                                1912,
                                1913,
                                1914,
                                1915
                            ],
                            "projects.authModelId": [
                                15
                            ],
                            "cruds.modelId": [
                                180
                            ],
                            "foreigns.relatedEntityId": [
                                175
                            ],
                            "basicrelationships.localModelId": [
                                350
                            ],
                            "basicrelationships.modelId": [
                                349
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "198": {
                        "hasMany": {
                            "fields.entityId": [
                                1916,
                                1917,
                                1918,
                                1919,
                                1920,
                                1921,
                                1922
                            ],
                            "basicrelationships.modelId": [
                                351,
                                353,
                                356
                            ],
                            "basicrelationships.localModelId": [
                                355,
                                352,
                                354
                            ],
                            "foreigns.relatedEntityId": [
                                176,
                                177
                            ],
                            "cruds.modelId": [
                                181
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "199": {
                        "hasMany": {
                            "fields.entityId": [
                                1923,
                                1924,
                                1925,
                                1926,
                                1927,
                                1928,
                                1929,
                                1930,
                                1931,
                                1932,
                                1933,
                                1934,
                                1935,
                                1936,
                                1937,
                                1938,
                                1939
                            ],
                            "basicrelationships.modelId": [
                                358
                            ],
                            "basicrelationships.localModelId": [
                                357
                            ],
                            "cruds.modelId": [
                                182
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "200": {
                        "hasMany": {
                            "fields.entityId": [
                                1940,
                                1941,
                                1942,
                                1943
                            ],
                            "basicrelationships.modelId": [
                                350,
                                360
                            ],
                            "basicrelationships.localModelId": [
                                359,
                                349
                            ],
                            "cruds.modelId": [
                                179,
                                183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "201": {
                        "hasMany": {
                            "fields.entityId": [
                                1944,
                                1945,
                                1946,
                                1947,
                                1948,
                                1949,
                                1950,
                                1951,
                                1952,
                                1953,
                                1954,
                                1955,
                                1956,
                                1957,
                                1958,
                                1959,
                                1960,
                                1961,
                                1962,
                                1963,
                                1964,
                                1965,
                                1966,
                                1967,
                                1968,
                                1969,
                                1970,
                                1971,
                                1972,
                                1973,
                                1974,
                                1975,
                                1976,
                                1977,
                                1978,
                                1979
                            ],
                            "basicrelationships.modelId": [
                                345,
                                362,
                                348,
                                352,
                                354
                            ],
                            "basicrelationships.localModelId": [
                                347,
                                361,
                                351,
                                353,
                                346
                            ],
                            "cruds.modelId": [
                                184
                            ],
                            "foreigns.relatedEntityId": [
                                173
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "202": {
                        "hasMany": {
                            "fields.entityId": [
                                1980,
                                1981,
                                1982,
                                1983,
                                1984,
                                1985,
                                1986,
                                1987
                            ],
                            "basicrelationships.modelId": [
                                359,
                                357,
                                355,
                                361
                            ],
                            "basicrelationships.localModelId": [
                                360,
                                358,
                                356,
                                362
                            ],
                            "cruds.modelId": [
                                185
                            ],
                            "foreigns.relatedEntityId": [
                                180,
                                179,
                                178,
                                181
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "203": {
                        "hasMany": {
                            "fields.entityId": [
                                1988,
                                1989,
                                1990,
                                1992,
                                1993,
                                1994
                            ],
                            "basicrelationships.localModelId": [
                                363,
                                365
                            ],
                            "basicrelationships.modelId": [
                                364,
                                366
                            ],
                            "cruds.modelId": [
                                186
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "204": {
                        "hasMany": {
                            "fields.entityId": [
                                1998,
                                2004,
                                2005,
                                2006,
                                2003,
                                2045,
                                2008,
                                2009,
                                2010,
                                2007,
                                2041,
                                2042,
                                2011
                            ],
                            "basicrelationships.modelId": [
                                367
                            ],
                            "basicrelationships.localModelId": [
                                368
                            ],
                            "cruds.modelId": [
                                196,
                                189
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "205": {
                        "hasMany": {
                            "fields.entityId": [
                                2012,
                                2016,
                                2017,
                                2018,
                                2015,
                                2037,
                                2014
                            ],
                            "basicrelationships.modelId": [
                                369
                            ],
                            "basicrelationships.localModelId": [
                                370
                            ],
                            "cruds.modelId": [
                                187
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "206": {
                        "hasMany": {
                            "fields.entityId": [
                                2019,
                                2020,
                                2024,
                                2022,
                                2025,
                                2026,
                                2027,
                                2021
                            ],
                            "basicrelationships.modelId": [
                                371
                            ],
                            "basicrelationships.localModelId": [
                                372
                            ],
                            "cruds.modelId": [
                                190
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "207": {
                        "hasMany": {
                            "fields.entityId": [
                                2028,
                                2030,
                                2031,
                                2036,
                                2034,
                                2033,
                                2035,
                                2032,
                                2029
                            ],
                            "basicrelationships.modelId": [
                                373
                            ],
                            "basicrelationships.localModelId": [
                                374
                            ],
                            "cruds.modelId": [
                                191
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "210": {
                        "hasMany": {
                            "fields.entityId": [
                                2061,
                                2062,
                                2063,
                                2064,
                                2065,
                                2066,
                                2067,
                                2068,
                                2069,
                                2070,
                                2060
                            ],
                            "projects.authModelId": [
                                17
                            ],
                            "cruds.modelId": [
                                195
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_185": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Record",
                "type": "model",
                "plural": "Records",
                "pluralAndSingularAreSame": false,
                "table": "records",
                "projectId": 12,
                "top": "381px",
                "left": "750px",
                "pivot": false,
                "softDeletes": false,
                "timestamps": true,
                "needsCentralization": false,
                "migrationName": "2024_05_01_000001_create_records_table.php",
                "foreignsMigrationName": "2024_05_01_009001_add_foreigns_to_records_table.php",
                "generatesMigration": true,
                "oldMigrationName": null,
                "oldForeignsMigrationName": null,
                "id": 185,
                "createdAt": "2023-05-11 06:07:15",
                "updatedAt": "2024-06-04 06:16:39"
            },
            "item_204": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Subrecord",
                "type": "model",
                "plural": "Subrecords",
                "pluralAndSingularAreSame": false,
                "table": "subrecords",
                "projectId": 12,
                "top": "385px",
                "left": "1142px",
                "pivot": false,
                "softDeletes": false,
                "timestamps": true,
                "needsCentralization": false,
                "migrationName": "2024_05_01_000002_create_subrecords_table.php",
                "foreignsMigrationName": "2024_05_01_009002_add_foreigns_to_subrecords_table.php",
                "generatesMigration": true,
                "oldMigrationName": null,
                "oldForeignsMigrationName": null,
                "id": 204,
                "createdAt": "2024-05-01 09:57:22",
                "updatedAt": "2024-05-02 22:41:12"
            },
            "item_184": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "projectId": 12,
                "name": "User",
                "type": "model",
                "table": "users",
                "plural": "Users",
                "top": "254px",
                "left": "126px",
                "pivot": false,
                "softDeletes": false,
                "timestamps": true,
                "needsCentralization": false,
                "pluralAndSingularAreSame": false,
                "migrationName": "2014_10_12_000000_create_users_table.php",
                "foreignsMigrationName": null,
                "generatesMigration": true,
                "oldMigrationName": null,
                "oldForeignsMigrationName": null,
                "id": 184,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2024-05-09 19:50:12"
            },
            "item_205": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "UserActivityLog",
                "type": "model",
                "plural": "UserActivityLogs",
                "pluralAndSingularAreSame": false,
                "table": "user_activity_logs",
                "projectId": 12,
                "top": "46px",
                "left": "-484px",
                "pivot": false,
                "softDeletes": false,
                "timestamps": false,
                "needsCentralization": false,
                "migrationName": "2024_05_01_000003_create_user_activity_logs_table.php",
                "foreignsMigrationName": "2024_05_01_009003_add_foreigns_to_user_activity_logs_table.php",
                "generatesMigration": true,
                "oldMigrationName": null,
                "oldForeignsMigrationName": null,
                "id": 205,
                "createdAt": "2024-05-01 10:24:01",
                "updatedAt": "2024-05-09 17:19:14"
            },
            "item_207": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "UserGallery",
                "type": "model",
                "plural": "UserGalleries",
                "pluralAndSingularAreSame": false,
                "table": "user_galleries",
                "projectId": 12,
                "top": "681px",
                "left": "-450px",
                "pivot": false,
                "softDeletes": false,
                "timestamps": false,
                "needsCentralization": false,
                "migrationName": "2024_05_01_000004_create_user_galleries_table.php",
                "foreignsMigrationName": "2024_05_01_009004_add_foreigns_to_user_galleries_table.php",
                "generatesMigration": true,
                "oldMigrationName": null,
                "oldForeignsMigrationName": null,
                "id": 207,
                "createdAt": "2024-05-01 11:41:43",
                "updatedAt": "2024-05-02 22:41:12"
            },
            "item_206": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "UserUpload",
                "type": "model",
                "plural": "UserUploads",
                "pluralAndSingularAreSame": false,
                "table": "user_uploads",
                "projectId": 12,
                "top": "347px",
                "left": "-455px",
                "pivot": false,
                "softDeletes": false,
                "timestamps": false,
                "needsCentralization": false,
                "migrationName": "2024_05_01_000005_create_user_uploads_table.php",
                "foreignsMigrationName": "2024_05_01_009005_add_foreigns_to_user_uploads_table.php",
                "generatesMigration": true,
                "oldMigrationName": null,
                "oldForeignsMigrationName": null,
                "id": 206,
                "createdAt": "2024-05-01 10:37:37",
                "updatedAt": "2024-05-09 17:19:19"
            }
        },
        "fields": {
            "fields": {
                "count": 1392,
                "lastPrimaryKey": 2070,
                "index": {
                    "1": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "3": {
                        "hasMany": {
                            "inputs.fieldId": [
                                2
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {
                            "inputs.fieldId": [
                                3
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {
                            "inputs.fieldId": [
                                4
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {
                            "inputs.fieldId": [
                                5
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {
                            "inputs.fieldId": [
                                6
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {
                            "inputs.fieldId": [
                                7
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {
                            "inputs.fieldId": [
                                8
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {
                            "inputs.fieldId": [
                                9
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {
                            "inputs.fieldId": [
                                10
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {
                            "inputs.fieldId": [
                                11
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "23": {
                        "hasMany": {
                            "inputs.fieldId": [
                                12
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {
                            "inputs.fieldId": [
                                13
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {
                            "inputs.fieldId": [
                                14
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {
                            "inputs.fieldId": [
                                15
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {
                            "inputs.fieldId": [
                                16
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {
                            "inputs.fieldId": [
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "29": {
                        "hasMany": {
                            "inputs.fieldId": [
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "30": {
                        "hasMany": {
                            "inputs.fieldId": [
                                19
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "31": {
                        "hasMany": {
                            "inputs.fieldId": [
                                20
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "32": {
                        "hasMany": {
                            "inputs.fieldId": [
                                21
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "33": {
                        "hasMany": {
                            "inputs.fieldId": [
                                22
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "inputs.fieldId": [
                                23
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "35": {
                        "hasMany": {
                            "inputs.fieldId": [
                                24
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "36": {
                        "hasMany": {
                            "inputs.fieldId": [
                                25
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "37": {
                        "hasMany": {
                            "inputs.fieldId": [
                                26
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "inputs.fieldId": [
                                27
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "39": {
                        "hasMany": {
                            "inputs.fieldId": [
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "47": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "48": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "49": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "50": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "51": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "52": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "53": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "54": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "55": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "56": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "57": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "58": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                54,
                                56
                            ],
                            "basicrelationships.parentKeyId": [
                                7,
                                9,
                                11,
                                13,
                                19,
                                21,
                                23,
                                25,
                                27,
                                8,
                                10,
                                12,
                                14,
                                16,
                                18,
                                20,
                                22,
                                24,
                                26,
                                28,
                                2,
                                4,
                                6,
                                1,
                                3,
                                5,
                                15,
                                17,
                                108,
                                107,
                                112,
                                111
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "inputs.fieldId": [
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "61": {
                        "hasMany": {
                            "inputs.fieldId": [
                                83
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "62": {
                        "hasMany": {
                            "inputs.fieldId": [
                                84
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "63": {
                        "hasMany": {
                            "inputs.fieldId": [
                                85
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "64": {
                        "hasMany": {
                            "inputs.fieldId": [
                                86
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "65": {
                        "hasMany": {
                            "inputs.fieldId": [
                                87
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "66": {
                        "hasMany": {
                            "inputs.fieldId": [
                                88
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "67": {
                        "hasMany": {
                            "inputs.fieldId": [
                                89
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "68": {
                        "hasMany": {
                            "inputs.fieldId": [
                                90
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "69": {
                        "hasMany": {
                            "inputs.fieldId": [
                                91
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "70": {
                        "hasMany": {
                            "inputs.fieldId": [
                                92
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "71": {
                        "hasMany": {
                            "inputs.fieldId": [
                                93
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "72": {
                        "hasMany": {
                            "inputs.fieldId": [
                                94
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "73": {
                        "hasMany": {
                            "inputs.fieldId": [
                                95
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "74": {
                        "hasMany": {
                            "inputs.fieldId": [
                                77
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "75": {
                        "hasMany": {
                            "inputs.fieldId": [
                                79
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "76": {
                        "hasMany": {
                            "inputs.fieldId": [
                                80
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "77": {
                        "hasMany": {
                            "inputs.fieldId": [
                                81
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "78": {
                        "hasMany": {
                            "inputs.fieldId": [
                                120
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "79": {
                        "hasMany": {
                            "inputs.fieldId": [
                                121
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "80": {
                        "hasMany": {
                            "inputs.fieldId": [
                                122
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "81": {
                        "hasMany": {
                            "inputs.fieldId": [
                                123
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "82": {
                        "hasMany": {
                            "inputs.fieldId": [
                                124
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "83": {
                        "hasMany": {
                            "inputs.fieldId": [
                                125
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "84": {
                        "hasMany": {
                            "inputs.fieldId": [
                                126
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "85": {
                        "hasMany": {
                            "inputs.fieldId": [
                                127
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "86": {
                        "hasMany": {
                            "inputs.fieldId": [
                                128
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "87": {
                        "hasMany": {
                            "inputs.fieldId": [
                                105
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "89": {
                        "hasMany": {
                            "inputs.fieldId": [
                                107
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "90": {
                        "hasMany": {
                            "inputs.fieldId": [
                                106
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "91": {
                        "hasMany": {
                            "inputs.fieldId": [
                                129
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "92": {
                        "hasMany": {
                            "inputs.fieldId": [
                                130
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "93": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "94": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "95": {
                        "hasMany": {
                            "basicrelationships.parentKeyId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "96": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                1
                            ],
                            "basicrelationships.foreignKeyId": [
                                2,
                                1
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "99": {
                        "hasMany": {
                            "inputs.fieldId": [
                                131
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "100": {
                        "hasMany": {
                            "inputs.fieldId": [
                                133
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "101": {
                        "hasMany": {
                            "inputs.fieldId": [
                                135
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "102": {
                        "hasMany": {
                            "inputs.fieldId": [
                                136
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "103": {
                        "hasMany": {
                            "inputs.fieldId": [
                                138
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "104": {
                        "hasMany": {
                            "inputs.fieldId": [
                                134
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "105": {
                        "hasMany": {
                            "inputs.fieldId": [
                                132
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "107": {
                        "hasMany": {
                            "inputs.fieldId": [
                                110
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "108": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "109": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                2
                            ],
                            "basicrelationships.foreignKeyId": [
                                4,
                                3
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "112": {
                        "hasMany": {
                            "inputs.fieldId": [
                                139
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "113": {
                        "hasMany": {
                            "inputs.fieldId": [
                                140
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "114": {
                        "hasMany": {
                            "inputs.fieldId": [
                                141
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "115": {
                        "hasMany": {
                            "inputs.fieldId": [
                                142
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "116": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "117": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                3
                            ],
                            "basicrelationships.foreignKeyId": [
                                6,
                                5
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "120": {
                        "hasMany": {
                            "inputs.fieldId": [
                                143
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "121": {
                        "hasMany": {
                            "inputs.fieldId": [
                                144
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "122": {
                        "hasMany": {
                            "inputs.fieldId": [
                                145
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "123": {
                        "hasMany": {
                            "inputs.fieldId": [
                                146
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "124": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "127": {
                        "hasMany": {
                            "inputs.fieldId": [
                                147
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "128": {
                        "hasMany": {
                            "inputs.fieldId": [
                                148
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "131": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                4
                            ],
                            "basicrelationships.foreignKeyId": [
                                7,
                                8
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "132": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "133": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                5
                            ],
                            "basicrelationships.foreignKeyId": [
                                9,
                                10
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "136": {
                        "hasMany": {
                            "inputs.fieldId": [
                                149
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "138": {
                        "hasMany": {
                            "inputs.fieldId": [
                                150
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "139": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "140": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                6
                            ],
                            "basicrelationships.foreignKeyId": [
                                11,
                                12
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "142": {
                        "hasMany": {
                            "inputs.fieldId": [
                                151
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "143": {
                        "hasMany": {
                            "inputs.fieldId": [
                                167
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "144": {
                        "hasMany": {
                            "inputs.fieldId": [
                                168
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "145": {
                        "hasMany": {
                            "inputs.fieldId": [
                                169
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "146": {
                        "hasMany": {
                            "inputs.fieldId": [
                                155
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "147": {
                        "hasMany": {
                            "inputs.fieldId": [
                                111
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "148": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "149": {
                        "hasMany": {
                            "inputs.fieldId": [
                                156
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "150": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                7
                            ],
                            "basicrelationships.foreignKeyId": [
                                13,
                                14
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "151": {
                        "hasMany": {
                            "inputs.fieldId": [
                                163
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "152": {
                        "hasMany": {
                            "inputs.fieldId": [
                                164
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "153": {
                        "hasMany": {
                            "inputs.fieldId": [
                                165
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "154": {
                        "hasMany": {
                            "inputs.fieldId": [
                                166
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "155": {
                        "hasMany": {
                            "inputs.fieldId": [
                                162
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "156": {
                        "hasMany": {
                            "inputs.fieldId": [
                                157
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "157": {
                        "hasMany": {
                            "inputs.fieldId": [
                                112
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "158": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "159": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                8
                            ],
                            "basicrelationships.foreignKeyId": [
                                16,
                                15
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "160": {
                        "hasMany": {
                            "inputs.fieldId": [
                                170
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "161": {
                        "hasMany": {
                            "inputs.fieldId": [
                                175
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "162": {
                        "hasMany": {
                            "inputs.fieldId": [
                                176
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "163": {
                        "hasMany": {
                            "inputs.fieldId": [
                                177
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "164": {
                        "hasMany": {
                            "inputs.fieldId": [
                                174
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "165": {
                        "hasMany": {
                            "inputs.fieldId": [
                                113
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "166": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "167": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                9
                            ],
                            "basicrelationships.foreignKeyId": [
                                18,
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "168": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "170": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "171": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "172": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "173": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "174": {
                        "hasMany": {
                            "inputs.fieldId": [
                                114
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "175": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "176": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                10
                            ],
                            "basicrelationships.foreignKeyId": [
                                19,
                                20
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "177": {
                        "hasMany": {
                            "inputs.fieldId": [
                                178
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "178": {
                        "hasMany": {
                            "inputs.fieldId": [
                                183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "179": {
                        "hasMany": {
                            "inputs.fieldId": [
                                184
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "180": {
                        "hasMany": {
                            "inputs.fieldId": [
                                185
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "181": {
                        "hasMany": {
                            "inputs.fieldId": [
                                182
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "182": {
                        "hasMany": {
                            "inputs.fieldId": [
                                115
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "183": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "184": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                11
                            ],
                            "basicrelationships.foreignKeyId": [
                                21,
                                22
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "185": {
                        "hasMany": {
                            "inputs.fieldId": [
                                186
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "186": {
                        "hasMany": {
                            "inputs.fieldId": [
                                190
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "187": {
                        "hasMany": {
                            "inputs.fieldId": [
                                191
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "188": {
                        "hasMany": {
                            "inputs.fieldId": [
                                189
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "189": {
                        "hasMany": {
                            "inputs.fieldId": [
                                116
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "190": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "191": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                12
                            ],
                            "basicrelationships.foreignKeyId": [
                                23,
                                24
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "192": {
                        "hasMany": {
                            "inputs.fieldId": [
                                192
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "193": {
                        "hasMany": {
                            "inputs.fieldId": [
                                197
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "194": {
                        "hasMany": {
                            "inputs.fieldId": [
                                198
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "195": {
                        "hasMany": {
                            "inputs.fieldId": [
                                199
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "196": {
                        "hasMany": {
                            "inputs.fieldId": [
                                196
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "197": {
                        "hasMany": {
                            "inputs.fieldId": [
                                117
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "198": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "199": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                13
                            ],
                            "basicrelationships.foreignKeyId": [
                                25,
                                26
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "200": {
                        "hasMany": {
                            "inputs.fieldId": [
                                200
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "201": {
                        "hasMany": {
                            "inputs.fieldId": [
                                204
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "202": {
                        "hasMany": {
                            "inputs.fieldId": [
                                205
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "203": {
                        "hasMany": {
                            "inputs.fieldId": [
                                203
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "205": {
                        "hasMany": {
                            "inputs.fieldId": [
                                118
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "206": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "208": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                14
                            ],
                            "basicrelationships.foreignKeyId": [
                                27,
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "209": {
                        "hasMany": {
                            "inputs.fieldId": [
                                206
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "210": {
                        "hasMany": {
                            "inputs.fieldId": [
                                210
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "211": {
                        "hasMany": {
                            "inputs.fieldId": [
                                211
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "212": {
                        "hasMany": {
                            "inputs.fieldId": [
                                209
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "213": {
                        "hasMany": {
                            "inputs.fieldId": [
                                119
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "215": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "216": {
                        "hasMany": {
                            "inputs.fieldId": [
                                212
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "217": {
                        "hasMany": {
                            "inputs.fieldId": [
                                213
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "218": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "219": {
                        "hasMany": {
                            "inputs.fieldId": [
                                214
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "220": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "221": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "222": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "223": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "224": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "225": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "226": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "227": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                15
                            ],
                            "basicrelationships.foreignKeyId": [
                                29,
                                30
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "228": {
                        "hasMany": {
                            "inputs.fieldId": [
                                218
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "229": {
                        "hasMany": {
                            "inputs.fieldId": [
                                217
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "230": {
                        "hasMany": {
                            "inputs.fieldId": [
                                216
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "231": {
                        "hasMany": {
                            "inputs.fieldId": [
                                215
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "232": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "233": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                16
                            ],
                            "basicrelationships.foreignKeyId": [
                                31,
                                32
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "234": {
                        "hasMany": {
                            "inputs.fieldId": [
                                222
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "235": {
                        "hasMany": {
                            "inputs.fieldId": [
                                219
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "236": {
                        "hasMany": {
                            "inputs.fieldId": [
                                220
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "237": {
                        "hasMany": {
                            "inputs.fieldId": [
                                221
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "238": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "239": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                17
                            ],
                            "basicrelationships.foreignKeyId": [
                                33,
                                34
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "240": {
                        "hasMany": {
                            "inputs.fieldId": [
                                227
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "241": {
                        "hasMany": {
                            "inputs.fieldId": [
                                226
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "242": {
                        "hasMany": {
                            "inputs.fieldId": [
                                223
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "243": {
                        "hasMany": {
                            "inputs.fieldId": [
                                224
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "244": {
                        "hasMany": {
                            "inputs.fieldId": [
                                225
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "245": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "246": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "247": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "248": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "249": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "250": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                18
                            ],
                            "basicrelationships.foreignKeyId": [
                                35,
                                36
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "251": {
                        "hasMany": {
                            "inputs.fieldId": [
                                231
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "252": {
                        "hasMany": {
                            "inputs.fieldId": [
                                232
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "253": {
                        "hasMany": {
                            "inputs.fieldId": [
                                233
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "254": {
                        "hasMany": {
                            "inputs.fieldId": [
                                234
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "255": {
                        "hasMany": {
                            "inputs.fieldId": [
                                235
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "256": {
                        "hasMany": {
                            "inputs.fieldId": [
                                228
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "257": {
                        "hasMany": {
                            "inputs.fieldId": [
                                230
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "258": {
                        "hasMany": {
                            "inputs.fieldId": [
                                229
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "259": {
                        "hasMany": {
                            "inputs.fieldId": [
                                236
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "260": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "261": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                19
                            ],
                            "basicrelationships.foreignKeyId": [
                                37,
                                38
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "262": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "263": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "264": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "265": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "266": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "267": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                20
                            ],
                            "basicrelationships.foreignKeyId": [
                                39,
                                40
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "268": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "269": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "270": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "271": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "272": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "273": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "274": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "275": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "276": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "277": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                18
                            ],
                            "basicrelationships.parentKeyId": [
                                35,
                                36
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "278": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                21
                            ],
                            "basicrelationships.foreignKeyId": [
                                41,
                                42
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "279": {
                        "hasMany": {
                            "inputs.fieldId": [
                                237
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "280": {
                        "hasMany": {
                            "inputs.fieldId": [
                                238
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "281": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "282": {
                        "hasMany": {
                            "inputs.fieldId": [
                                239
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "283": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "284": {
                        "hasMany": {
                            "inputs.fieldId": [
                                240
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "285": {
                        "hasMany": {
                            "inputs.fieldId": [
                                241
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "286": {
                        "hasMany": {
                            "inputs.fieldId": [
                                242
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "287": {
                        "hasMany": {
                            "inputs.fieldId": [
                                243
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "288": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                22
                            ],
                            "basicrelationships.foreignKeyId": [
                                43,
                                44
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "289": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "290": {
                        "hasMany": {
                            "inputs.fieldId": [
                                244
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "291": {
                        "hasMany": {
                            "inputs.fieldId": [
                                245
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "292": {
                        "hasMany": {
                            "inputs.fieldId": [
                                246
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "293": {
                        "hasMany": {
                            "inputs.fieldId": [
                                247
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "294": {
                        "hasMany": {
                            "inputs.fieldId": [
                                248
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "295": {
                        "hasMany": {
                            "inputs.fieldId": [
                                249
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "296": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "297": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                23
                            ],
                            "basicrelationships.foreignKeyId": [
                                45,
                                46
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "298": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "299": {
                        "hasMany": {
                            "inputs.fieldId": [
                                250
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "300": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "301": {
                        "hasMany": {
                            "inputs.fieldId": [
                                251
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "302": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                24
                            ],
                            "basicrelationships.foreignKeyId": [
                                47,
                                48
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "303": {
                        "hasMany": {
                            "inputs.fieldId": [
                                252
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "304": {
                        "hasMany": {
                            "inputs.fieldId": [
                                255
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "305": {
                        "hasMany": {
                            "inputs.fieldId": [
                                254
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "306": {
                        "hasMany": {
                            "inputs.fieldId": [
                                253
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "307": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "308": {
                        "hasMany": {
                            "inputs.fieldId": [
                                256
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "309": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "310": {
                        "hasMany": {
                            "inputs.fieldId": [
                                257
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "311": {
                        "hasMany": {
                            "inputs.fieldId": [
                                258
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "312": {
                        "hasMany": {
                            "inputs.fieldId": [
                                259
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "313": {
                        "hasMany": {
                            "inputs.fieldId": [
                                260
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "314": {
                        "hasMany": {
                            "inputs.fieldId": [
                                261
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "315": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                25
                            ],
                            "basicrelationships.foreignKeyId": [
                                49,
                                50
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "316": {
                        "hasMany": {
                            "inputs.fieldId": [
                                265
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "317": {
                        "hasMany": {
                            "inputs.fieldId": [
                                264
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "318": {
                        "hasMany": {
                            "inputs.fieldId": [
                                263
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "319": {
                        "hasMany": {
                            "inputs.fieldId": [
                                262
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "320": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                17,
                                16,
                                15,
                                21,
                                19,
                                20
                            ],
                            "basicrelationships.parentKeyId": [
                                33,
                                31,
                                29,
                                41,
                                37,
                                39,
                                34,
                                32,
                                30,
                                42,
                                38,
                                40
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "321": {
                        "hasMany": {
                            "inputs.fieldId": [
                                266
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "322": {
                        "hasMany": {
                            "inputs.fieldId": [
                                267
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "323": {
                        "hasMany": {
                            "inputs.fieldId": [
                                268
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "324": {
                        "hasMany": {
                            "inputs.fieldId": [
                                269
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "325": {
                        "hasMany": {
                            "inputs.fieldId": [
                                270
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "326": {
                        "hasMany": {
                            "inputs.fieldId": [
                                271
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "327": {
                        "hasMany": {
                            "inputs.fieldId": [
                                272
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "328": {
                        "hasMany": {
                            "inputs.fieldId": [
                                273
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "329": {
                        "hasMany": {
                            "inputs.fieldId": [
                                274
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "330": {
                        "hasMany": {
                            "inputs.fieldId": [
                                275
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "331": {
                        "hasMany": {
                            "inputs.fieldId": [
                                276
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "332": {
                        "hasMany": {
                            "inputs.fieldId": [
                                277
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "333": {
                        "hasMany": {
                            "inputs.fieldId": [
                                278
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "334": {
                        "hasMany": {
                            "inputs.fieldId": [
                                279
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "335": {
                        "hasMany": {
                            "inputs.fieldId": [
                                280
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "336": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "337": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "338": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "339": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "340": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "341": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "342": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "343": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "344": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "345": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "346": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "347": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "348": {
                        "hasMany": {
                            "inputs.fieldId": [
                                281
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "349": {
                        "hasMany": {
                            "inputs.fieldId": [
                                282
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "350": {
                        "hasMany": {
                            "inputs.fieldId": [
                                283
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "351": {
                        "hasMany": {
                            "inputs.fieldId": [
                                284
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "352": {
                        "hasMany": {
                            "inputs.fieldId": [
                                285
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "353": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                24,
                                23,
                                22,
                                25
                            ],
                            "basicrelationships.parentKeyId": [
                                47,
                                45,
                                43,
                                49,
                                48,
                                46,
                                44,
                                50
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "354": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "355": {
                        "hasMany": {
                            "inputs.fieldId": [
                                286
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "356": {
                        "hasMany": {
                            "inputs.fieldId": [
                                287
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "357": {
                        "hasMany": {
                            "inputs.fieldId": [
                                288
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "358": {
                        "hasMany": {
                            "inputs.fieldId": [
                                289
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "359": {
                        "hasMany": {
                            "inputs.fieldId": [
                                290
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "360": {
                        "hasMany": {
                            "inputs.fieldId": [
                                291
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "361": {
                        "hasMany": {
                            "inputs.fieldId": [
                                292
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "362": {
                        "hasMany": {
                            "inputs.fieldId": [
                                293
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "363": {
                        "hasMany": {
                            "inputs.fieldId": [
                                294
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "364": {
                        "hasMany": {
                            "inputs.fieldId": [
                                295
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "365": {
                        "hasMany": {
                            "inputs.fieldId": [
                                296
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "366": {
                        "hasMany": {
                            "inputs.fieldId": [
                                297
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "367": {
                        "hasMany": {
                            "inputs.fieldId": [
                                298
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "368": {
                        "hasMany": {
                            "inputs.fieldId": [
                                299
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "369": {
                        "hasMany": {
                            "inputs.fieldId": [
                                300
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "370": {
                        "hasMany": {
                            "inputs.fieldId": [
                                301
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "371": {
                        "hasMany": {
                            "inputs.fieldId": [
                                302
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "372": {
                        "hasMany": {
                            "inputs.fieldId": [
                                303
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "373": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "374": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "375": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "376": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "377": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "378": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "379": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "380": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "381": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "382": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "383": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "384": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "385": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "386": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "387": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "388": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "389": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "390": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "391": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "392": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "393": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "394": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "395": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "396": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "397": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "398": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "399": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "400": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "401": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "402": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "403": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "404": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "405": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "406": {
                        "hasMany": {
                            "inputs.fieldId": [
                                304
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "407": {
                        "hasMany": {
                            "inputs.fieldId": [
                                305
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "408": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "409": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                55,
                                57
                            ],
                            "basicrelationships.parentKeyId": [
                                52,
                                54,
                                56,
                                58,
                                60,
                                62,
                                64,
                                66,
                                68,
                                70,
                                72,
                                74,
                                76,
                                78,
                                51,
                                53,
                                55,
                                57,
                                59,
                                61,
                                71,
                                63,
                                73,
                                65,
                                75,
                                67,
                                77,
                                69,
                                110,
                                109,
                                114,
                                113
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "410": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "411": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "412": {
                        "hasMany": {
                            "inputs.fieldId": [
                                322
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "421": {
                        "hasMany": {
                            "inputs.fieldId": [
                                325
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "422": {
                        "hasMany": {
                            "inputs.fieldId": [
                                324
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "423": {
                        "hasMany": {
                            "inputs.fieldId": [
                                326
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "424": {
                        "hasMany": {
                            "inputs.fieldId": [
                                327
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "425": {
                        "hasMany": {
                            "inputs.fieldId": [
                                328
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "426": {
                        "hasMany": {
                            "inputs.fieldId": [
                                329
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "427": {
                        "hasMany": {
                            "inputs.fieldId": [
                                330
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "428": {
                        "hasMany": {
                            "inputs.fieldId": [
                                331
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "429": {
                        "hasMany": {
                            "inputs.fieldId": [
                                332
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "430": {
                        "hasMany": {
                            "inputs.fieldId": [
                                333
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "431": {
                        "hasMany": {
                            "inputs.fieldId": [
                                334
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "432": {
                        "hasMany": {
                            "inputs.fieldId": [
                                335
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "433": {
                        "hasMany": {
                            "inputs.fieldId": [
                                336
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "434": {
                        "hasMany": {
                            "inputs.fieldId": [
                                337
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "435": {
                        "hasMany": {
                            "inputs.fieldId": [
                                338
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "436": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "437": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                26
                            ],
                            "basicrelationships.foreignKeyId": [
                                52,
                                51
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "438": {
                        "hasMany": {
                            "inputs.fieldId": [
                                342
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "439": {
                        "hasMany": {
                            "inputs.fieldId": [
                                343
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "440": {
                        "hasMany": {
                            "inputs.fieldId": [
                                344
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "441": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "442": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                27
                            ],
                            "basicrelationships.foreignKeyId": [
                                54,
                                53
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "443": {
                        "hasMany": {
                            "inputs.fieldId": [
                                345
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "444": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "445": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                28
                            ],
                            "basicrelationships.foreignKeyId": [
                                56,
                                55
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "446": {
                        "hasMany": {
                            "inputs.fieldId": [
                                346
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "447": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "448": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                29
                            ],
                            "basicrelationships.foreignKeyId": [
                                58,
                                57
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "449": {
                        "hasMany": {
                            "inputs.fieldId": [
                                347
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "450": {
                        "hasMany": {
                            "inputs.fieldId": [
                                348
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "451": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "452": {
                        "hasMany": {
                            "inputs.fieldId": [
                                349
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "453": {
                        "hasMany": {
                            "inputs.fieldId": [
                                350
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "454": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                30
                            ],
                            "basicrelationships.foreignKeyId": [
                                60,
                                59
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "455": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "456": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                31
                            ],
                            "basicrelationships.foreignKeyId": [
                                62,
                                61
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "457": {
                        "hasMany": {
                            "inputs.fieldId": [
                                351
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "458": {
                        "hasMany": {
                            "inputs.fieldId": [
                                352
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "459": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "460": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                32
                            ],
                            "basicrelationships.foreignKeyId": [
                                64,
                                63
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "461": {
                        "hasMany": {
                            "inputs.fieldId": [
                                353
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "462": {
                        "hasMany": {
                            "inputs.fieldId": [
                                354
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "463": {
                        "hasMany": {
                            "inputs.fieldId": [
                                355
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "464": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "465": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                33
                            ],
                            "basicrelationships.foreignKeyId": [
                                66,
                                65
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "466": {
                        "hasMany": {
                            "inputs.fieldId": [
                                356
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "467": {
                        "hasMany": {
                            "inputs.fieldId": [
                                357
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "468": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "469": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                34
                            ],
                            "basicrelationships.foreignKeyId": [
                                68,
                                67
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "470": {
                        "hasMany": {
                            "inputs.fieldId": [
                                372
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "471": {
                        "hasMany": {
                            "inputs.fieldId": [
                                373
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "472": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "473": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                35
                            ],
                            "basicrelationships.foreignKeyId": [
                                70,
                                69
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "474": {
                        "hasMany": {
                            "inputs.fieldId": [
                                375
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "475": {
                        "hasMany": {
                            "inputs.fieldId": [
                                376
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "476": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "477": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                36
                            ],
                            "basicrelationships.foreignKeyId": [
                                72,
                                71
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "478": {
                        "hasMany": {
                            "inputs.fieldId": [
                                378
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "479": {
                        "hasMany": {
                            "inputs.fieldId": [
                                379
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "480": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "481": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                37
                            ],
                            "basicrelationships.foreignKeyId": [
                                74,
                                73
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "482": {
                        "hasMany": {
                            "inputs.fieldId": [
                                380
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "483": {
                        "hasMany": {
                            "inputs.fieldId": [
                                381
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "484": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "485": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                38
                            ],
                            "basicrelationships.foreignKeyId": [
                                76,
                                75
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "486": {
                        "hasMany": {
                            "inputs.fieldId": [
                                383
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "487": {
                        "hasMany": {
                            "inputs.fieldId": [
                                384
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "488": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "489": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                39
                            ],
                            "basicrelationships.foreignKeyId": [
                                78,
                                77
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "490": {
                        "hasMany": {
                            "inputs.fieldId": [
                                386
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "491": {
                        "hasMany": {
                            "inputs.fieldId": [
                                387
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "492": {
                        "hasMany": {
                            "inputs.fieldId": [
                                323
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "493": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "494": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "495": {
                        "hasMany": {
                            "inputs.fieldId": [
                                388
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "496": {
                        "hasMany": {
                            "inputs.fieldId": [
                                389
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "497": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "498": {
                        "hasMany": {
                            "inputs.fieldId": [
                                390
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "499": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "500": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "501": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "502": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "503": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "504": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "505": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "506": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                40
                            ],
                            "basicrelationships.foreignKeyId": [
                                79,
                                80
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "507": {
                        "hasMany": {
                            "inputs.fieldId": [
                                393
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "508": {
                        "hasMany": {
                            "inputs.fieldId": [
                                391
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "509": {
                        "hasMany": {
                            "inputs.fieldId": [
                                392
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "510": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "511": {
                        "hasMany": {
                            "inputs.fieldId": [
                                394
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "512": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "513": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                41
                            ],
                            "basicrelationships.foreignKeyId": [
                                81,
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "514": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "515": {
                        "hasMany": {
                            "inputs.fieldId": [
                                395
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "516": {
                        "hasMany": {
                            "inputs.fieldId": [
                                396
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "517": {
                        "hasMany": {
                            "inputs.fieldId": [
                                397
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "518": {
                        "hasMany": {
                            "inputs.fieldId": [
                                398
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "519": {
                        "hasMany": {
                            "inputs.fieldId": [
                                399
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "520": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "521": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                42
                            ],
                            "basicrelationships.parentKeyId": [
                                83,
                                84
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "522": {
                        "hasMany": {
                            "inputs.fieldId": [
                                403
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "523": {
                        "hasMany": {
                            "inputs.fieldId": [
                                404
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "524": {
                        "hasMany": {
                            "inputs.fieldId": [
                                405
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "525": {
                        "hasMany": {
                            "inputs.fieldId": [
                                406
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "526": {
                        "hasMany": {
                            "inputs.fieldId": [
                                407
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "527": {
                        "hasMany": {
                            "inputs.fieldId": [
                                408
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "528": {
                        "hasMany": {
                            "inputs.fieldId": [
                                409
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "529": {
                        "hasMany": {
                            "inputs.fieldId": [
                                410
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "530": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "531": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                42
                            ],
                            "basicrelationships.foreignKeyId": [
                                83,
                                84
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "532": {
                        "hasMany": {
                            "inputs.fieldId": [
                                401
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "533": {
                        "hasMany": {
                            "inputs.fieldId": [
                                402
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "534": {
                        "hasMany": {
                            "inputs.fieldId": [
                                400
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "535": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                40,
                                41
                            ],
                            "basicrelationships.parentKeyId": [
                                79,
                                80,
                                81,
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "536": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "537": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "538": {
                        "hasMany": {
                            "inputs.fieldId": [
                                411
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "539": {
                        "hasMany": {
                            "inputs.fieldId": [
                                412
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "540": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "541": {
                        "hasMany": {
                            "inputs.fieldId": [
                                413
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "542": {
                        "hasMany": {
                            "inputs.fieldId": [
                                414
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "543": {
                        "hasMany": {
                            "inputs.fieldId": [
                                415
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "544": {
                        "hasMany": {
                            "inputs.fieldId": [
                                416
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "545": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "546": {
                        "hasMany": {
                            "inputs.fieldId": [
                                417
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "547": {
                        "hasMany": {
                            "inputs.fieldId": [
                                418
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "548": {
                        "hasMany": {
                            "inputs.fieldId": [
                                419
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "549": {
                        "hasMany": {
                            "inputs.fieldId": [
                                420
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "550": {
                        "hasMany": {
                            "inputs.fieldId": [
                                421
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "551": {
                        "hasMany": {
                            "inputs.fieldId": [
                                422
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "552": {
                        "hasMany": {
                            "inputs.fieldId": [
                                423
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "553": {
                        "hasMany": {
                            "inputs.fieldId": [
                                424
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "554": {
                        "hasMany": {
                            "inputs.fieldId": [
                                425
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "555": {
                        "hasMany": {
                            "inputs.fieldId": [
                                426
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "556": {
                        "hasMany": {
                            "inputs.fieldId": [
                                427
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "557": {
                        "hasMany": {
                            "inputs.fieldId": [
                                428
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "558": {
                        "hasMany": {
                            "inputs.fieldId": [
                                429
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "559": {
                        "hasMany": {
                            "inputs.fieldId": [
                                430
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "560": {
                        "hasMany": {
                            "inputs.fieldId": [
                                431
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "561": {
                        "hasMany": {
                            "inputs.fieldId": [
                                432
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "562": {
                        "hasMany": {
                            "inputs.fieldId": [
                                433
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "563": {
                        "hasMany": {
                            "inputs.fieldId": [
                                434
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "564": {
                        "hasMany": {
                            "inputs.fieldId": [
                                435
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "565": {
                        "hasMany": {
                            "inputs.fieldId": [
                                436
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "566": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "567": {
                        "hasMany": {
                            "inputs.fieldId": [
                                437
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "568": {
                        "hasMany": {
                            "inputs.fieldId": [
                                438
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "569": {
                        "hasMany": {
                            "inputs.fieldId": [
                                439
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "570": {
                        "hasMany": {
                            "inputs.fieldId": [
                                440
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "571": {
                        "hasMany": {
                            "inputs.fieldId": [
                                441
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "572": {
                        "hasMany": {
                            "inputs.fieldId": [
                                442
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "573": {
                        "hasMany": {
                            "inputs.fieldId": [
                                443
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "574": {
                        "hasMany": {
                            "inputs.fieldId": [
                                444
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "575": {
                        "hasMany": {
                            "inputs.fieldId": [
                                445
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "576": {
                        "hasMany": {
                            "inputs.fieldId": [
                                446
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "577": {
                        "hasMany": {
                            "inputs.fieldId": [
                                447
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "578": {
                        "hasMany": {
                            "inputs.fieldId": [
                                448
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "579": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                123,
                                182
                            ],
                            "basicrelationships.parentKeyId": [
                                246,
                                245,
                                364,
                                363
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "580": {
                        "hasMany": {
                            "inputs.fieldId": [
                                449
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "581": {
                        "hasMany": {
                            "inputs.fieldId": [
                                450
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "582": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "583": {
                        "hasMany": {
                            "inputs.fieldId": [
                                451
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "584": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "585": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "586": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "587": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "588": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "589": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "590": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "591": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                122,
                                131,
                                132,
                                133,
                                183
                            ],
                            "basicrelationships.parentKeyId": [
                                244,
                                262,
                                264,
                                266,
                                243,
                                261,
                                263,
                                265,
                                366,
                                365
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "592": {
                        "hasMany": {
                            "inputs.fieldId": [
                                452
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "593": {
                        "hasMany": {
                            "inputs.fieldId": [
                                453
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "594": {
                        "hasMany": {
                            "inputs.fieldId": [
                                454
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "595": {
                        "hasMany": {
                            "inputs.fieldId": [
                                455
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "596": {
                        "hasMany": {
                            "inputs.fieldId": [
                                456
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "600": {
                        "hasMany": {
                            "inputs.fieldId": [
                                458,
                                457
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "601": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                49
                            ],
                            "basicrelationships.parentKeyId": [
                                98,
                                97
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "602": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "603": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "604": {
                        "hasMany": {
                            "inputs.fieldId": [
                                975
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "605": {
                        "hasMany": {
                            "inputs.fieldId": [
                                985
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "606": {
                        "hasMany": {
                            "inputs.fieldId": [
                                976
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "607": {
                        "hasMany": {
                            "inputs.fieldId": [
                                989
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "608": {
                        "hasMany": {
                            "inputs.fieldId": [
                                990
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "609": {
                        "hasMany": {
                            "inputs.fieldId": [
                                991
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "610": {
                        "hasMany": {
                            "inputs.fieldId": [
                                992,
                                1010
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "611": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1000
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "612": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1001
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "613": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1002
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "614": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1003
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "615": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1004
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "616": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1005
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "617": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1006
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "620": {
                        "hasMany": {
                            "inputs.fieldId": [
                                982
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "621": {
                        "hasMany": {
                            "inputs.fieldId": [
                                978
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "622": {
                        "hasMany": {
                            "inputs.fieldId": [
                                993
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "627": {
                        "hasMany": {
                            "inputs.fieldId": [
                                995
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "628": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1009
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "629": {
                        "hasMany": {
                            "inputs.fieldId": [
                                996
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "630": {
                        "hasMany": {
                            "inputs.fieldId": [
                                997
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "631": {
                        "hasMany": {
                            "inputs.fieldId": [
                                998
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "632": {
                        "hasMany": {
                            "inputs.fieldId": [
                                999,
                                1011
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "633": {
                        "hasMany": {
                            "inputs.fieldId": [
                                994
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "634": {
                        "hasMany": {
                            "inputs.fieldId": [
                                986
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "635": {
                        "hasMany": {
                            "inputs.fieldId": [
                                988
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "636": {
                        "hasMany": {
                            "inputs.fieldId": [
                                987
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "638": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "639": {
                        "hasMany": {
                            "inputs.fieldId": [
                                536
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "642": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "658": {
                        "hasMany": {
                            "inputs.fieldId": [
                                528
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "659": {
                        "hasMany": {
                            "inputs.fieldId": [
                                529
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "663": {
                        "hasMany": {
                            "inputs.fieldId": [
                                531
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "664": {
                        "hasMany": {
                            "inputs.fieldId": [
                                532
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "670": {
                        "hasMany": {
                            "inputs.fieldId": [
                                524
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "671": {
                        "hasMany": {
                            "inputs.fieldId": [
                                539
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "672": {
                        "hasMany": {
                            "inputs.fieldId": [
                                530
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "676": {
                        "hasMany": {
                            "inputs.fieldId": [
                                535
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "677": {
                        "hasMany": {
                            "inputs.fieldId": [
                                522
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "679": {
                        "hasMany": {
                            "inputs.fieldId": [
                                538
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "680": {
                        "hasMany": {
                            "inputs.fieldId": [
                                540
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "682": {
                        "hasMany": {
                            "inputs.fieldId": [
                                541
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "683": {
                        "hasMany": {
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "684": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1012
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "685": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                49
                            ],
                            "basicrelationships.foreignKeyId": [
                                98,
                                97
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "686": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1015
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "687": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "688": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "689": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "690": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "691": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "692": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "693": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "694": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "695": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "696": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "697": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "698": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "699": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "700": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "701": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "702": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "703": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "704": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "705": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "706": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "707": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "708": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "709": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "710": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "711": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "712": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "713": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "714": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "715": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "716": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "717": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "718": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "719": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "720": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "721": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "722": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "723": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "724": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "725": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "726": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "727": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "728": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "729": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "730": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "731": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "732": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "733": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "734": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "735": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "736": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "737": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "738": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "739": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "740": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "741": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "742": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "743": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "744": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "745": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "746": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "747": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "748": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "749": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "750": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "751": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "752": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "753": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "754": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "755": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "756": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "757": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "758": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "759": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "760": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "761": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "762": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "763": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "764": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "765": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "766": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "767": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "768": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "769": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "770": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "771": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "772": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "773": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "774": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "775": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "776": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "777": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "778": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "779": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "780": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "781": {
                        "hasMany": {
                            "inputs.fieldId": [
                                545
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "782": {
                        "hasMany": {
                            "inputs.fieldId": [
                                546
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "783": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "784": {
                        "hasMany": {
                            "inputs.fieldId": [
                                547
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "785": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "786": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "787": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "788": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "789": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "790": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "791": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [],
                            "basicrelationships.parentKeyId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "792": {
                        "hasMany": {
                            "inputs.fieldId": [
                                619,
                                583
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "793": {
                        "hasMany": {
                            "inputs.fieldId": [
                                573
                            ],
                            "foreigns.fieldId": [
                                51
                            ],
                            "basicrelationships.foreignKeyId": [
                                101,
                                102
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "794": {
                        "hasMany": {
                            "inputs.fieldId": [
                                574,
                                610
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "795": {
                        "hasMany": {
                            "inputs.fieldId": [
                                575,
                                611
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "796": {
                        "hasMany": {
                            "inputs.fieldId": [
                                576
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "797": {
                        "hasMany": {
                            "inputs.fieldId": [
                                577,
                                613
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "798": {
                        "hasMany": {
                            "inputs.fieldId": [
                                578,
                                614
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "799": {
                        "hasMany": {
                            "inputs.fieldId": [
                                579,
                                615
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "800": {
                        "hasMany": {
                            "inputs.fieldId": [
                                580,
                                616
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "801": {
                        "hasMany": {
                            "inputs.fieldId": [
                                581,
                                617
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "802": {
                        "hasMany": {
                            "inputs.fieldId": [
                                582,
                                618
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "823": {
                        "hasMany": {
                            "inputs.fieldId": [
                                609
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "825": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                51,
                                53
                            ],
                            "basicrelationships.parentKeyId": [
                                101,
                                102,
                                106,
                                105
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "826": {
                        "hasMany": {
                            "inputs.fieldId": [
                                599
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "827": {
                        "hasMany": {
                            "inputs.fieldId": [
                                600
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "828": {
                        "hasMany": {
                            "inputs.fieldId": [
                                601
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "829": {
                        "hasMany": {
                            "inputs.fieldId": [
                                602
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "830": {
                        "hasMany": {
                            "inputs.fieldId": [
                                603
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "831": {
                        "hasMany": {
                            "inputs.fieldId": [
                                604
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "832": {
                        "hasMany": {
                            "inputs.fieldId": [
                                605
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "833": {
                        "hasMany": {
                            "inputs.fieldId": [
                                606
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "834": {
                        "hasMany": {
                            "inputs.fieldId": [
                                607
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "835": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "837": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                53
                            ],
                            "basicrelationships.foreignKeyId": [
                                106,
                                105
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "838": {
                        "hasMany": {
                            "inputs.fieldId": [
                                621
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "839": {
                        "hasMany": {
                            "inputs.fieldId": [
                                622
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "840": {
                        "hasMany": {
                            "inputs.fieldId": [
                                623
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "841": {
                        "hasMany": {
                            "inputs.fieldId": [
                                624
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "842": {
                        "hasMany": {
                            "inputs.fieldId": [
                                625
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "843": {
                        "hasMany": {
                            "inputs.fieldId": [
                                626
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "846": {
                        "hasMany": {
                            "inputs.fieldId": [
                                627
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "847": {
                        "hasMany": {
                            "inputs.fieldId": [
                                628
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "848": {
                        "hasMany": {
                            "inputs.fieldId": [
                                629
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "849": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "850": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "851": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "852": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "853": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "854": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "855": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "856": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "857": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "858": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "859": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "860": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "861": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "862": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "863": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "864": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "865": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "866": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "867": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "868": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "869": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "870": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "871": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "872": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "873": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "874": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "875": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "876": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "877": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "878": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "879": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "880": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "881": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "882": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "883": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "884": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "885": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "886": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "887": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "888": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "889": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "890": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "891": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "892": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "893": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "894": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "895": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "896": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "897": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "898": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "899": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "900": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "901": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "902": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "903": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "904": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "905": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "906": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "907": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "908": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "910": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "911": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "912": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "913": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "914": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "915": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "916": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "917": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "918": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "919": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "920": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "921": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "922": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "923": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "924": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "925": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "926": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "927": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "928": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "929": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "930": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "931": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "932": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "933": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "934": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "935": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "936": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "937": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "938": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "939": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "940": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "941": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "942": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "943": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "944": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "945": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "946": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "947": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "948": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "949": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "950": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "951": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "952": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "953": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "954": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "955": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "956": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "957": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                54
                            ],
                            "basicrelationships.foreignKeyId": [
                                108,
                                107
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "958": {
                        "hasMany": {
                            "inputs.fieldId": [
                                633
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "959": {
                        "hasMany": {
                            "inputs.fieldId": [
                                634
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "960": {
                        "hasMany": {
                            "inputs.fieldId": [
                                635
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "961": {
                        "hasMany": {
                            "inputs.fieldId": [
                                636
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "962": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "963": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                55
                            ],
                            "basicrelationships.foreignKeyId": [
                                110,
                                109
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "964": {
                        "hasMany": {
                            "inputs.fieldId": [
                                631
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "965": {
                        "hasMany": {
                            "inputs.fieldId": [
                                632
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "966": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "967": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                56
                            ],
                            "basicrelationships.foreignKeyId": [
                                112,
                                111
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "968": {
                        "hasMany": {
                            "inputs.fieldId": [
                                641
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "969": {
                        "hasMany": {
                            "inputs.fieldId": [
                                642
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "970": {
                        "hasMany": {
                            "inputs.fieldId": [
                                643
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "971": {
                        "hasMany": {
                            "inputs.fieldId": [
                                644
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "972": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "973": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                57
                            ],
                            "basicrelationships.foreignKeyId": [
                                114,
                                113
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "974": {
                        "hasMany": {
                            "inputs.fieldId": [
                                638
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "975": {
                        "hasMany": {
                            "inputs.fieldId": [
                                639
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1471": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1472": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                122
                            ],
                            "basicrelationships.foreignKeyId": [
                                244,
                                243
                            ],
                            "inputs.fieldId": [
                                1070
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1473": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                123
                            ],
                            "basicrelationships.foreignKeyId": [
                                246,
                                245
                            ],
                            "inputs.fieldId": [
                                961
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1474": {
                        "hasMany": {
                            "inputs.fieldId": [
                                962,
                                1072
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1475": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1008
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1476": {
                        "hasMany": {
                            "inputs.fieldId": [
                                980
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1477": {
                        "hasMany": {
                            "inputs.fieldId": [
                                959
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1478": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                124
                            ],
                            "basicrelationships.parentKeyId": [
                                247,
                                248
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1479": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                124
                            ],
                            "basicrelationships.foreignKeyId": [
                                247,
                                248
                            ],
                            "inputs.fieldId": [
                                984
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1480": {
                        "hasMany": {
                            "inputs.fieldId": [
                                973
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1481": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                131
                            ],
                            "basicrelationships.foreignKeyId": [
                                262,
                                261
                            ],
                            "inputs.fieldId": [
                                1073
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1483": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                134,
                                135
                            ],
                            "basicrelationships.parentKeyId": [
                                268,
                                270,
                                267,
                                269
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1484": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                132
                            ],
                            "basicrelationships.foreignKeyId": [
                                264,
                                263
                            ],
                            "inputs.fieldId": [
                                1107
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1486": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1109
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1487": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1108
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1488": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1111
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1489": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1112
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1490": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                133
                            ],
                            "basicrelationships.foreignKeyId": [
                                266,
                                265
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1491": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                134
                            ],
                            "basicrelationships.foreignKeyId": [
                                268,
                                267
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1492": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                135
                            ],
                            "basicrelationships.foreignKeyId": [
                                270,
                                269
                            ],
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1493": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1495": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1496": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                138
                            ],
                            "basicrelationships.parentKeyId": [
                                276,
                                275
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1497": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1498": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1499": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1500": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1501": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1502": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1503": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1504": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1505": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1506": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1507": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1508": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1509": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1510": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1511": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                144
                            ],
                            "basicrelationships.foreignKeyId": [
                                288,
                                287
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1512": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                149
                            ],
                            "basicrelationships.foreignKeyId": [
                                298,
                                297
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1513": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1514": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1515": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1516": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1517": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1518": {
                        "hasMany": {
                            "basicrelationships.parentKeyId": [
                                298,
                                297
                            ],
                            "foreigns.relatedFieldId": [
                                149
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1519": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1520": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1522": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1523": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1524": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1525": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1526": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1527": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1528": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1529": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1530": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1531": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1532": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1533": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                136
                            ],
                            "basicrelationships.parentKeyId": [
                                272,
                                271
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1534": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1535": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1536": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1537": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1538": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1539": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                137
                            ],
                            "basicrelationships.parentKeyId": [
                                274,
                                273
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1540": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1541": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1542": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1543": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                140
                            ],
                            "basicrelationships.parentKeyId": [
                                280,
                                279
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1544": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                136
                            ],
                            "basicrelationships.foreignKeyId": [
                                272,
                                271
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1545": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                137
                            ],
                            "basicrelationships.foreignKeyId": [
                                274,
                                273
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1546": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1547": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1548": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1549": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1550": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1551": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1552": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1553": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1554": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                141,
                                142
                            ],
                            "basicrelationships.parentKeyId": [
                                282,
                                281,
                                284,
                                283
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1555": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1556": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1557": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                138
                            ],
                            "basicrelationships.foreignKeyId": [
                                276,
                                275
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1558": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1559": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1560": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1561": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1562": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1563": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1564": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1565": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1566": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1567": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1568": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1569": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                139
                            ],
                            "basicrelationships.parentKeyId": [
                                278,
                                277
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1570": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1571": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1572": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1573": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1574": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1575": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1576": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1577": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1578": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1579": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                139
                            ],
                            "basicrelationships.foreignKeyId": [
                                278,
                                277
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1580": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                140
                            ],
                            "basicrelationships.foreignKeyId": [
                                280,
                                279
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1581": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1582": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                144,
                                148,
                                150,
                                151
                            ],
                            "basicrelationships.parentKeyId": [
                                288,
                                287,
                                296,
                                295,
                                299,
                                300,
                                302,
                                301
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1583": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1584": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1585": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1586": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1587": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1588": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1589": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1590": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1591": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                141
                            ],
                            "basicrelationships.foreignKeyId": [
                                282,
                                281
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1592": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1593": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1594": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1595": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                142
                            ],
                            "basicrelationships.foreignKeyId": [
                                284,
                                283
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1596": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1597": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1598": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1599": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1600": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1601": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1602": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1603": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1604": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1605": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1606": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1607": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1608": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1609": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1610": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1614": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                148
                            ],
                            "basicrelationships.foreignKeyId": [
                                296,
                                295
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1616": {
                        "hasMany": {
                            "basicrelationships.parentKeyId": [
                                304,
                                303
                            ],
                            "foreigns.relatedFieldId": [
                                152
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1617": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                150
                            ],
                            "basicrelationships.foreignKeyId": [
                                299,
                                300
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1618": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1619": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1620": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1621": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1622": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1623": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1624": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1625": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1626": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1627": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1628": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1629": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1630": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1631": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1632": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1633": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1634": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1635": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1636": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1637": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1638": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1639": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1640": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                153
                            ],
                            "basicrelationships.parentKeyId": [
                                306,
                                305
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1641": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                151
                            ],
                            "basicrelationships.foreignKeyId": [
                                302,
                                301
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1642": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1643": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1644": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1645": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1646": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1647": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1648": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                152
                            ],
                            "basicrelationships.foreignKeyId": [
                                304,
                                303
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1649": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                153
                            ],
                            "basicrelationships.foreignKeyId": [
                                306,
                                305
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1650": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1651": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1652": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1653": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1654": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1655": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1656": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1657": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1659": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1660": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1661": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1662": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1663": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                157
                            ],
                            "basicrelationships.parentKeyId": [
                                314,
                                313
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1664": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1665": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1666": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1667": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1668": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1669": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1670": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1671": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1672": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1673": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1674": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                154,
                                155,
                                158,
                                160
                            ],
                            "basicrelationships.parentKeyId": [
                                308,
                                307,
                                310,
                                309,
                                316,
                                315,
                                320,
                                319
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1675": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1676": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1677": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1678": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                154
                            ],
                            "basicrelationships.foreignKeyId": [
                                308,
                                307
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1679": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1681": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1682": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1683": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1684": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1685": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1686": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1687": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1688": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1690": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                155
                            ],
                            "basicrelationships.foreignKeyId": [
                                310,
                                309
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1693": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1694": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1695": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1697": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1698": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1699": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1700": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1701": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                157
                            ],
                            "basicrelationships.foreignKeyId": [
                                314,
                                313
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1702": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                159,
                                161
                            ],
                            "basicrelationships.parentKeyId": [
                                318,
                                317,
                                322,
                                321
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1703": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                158
                            ],
                            "basicrelationships.foreignKeyId": [
                                316,
                                315
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1704": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1705": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1706": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1707": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1708": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1709": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1710": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                159
                            ],
                            "basicrelationships.foreignKeyId": [
                                318,
                                317
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1711": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1712": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1713": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1714": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1715": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1716": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                160
                            ],
                            "basicrelationships.foreignKeyId": [
                                320,
                                319
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1717": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                161
                            ],
                            "basicrelationships.foreignKeyId": [
                                322,
                                321
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1718": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1719": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                162,
                                185,
                                186,
                                187
                            ],
                            "basicrelationships.parentKeyId": [
                                370,
                                369,
                                372,
                                371,
                                374,
                                373,
                                323,
                                324
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1720": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1133
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1721": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1134
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1722": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1723": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1135
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1724": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1725": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1726": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1727": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1728": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1729": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1730": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                184
                            ],
                            "basicrelationships.parentKeyId": [
                                368,
                                367
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1731": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                162
                            ],
                            "basicrelationships.foreignKeyId": [
                                323,
                                324
                            ],
                            "inputs.fieldId": [
                                1325
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1732": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1337
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1733": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1336
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1734": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1335
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1735": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1328
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1736": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1329
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1737": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1333
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1738": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1332
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1739": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1331
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1740": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1345
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1741": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1346
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1742": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1334
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1743": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1326
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1788": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1789": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1161
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1790": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1162
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1791": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1163
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1793": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1165
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1794": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1166
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1795": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1164
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1798": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1799": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1170
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1800": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1171
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1801": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1172
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1802": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1803": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1173
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1804": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1174
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1805": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1175
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1806": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1807": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1169
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1808": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1809": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1176
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1810": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1177
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1811": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                164
                            ],
                            "basicrelationships.foreignKeyId": [
                                327,
                                328
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1812": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                165
                            ],
                            "basicrelationships.parentKeyId": [
                                329,
                                330
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1813": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1179
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1814": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                166
                            ],
                            "basicrelationships.parentKeyId": [
                                331,
                                332
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1815": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1816": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1184
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1817": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1818": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1185
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1819": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1820": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1821": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1822": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1823": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1824": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1825": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1826": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                167,
                                168
                            ],
                            "basicrelationships.parentKeyId": [
                                333,
                                335,
                                334,
                                336
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1827": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1186
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1828": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1187
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1829": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1188
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1830": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1189
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1831": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1832": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                169
                            ],
                            "basicrelationships.foreignKeyId": [
                                337,
                                338
                            ],
                            "inputs.fieldId": [
                                1190
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1833": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1834": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                170
                            ],
                            "basicrelationships.foreignKeyId": [
                                339,
                                340
                            ],
                            "inputs.fieldId": [
                                1191
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1835": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1192
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1836": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1193
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1837": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1194
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1838": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1195
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1839": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1196
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1840": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1197
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1841": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1198
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1842": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1199
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1843": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1200
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1844": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1201
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1845": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1202
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1846": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1203
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1847": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1204
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1848": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1849": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1850": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1851": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1205,
                                1181
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1852": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                166
                            ],
                            "basicrelationships.foreignKeyId": [
                                331,
                                332
                            ],
                            "inputs.fieldId": [
                                1182
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1853": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                171
                            ],
                            "basicrelationships.foreignKeyId": [
                                341,
                                342
                            ],
                            "inputs.fieldId": [
                                1180
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1854": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                164
                            ],
                            "basicrelationships.parentKeyId": [
                                327,
                                328
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1855": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1856": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1857": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1206
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1858": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1207
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1859": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1208
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1860": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1209
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1861": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1210
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1862": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1211
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1863": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1212
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1864": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1213
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1865": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1214
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1866": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1215
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1867": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1216
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1868": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1217
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1869": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1218
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1870": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1219,
                                1220
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1871": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1221
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1872": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1222
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1873": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1223
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1874": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1224
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1875": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1225
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1876": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1226
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1877": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1227,
                                1228
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1878": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1229
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1879": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1230
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1880": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1231
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1881": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1232
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1882": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1233
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1883": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1234
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1884": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1235
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1885": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1236
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1886": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                172
                            ],
                            "basicrelationships.foreignKeyId": [
                                343,
                                344
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1887": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                167
                            ],
                            "basicrelationships.foreignKeyId": [
                                333,
                                334
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1888": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                168
                            ],
                            "basicrelationships.foreignKeyId": [
                                335,
                                336
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1889": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                165
                            ],
                            "basicrelationships.foreignKeyId": [
                                329,
                                330
                            ],
                            "inputs.fieldId": [
                                1178
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1890": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                171,
                                170,
                                169,
                                172
                            ],
                            "basicrelationships.parentKeyId": [
                                341,
                                339,
                                337,
                                343,
                                342,
                                340,
                                338,
                                344
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1891": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1237
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1892": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1238,
                                1239
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1893": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1240
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1894": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1241
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1895": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1242
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1896": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1243
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1897": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1244
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1898": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1899": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1245
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1900": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1246
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1901": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                173
                            ],
                            "basicrelationships.foreignKeyId": [
                                345,
                                346
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1902": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                174
                            ],
                            "basicrelationships.parentKeyId": [
                                347,
                                348
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1903": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1248
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1904": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                175
                            ],
                            "basicrelationships.parentKeyId": [
                                349,
                                350
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1905": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1252
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1906": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1253
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1907": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1908": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1254
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1909": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1910": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1911": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1912": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1913": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1914": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1915": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1916": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                176,
                                177
                            ],
                            "basicrelationships.parentKeyId": [
                                351,
                                353,
                                352,
                                354
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1917": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1255
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1918": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1256
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1919": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1257
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1920": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1258
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1921": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1922": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                178
                            ],
                            "basicrelationships.foreignKeyId": [
                                355,
                                356
                            ],
                            "inputs.fieldId": [
                                1259
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1923": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1924": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                179
                            ],
                            "basicrelationships.foreignKeyId": [
                                357,
                                358
                            ],
                            "inputs.fieldId": [
                                1260
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1925": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1261
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1926": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1262
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1927": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1263
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1928": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1264
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1929": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1265
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1930": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1266
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1931": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1267
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1932": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1268
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1933": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1269
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1934": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1270
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1935": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1271
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1936": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1272
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1937": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1273
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1938": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1939": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1940": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1941": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1274,
                                1250
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1942": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                175
                            ],
                            "basicrelationships.foreignKeyId": [
                                349,
                                350
                            ],
                            "inputs.fieldId": [
                                1251
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1943": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                180
                            ],
                            "basicrelationships.foreignKeyId": [
                                359,
                                360
                            ],
                            "inputs.fieldId": [
                                1249
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1944": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                173
                            ],
                            "basicrelationships.parentKeyId": [
                                345,
                                346
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1945": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1946": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1947": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1275
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1948": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1276
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1949": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1277
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1950": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1278
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1951": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1279
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1952": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1280
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1953": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1281
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1954": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1282
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1955": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1283
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1956": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1284
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1957": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1285
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1958": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1286
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1959": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1287
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1960": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1288,
                                1289
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1961": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1290
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1962": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1291
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1963": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1292
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1964": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1293
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1965": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1294
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1966": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1295
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1967": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1296,
                                1297
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1968": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1298
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1969": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1299
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1970": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1300
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1971": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1301
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1972": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1302
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1973": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1303
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1974": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1304
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1975": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1305
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1976": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                181
                            ],
                            "basicrelationships.foreignKeyId": [
                                361,
                                362
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1977": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                176
                            ],
                            "basicrelationships.foreignKeyId": [
                                351,
                                352
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1978": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                177
                            ],
                            "basicrelationships.foreignKeyId": [
                                353,
                                354
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1979": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                174
                            ],
                            "basicrelationships.foreignKeyId": [
                                347,
                                348
                            ],
                            "inputs.fieldId": [
                                1247
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1980": {
                        "hasMany": {
                            "foreigns.relatedFieldId": [
                                180,
                                179,
                                178,
                                181
                            ],
                            "basicrelationships.parentKeyId": [
                                359,
                                357,
                                355,
                                361,
                                360,
                                358,
                                356,
                                362
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1981": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1306
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1982": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1307,
                                1308
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1983": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1309
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1984": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1310
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1985": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1311
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1986": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1312
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1987": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1313
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1988": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1989": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1314
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1990": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1315
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1992": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                182
                            ],
                            "basicrelationships.foreignKeyId": [
                                364,
                                363
                            ],
                            "inputs.fieldId": [
                                1317
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1993": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                183
                            ],
                            "basicrelationships.foreignKeyId": [
                                366,
                                365
                            ],
                            "inputs.fieldId": [
                                1318
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1994": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1319
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1995": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1327
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1996": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1330
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1997": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1340
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1998": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2001": {
                        "hasMany": {
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2002": {
                        "hasMany": {
                            "inputs.fieldId": []
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2003": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1403,
                                1351
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2004": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1400,
                                1348
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2005": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1401,
                                1349
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2006": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1402,
                                1350
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2007": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1355,
                                1408
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2008": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1405,
                                1352
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2009": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1412,
                                1356
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2010": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1413,
                                1357
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2011": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                184
                            ],
                            "basicrelationships.foreignKeyId": [
                                368,
                                367
                            ],
                            "inputs.fieldId": [
                                1399
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2012": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2014": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                185
                            ],
                            "basicrelationships.foreignKeyId": [
                                370,
                                369
                            ],
                            "inputs.fieldId": [
                                1321
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2015": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1320
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2016": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1322
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2017": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1416
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2018": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1324
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2019": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2020": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1372
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2021": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                186
                            ],
                            "basicrelationships.foreignKeyId": [
                                372,
                                371
                            ],
                            "inputs.fieldId": [
                                1371
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2022": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1374
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2024": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1378
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2025": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1375
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2026": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1376
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2027": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1377
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2028": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2029": {
                        "hasMany": {
                            "foreigns.fieldId": [
                                187
                            ],
                            "basicrelationships.foreignKeyId": [
                                374,
                                373
                            ],
                            "inputs.fieldId": [
                                1379
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2030": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1380
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2031": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1387
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2032": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1418
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2033": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1384
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2034": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1388
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2035": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1386
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2036": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1382
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2037": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1343
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2038": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1362
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2039": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1363
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2041": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1410,
                                1367
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2042": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1411,
                                1368
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2044": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1369
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2045": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1404,
                                1370
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2060": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2061": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1396
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2062": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1397
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2063": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2064": {
                        "hasMany": {
                            "inputs.fieldId": [
                                1398
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2065": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2066": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2067": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2068": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2069": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2070": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_1730": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "id",
                "entityId": 185,
                "type": "uuid",
                "pk": true,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1730,
                "createdAt": "2023-05-11 06:07:15",
                "updatedAt": "2024-05-02 22:06:13",
                "order": 0
            },
            "item_2001": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "created_by",
                "entityId": 185,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 1,
                "id": 2001,
                "createdAt": "2024-05-01 09:59:10",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_2002": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "updated_by",
                "entityId": 185,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 2,
                "id": 2002,
                "createdAt": "2024-05-01 09:59:23",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1731": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "user_id",
                "entityId": 185,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": true,
                "unique": false,
                "id": 1731,
                "createdAt": "2023-05-11 06:35:08",
                "updatedAt": "2024-05-09 19:50:25",
                "order": 3
            },
            "item_1743": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "string",
                "entityId": 185,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->city()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 4,
                "id": 1743,
                "createdAt": "2023-05-11 06:35:17",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1995": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "email",
                "entityId": 185,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->email()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 5,
                "id": 1995,
                "createdAt": "2024-04-30 23:26:02",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1735": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "integer",
                "entityId": 185,
                "type": "integer",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->randomNumber(0)",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 6,
                "id": 1735,
                "createdAt": "2023-05-11 06:36:27",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1736": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "decimal",
                "entityId": 185,
                "type": "decimal",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->randomNumber(1)",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 7,
                "id": 1736,
                "createdAt": "2023-05-11 06:36:38",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1996": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "n_p_w_p",
                "entityId": 185,
                "type": "bigInteger",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->randomNumber()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 8,
                "id": 1996,
                "createdAt": "2024-04-30 23:26:18",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1739": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "datetime",
                "entityId": 185,
                "type": "dateTime",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->dateTime()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 9,
                "id": 1739,
                "createdAt": "2023-05-11 06:38:11",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1738": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "date",
                "entityId": 185,
                "type": "date",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->date()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 10,
                "id": 1738,
                "createdAt": "2023-05-11 06:38:27",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1737": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "time",
                "entityId": 185,
                "type": "time",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->time()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 11,
                "id": 1737,
                "createdAt": "2023-05-11 06:38:32",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1742": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "i_p_address",
                "entityId": 185,
                "type": "ipAddress",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->ipv4()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 12,
                "id": 1742,
                "createdAt": "2023-05-11 06:38:42",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1734": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "bool",
                "entityId": 185,
                "type": "boolean",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->boolean()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 13,
                "id": 1734,
                "createdAt": "2023-05-11 06:36:10",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1733": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "enum",
                "entityId": 185,
                "type": "enum",
                "pk": false,
                "fk": false,
                "params": {
                    "options": [
                        "enabled",
                        "disabled"
                    ]
                },
                "faker": "'{DEFAULT_OR_FIRST}'",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 14,
                "id": 1733,
                "createdAt": "2023-05-11 06:35:38",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1732": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "text",
                "entityId": 185,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 15,
                "id": 1732,
                "createdAt": "2023-05-11 06:35:23",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1740": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "file",
                "entityId": 185,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 16,
                "id": 1740,
                "createdAt": "2023-05-11 06:40:20",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1741": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "image",
                "entityId": 185,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 17,
                "id": 1741,
                "createdAt": "2023-05-11 06:40:30",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_2044": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "markdown_text",
                "entityId": 185,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 18,
                "id": 2044,
                "createdAt": "2024-05-02 22:05:58",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_1997": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "w_y_s_i_w_y_g",
                "entityId": 185,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 19,
                "id": 1997,
                "createdAt": "2024-05-01 09:27:26",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_2038": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "latitude",
                "entityId": 185,
                "type": "float",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->latitude()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 21,
                "id": 2038,
                "createdAt": "2024-05-02 06:46:46",
                "updatedAt": "2024-05-02 22:06:13"
            },
            "item_2039": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "longitude",
                "entityId": 185,
                "type": "float",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->longitude()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 22,
                "id": 2039,
                "createdAt": "2024-05-02 06:47:05",
                "updatedAt": "2024-05-19 10:59:58"
            },
            "item_1998": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "id",
                "entityId": 204,
                "type": "uuid",
                "pk": true,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1998,
                "createdAt": "2024-05-01 09:57:22",
                "updatedAt": "2024-05-02 22:06:30",
                "order": 0
            },
            "item_2011": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "record_id",
                "entityId": 204,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": true,
                "unique": false,
                "id": 2011,
                "createdAt": "2024-05-01 10:23:16",
                "updatedAt": "2024-05-09 19:50:45",
                "order": 1
            },
            "item_2004": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "datetime",
                "entityId": 204,
                "type": "dateTime",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->dateTime()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 2,
                "id": 2004,
                "createdAt": "2024-05-01 10:00:32",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2005": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "date",
                "entityId": 204,
                "type": "date",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->date()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 3,
                "id": 2005,
                "createdAt": "2024-05-01 10:00:47",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2006": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "time",
                "entityId": 204,
                "type": "time",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->time()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 4,
                "id": 2006,
                "createdAt": "2024-05-01 10:00:49",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2003": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "n_p_w_p",
                "entityId": 204,
                "type": "bigInteger",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->randomNumber()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 5,
                "id": 2003,
                "createdAt": "2024-05-01 10:00:10",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2045": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "markdown_text",
                "entityId": 204,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 6,
                "id": 2045,
                "createdAt": "2024-05-02 22:06:21",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2008": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "w_y_s_i_w_y_g",
                "entityId": 204,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 7,
                "id": 2008,
                "createdAt": "2024-05-01 10:01:17",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2009": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "file",
                "entityId": 204,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 8,
                "id": 2009,
                "createdAt": "2024-05-01 10:13:28",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2010": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "image",
                "entityId": 204,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 9,
                "id": 2010,
                "createdAt": "2024-05-01 10:13:38",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2007": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "i_p_address",
                "entityId": 204,
                "type": "ipAddress",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->ipv4()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 10,
                "id": 2007,
                "createdAt": "2024-05-01 10:00:57",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2041": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "latitude",
                "entityId": 204,
                "type": "float",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->latitude()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 12,
                "id": 2041,
                "createdAt": "2024-05-02 06:50:01",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_2042": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "longitude",
                "entityId": 204,
                "type": "float",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->longitude()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 13,
                "id": 2042,
                "createdAt": "2024-05-02 06:50:10",
                "updatedAt": "2024-05-02 22:06:30"
            },
            "item_1719": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "id",
                "entityId": 184,
                "type": "uuid",
                "pk": true,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1719,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2024-05-09 17:18:52",
                "order": 0
            },
            "item_1720": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "name",
                "entityId": 184,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->name()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1720,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 1
            },
            "item_1721": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "email",
                "entityId": 184,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->unique->email()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": true,
                "id": 1721,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 2
            },
            "item_1722": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "email_verified_at",
                "entityId": 184,
                "type": "timestamp",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "now()",
                "nullable": true,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1722,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 3
            },
            "item_1723": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "password",
                "entityId": 184,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "\\Hash::make('password')",
                "nullable": false,
                "hidden": true,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1723,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 4
            },
            "item_1724": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "remember_token",
                "entityId": 184,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {
                    "size": 100
                },
                "faker": "Str::random(10)",
                "nullable": true,
                "hidden": true,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1724,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 5
            },
            "item_1725": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "two_factor_secret",
                "entityId": 184,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "",
                "nullable": true,
                "hidden": true,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1725,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 6
            },
            "item_1726": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "two_factor_recovery_codes",
                "entityId": 184,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "",
                "nullable": true,
                "hidden": true,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1726,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 7
            },
            "item_1727": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "two_factor_confirmed_at",
                "entityId": 184,
                "type": "timestamp",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "",
                "nullable": true,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1727,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 8
            },
            "item_1728": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "current_team_id",
                "entityId": 184,
                "type": "foreignId",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "",
                "nullable": true,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1728,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 9
            },
            "item_1729": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "profile_photo_path",
                "entityId": 184,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "",
                "nullable": true,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 1729,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2023-12-29 06:14:36",
                "order": 10
            },
            "item_2012": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "id",
                "entityId": 205,
                "type": "uuid",
                "pk": true,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 2012,
                "createdAt": "2024-05-01 10:24:01",
                "updatedAt": "2024-05-01 10:30:49",
                "order": 0
            },
            "item_2015": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "at",
                "entityId": 205,
                "type": "timestampTz",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->dateTime('now', 'UTC')",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 1,
                "id": 2015,
                "createdAt": "2024-05-01 10:30:35",
                "updatedAt": "2024-05-01 11:40:01"
            },
            "item_2014": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "user_id",
                "entityId": 205,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": true,
                "unique": false,
                "id": 2014,
                "createdAt": "2024-05-01 10:24:44",
                "updatedAt": "2024-05-09 19:51:08",
                "order": 2
            },
            "item_2016": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "title",
                "entityId": 205,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->sentence(10)",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 3,
                "id": 2016,
                "createdAt": "2024-05-01 10:30:54",
                "updatedAt": "2024-05-01 10:30:57"
            },
            "item_2017": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "link",
                "entityId": 205,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 4,
                "id": 2017,
                "createdAt": "2024-05-01 10:31:02",
                "updatedAt": "2024-05-01 10:31:10"
            },
            "item_2018": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "message",
                "entityId": 205,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->sentence(20)",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 5,
                "id": 2018,
                "createdAt": "2024-05-01 10:33:37",
                "updatedAt": "2024-05-01 10:33:42"
            },
            "item_2037": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "i_p_address",
                "entityId": 205,
                "type": "ipAddress",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->ipv4()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 6,
                "id": 2037,
                "createdAt": "2024-05-01 22:59:15",
                "updatedAt": "2024-05-01 23:12:59"
            },
            "item_2028": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "id",
                "entityId": 207,
                "type": "uuid",
                "pk": true,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 2028,
                "createdAt": "2024-05-01 11:41:43",
                "updatedAt": "2024-05-02 22:35:37",
                "order": 0
            },
            "item_2029": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "user_id",
                "entityId": 207,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": true,
                "unique": false,
                "id": 2029,
                "createdAt": "2024-05-01 11:42:12",
                "updatedAt": "2024-05-09 19:50:54",
                "order": 1
            },
            "item_2030": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "at",
                "entityId": 207,
                "type": "timestampTz",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->dateTime('now', 'UTC')",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 2,
                "id": 2030,
                "createdAt": "2024-05-01 11:42:37",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2031": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "file",
                "entityId": 207,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 3,
                "id": 2031,
                "createdAt": "2024-05-01 11:42:47",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2036": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "name",
                "entityId": 207,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->name()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 4,
                "id": 2036,
                "createdAt": "2024-05-01 11:49:57",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2034": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "description",
                "entityId": 207,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 5,
                "id": 2034,
                "createdAt": "2024-05-01 11:48:36",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2033": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "type",
                "entityId": 207,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->word()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 6,
                "id": 2033,
                "createdAt": "2024-05-01 11:48:21",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2035": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "metadata",
                "entityId": 207,
                "type": "json",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "[]",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 7,
                "id": 2035,
                "createdAt": "2024-05-01 11:48:56",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2032": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "thumbnail",
                "entityId": 207,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 8,
                "id": 2032,
                "createdAt": "2024-05-01 11:42:56",
                "updatedAt": "2024-05-02 22:35:37"
            },
            "item_2019": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "id",
                "entityId": 206,
                "type": "uuid",
                "pk": true,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": false,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "id": 2019,
                "createdAt": "2024-05-01 10:37:37",
                "updatedAt": "2024-05-01 11:49:44",
                "order": 0
            },
            "item_2021": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "user_id",
                "entityId": 206,
                "type": "uuid",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->uuid()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": true,
                "unique": false,
                "id": 2021,
                "createdAt": "2024-05-01 11:05:00",
                "updatedAt": "2024-05-09 19:51:01",
                "order": 1
            },
            "item_2020": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "at",
                "entityId": 206,
                "type": "timestampTz",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->dateTime('now', 'UTC')",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 2,
                "id": 2020,
                "createdAt": "2024-05-01 11:04:39",
                "updatedAt": "2024-05-01 11:49:44"
            },
            "item_2024": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "file",
                "entityId": 206,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text()",
                "nullable": false,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 3,
                "id": 2024,
                "createdAt": "2024-05-01 11:27:05",
                "updatedAt": "2024-05-01 11:49:44"
            },
            "item_2022": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "name",
                "entityId": 206,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "$faker->text({SIZE})",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 4,
                "id": 2022,
                "createdAt": "2024-05-01 11:06:00",
                "updatedAt": "2024-05-01 11:49:44"
            },
            "item_2025": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "description",
                "entityId": 206,
                "type": "text",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->sentence(15)",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 5,
                "id": 2025,
                "createdAt": "2024-05-01 11:32:56",
                "updatedAt": "2024-05-01 11:49:44"
            },
            "item_2026": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "type",
                "entityId": 206,
                "type": "string",
                "pk": false,
                "fk": false,
                "params": {},
                "faker": "$faker->word()",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 6,
                "id": 2026,
                "createdAt": "2024-05-01 11:38:08",
                "updatedAt": "2024-05-01 11:49:44"
            },
            "item_2027": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "metadata",
                "entityId": 206,
                "type": "json",
                "pk": false,
                "fk": false,
                "params": {
                    "options": null
                },
                "faker": "[]",
                "nullable": true,
                "hidden": false,
                "fillable": true,
                "defaultValue": null,
                "index": false,
                "unique": false,
                "order": 7,
                "id": 2027,
                "createdAt": "2024-05-01 11:39:14",
                "updatedAt": "2024-05-01 11:49:44"
            }
        },
        "foreigns": {
            "foreigns": {
                "count": 109,
                "lastPrimaryKey": 188,
                "index": {
                    "1": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "3": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "23": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "29": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "30": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "31": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "32": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "33": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "34": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "35": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "36": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "37": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "38": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "39": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "40": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "41": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "42": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "49": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "51": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "53": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "54": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "55": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "56": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "57": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "122": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "123": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "124": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "125": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "126": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "127": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "128": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "129": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "130": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "131": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "132": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "133": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "134": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "135": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "136": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "137": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "138": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "139": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "140": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "141": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "142": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "144": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "148": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "149": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "150": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "151": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "152": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "153": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "154": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "155": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "157": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "158": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "159": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "160": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "161": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "162": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "164": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "165": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "166": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "167": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "168": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "169": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "170": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "171": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "172": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "173": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "174": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "175": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "176": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "177": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "178": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "179": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "180": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "181": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "182": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "183": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "184": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "185": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "186": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "187": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_184": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "",
                "fieldId": 2011,
                "relatedEntityId": 185,
                "relatedFieldId": 1730,
                "basicRelationshipId": null,
                "on": "",
                "onTableDelete": "CASCADE",
                "onTableUpdate": "CASCADE",
                "indexName": "subrecord_record_id_foreign",
                "defaultIndexName": "subrecord_record_id_foreign",
                "id": 184,
                "createdAt": "2024-05-01 10:23:16",
                "updatedAt": "2024-05-01 10:23:16"
            },
            "item_162": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "",
                "fieldId": 1731,
                "relatedEntityId": 184,
                "relatedFieldId": 1719,
                "basicRelationshipId": null,
                "on": "",
                "onTableDelete": "CASCADE",
                "onTableUpdate": "CASCADE",
                "indexName": "record_user_id_foreign",
                "defaultIndexName": "record_user_id_foreign",
                "id": 162,
                "createdAt": "2023-05-11 06:35:08",
                "updatedAt": "2023-12-29 06:14:37"
            },
            "item_185": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "",
                "fieldId": 2014,
                "relatedEntityId": 184,
                "relatedFieldId": 1719,
                "basicRelationshipId": null,
                "on": "",
                "onTableDelete": "CASCADE",
                "onTableUpdate": "CASCADE",
                "indexName": "user_activity_log_user_id_foreign",
                "defaultIndexName": "user_activity_log_user_id_foreign",
                "id": 185,
                "createdAt": "2024-05-01 10:24:44",
                "updatedAt": "2024-05-01 10:24:44"
            },
            "item_186": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "",
                "fieldId": 2021,
                "relatedEntityId": 184,
                "relatedFieldId": 1719,
                "basicRelationshipId": null,
                "on": "",
                "onTableDelete": "CASCADE",
                "onTableUpdate": "CASCADE",
                "indexName": "user_upload_user_id_foreign",
                "defaultIndexName": "user_upload_user_id_foreign",
                "id": 186,
                "createdAt": "2024-05-01 11:05:00",
                "updatedAt": "2024-05-01 11:05:00"
            },
            "item_187": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "",
                "fieldId": 2029,
                "relatedEntityId": 184,
                "relatedFieldId": 1719,
                "basicRelationshipId": null,
                "on": "",
                "onTableDelete": "CASCADE",
                "onTableUpdate": "CASCADE",
                "indexName": "user_gallery_user_id_foreign",
                "defaultIndexName": "user_gallery_user_id_foreign",
                "id": 187,
                "createdAt": "2024-05-01 11:42:12",
                "updatedAt": "2024-05-01 11:42:12"
            }
        },
        "hasmanydetails": {
            "hasmanydetails": {
                "count": 56,
                "lastPrimaryKey": 130,
                "index": {
                    "1": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                6
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                7
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "3": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                8
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                9
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                10
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                11
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                12
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                13
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                14
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                15
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                16
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                17
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                18
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                20
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                21
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                22
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                23
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                24
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                25
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                26
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                27
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                34
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                35
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                36
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                37
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                38
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "29": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                39
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "30": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                40
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "31": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                41
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "37": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                47
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                48
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "39": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                49
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "40": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                50
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "41": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                51
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "42": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                52
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "43": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                54
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "44": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                55
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "45": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                57
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "48": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                77
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "49": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                78
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "50": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                79
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "51": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                80
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "52": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                81
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "53": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "116": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                149
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "118": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                153
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "119": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                156
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "120": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                154
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "123": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                168
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "124": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                170
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "125": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                174
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "126": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                177
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "127": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                179
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "128": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "129": {
                        "hasMany": {
                            "cruds.hasManyDetailId": [
                                189
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_129": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "relatedCrudId": 189,
                "relationshipId": 367,
                "order": 0,
                "name": "Subrecords",
                "componentName": "RecordSubrecordsDetail",
                "hasSearch": true,
                "hasPagination": true,
                "onEdit": true,
                "onShow": true,
                "id": 129,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-05-01 23:15:35"
            }
        },
        "inputs": {
            "inputs": {
                "count": 730,
                "lastPrimaryKey": 1433,
                "index": {
                    "1": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "3": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "8": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "9": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "13": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "14": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "16": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "18": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "19": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "20": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "21": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "22": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "23": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "24": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "25": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "26": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "27": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "28": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "77": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "79": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "80": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "81": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "82": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "83": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "84": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "85": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "86": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "87": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "88": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "89": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "90": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "91": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "92": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "93": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "94": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "95": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "105": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "106": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "107": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "110": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "111": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "112": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "113": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "114": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "115": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "116": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "117": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "118": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "119": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "120": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "121": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "122": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "123": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "124": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "125": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "126": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "127": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "128": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "129": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "130": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "131": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "132": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "133": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "134": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "135": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "136": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "138": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "139": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "140": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "141": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "142": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "143": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "144": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "145": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "146": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "147": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "148": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "149": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "150": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "151": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "155": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "156": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "157": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "162": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "163": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "164": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "165": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "166": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "167": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "168": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "169": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "170": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "174": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "175": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "176": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "177": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "178": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "182": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "183": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "184": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "185": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "186": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "189": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "190": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "191": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "192": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "196": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "197": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "198": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "199": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "200": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "203": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "204": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "205": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "206": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "209": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "210": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "211": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "212": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "213": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "214": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "215": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "216": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "217": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "218": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "219": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "220": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "221": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "222": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "223": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "224": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "225": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "226": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "227": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "228": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "229": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "230": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "231": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "232": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "233": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "234": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "235": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "236": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "237": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "238": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "239": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "240": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "241": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "242": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "243": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "244": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "245": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "246": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "247": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "248": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "249": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "250": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "251": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "252": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "253": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "254": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "255": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "256": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "257": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "258": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "259": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "260": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "261": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "262": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "263": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "264": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "265": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "266": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "267": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "268": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "269": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "270": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "271": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "272": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "273": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "274": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "275": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "276": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "277": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "278": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "279": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "280": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "281": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "282": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "283": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "284": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "285": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "286": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "287": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "288": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "289": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "290": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "291": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "292": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "293": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "294": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "295": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "296": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "297": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "298": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "299": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "300": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "301": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "302": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "303": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "304": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "305": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "322": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "323": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "324": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "325": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "326": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "327": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "328": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "329": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "330": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "331": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "332": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "333": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "334": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "335": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "336": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "337": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "338": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "342": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "343": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "344": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "345": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "346": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "347": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "348": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "349": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "350": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "351": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "352": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "353": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "354": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "355": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "356": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "357": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "372": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "373": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "375": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "376": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "378": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "379": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "380": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "381": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "383": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "384": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "386": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "387": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "388": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "389": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "390": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "391": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "392": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "393": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "394": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "395": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "396": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "397": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "398": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "399": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "400": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "401": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "402": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "403": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "404": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "405": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "406": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "407": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "408": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "409": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "410": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "411": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "412": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "413": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "414": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "415": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "416": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "417": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "418": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "419": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "420": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "421": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "422": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "423": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "424": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "425": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "426": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "427": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "428": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "429": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "430": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "431": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "432": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "433": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "434": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "435": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "436": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "437": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "438": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "439": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "440": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "441": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "442": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "443": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "444": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "445": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "446": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "447": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "448": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "449": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "450": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "451": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "452": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "453": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "454": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "455": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "456": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "457": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "458": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "522": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "524": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "528": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "529": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "530": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "531": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "532": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "535": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "536": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "538": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "539": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "540": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "541": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "545": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "546": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "547": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "573": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "574": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "575": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "576": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "577": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "578": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "579": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "580": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "581": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "582": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "583": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "599": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "600": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "601": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "602": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "603": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "604": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "605": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "606": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "607": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "609": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "610": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "611": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "613": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "614": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "615": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "616": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "617": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "618": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "619": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "621": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "622": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "623": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "624": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "625": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "626": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "627": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "628": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "629": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "631": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "632": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "633": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "634": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "635": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "636": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "638": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "639": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "641": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "642": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "643": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "644": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "959": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "961": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "962": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "973": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "975": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "976": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "978": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "980": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "982": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "984": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "985": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "986": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "987": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "988": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "989": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "990": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "991": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "992": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "993": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "994": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "995": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "996": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "997": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "998": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "999": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1000": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1001": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1002": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1003": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1004": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1005": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1006": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1008": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1009": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1010": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1011": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1012": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1015": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1016": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1017": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1018": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1019": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1020": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1021": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1022": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1023": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1024": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1025": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1026": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1027": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1028": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1029": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1030": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1031": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1032": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1033": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1034": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1035": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1036": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1037": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1038": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1039": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1040": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1041": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1042": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1043": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1044": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1045": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1046": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1047": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1048": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1049": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1050": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1051": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1052": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1053": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1054": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1055": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1056": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1057": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1058": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1059": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1060": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1061": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1062": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1063": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1064": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1065": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1066": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1067": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1068": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1069": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1070": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1072": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1073": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1107": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1108": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1109": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1111": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1112": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1133": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1134": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1135": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1161": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1162": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1163": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1164": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1165": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1166": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1169": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1170": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1171": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1172": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1173": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1174": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1175": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1176": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1177": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1178": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1179": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1180": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1181": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1182": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1183": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1184": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1185": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1186": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1187": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1188": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1189": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1190": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1191": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1192": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1193": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1194": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1195": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1196": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1197": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1198": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1199": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1200": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1201": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1202": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1203": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1204": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1205": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1206": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1207": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1208": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1209": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1210": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1211": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1212": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1213": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1214": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1215": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1216": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1217": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1218": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1219": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1220": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1221": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1222": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1223": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1224": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1225": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1226": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1227": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1228": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1229": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1230": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1231": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1232": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1233": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1234": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1235": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1236": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1237": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1238": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1239": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1240": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1241": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1242": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1243": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1244": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1245": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1246": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1247": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1248": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1249": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1250": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1251": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1252": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1253": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1254": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1255": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1256": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1257": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1258": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1259": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1260": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1261": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1262": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1263": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1264": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1265": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1266": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1267": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1268": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1269": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1270": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1271": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1272": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1273": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1274": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1275": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1276": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1277": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1278": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1279": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1280": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1281": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1282": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1283": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1284": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1285": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1286": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1287": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1288": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1289": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1290": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1291": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1292": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1293": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1294": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1295": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1296": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1297": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1298": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1299": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1300": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1301": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1302": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1303": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1304": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1305": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1306": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1307": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1308": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1309": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1310": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1311": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1312": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1313": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1314": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1315": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1317": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1318": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1319": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1320": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1321": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1322": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1324": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1325": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1326": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1327": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1328": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1329": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1330": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1331": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1332": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1333": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1334": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1335": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1336": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1337": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1340": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1343": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1345": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1346": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1348": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1349": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1350": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1351": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1352": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1355": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1356": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1357": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1362": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1363": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1367": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1368": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1369": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1370": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1371": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1372": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1374": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1375": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1376": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1377": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1378": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1379": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1380": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1382": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1384": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1386": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1387": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1388": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1396": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1397": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1398": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1399": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1400": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1401": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1402": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1403": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1404": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1405": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1408": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1410": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1411": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1412": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1413": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1416": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "1418": {
                        "hasMany": {},
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_1133": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 158,
                "fieldId": 1720,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "name",
                "label": "Name",
                "placeholder": "Name",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "required",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1133,
                "createdAt": "2023-05-11 05:40:04",
                "updatedAt": "2023-12-29 06:14:36"
            },
            "item_1134": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 158,
                "fieldId": 1721,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "email",
                "label": "Email",
                "placeholder": "Email",
                "order": 2,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "email",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "unique:users,email",
                    "email"
                ],
                "updateValidation": [
                    "required",
                    "unique:users,email",
                    "email"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1134,
                "createdAt": "2023-05-11 05:40:04",
                "updatedAt": "2023-12-29 06:14:37"
            },
            "item_1135": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 158,
                "fieldId": 1723,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "password",
                "label": "Password",
                "placeholder": "Password",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "password",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "min:6"
                ],
                "updateValidation": [
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": false,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1135,
                "createdAt": "2023-05-11 05:40:04",
                "updatedAt": "2024-05-19 20:58:08"
            },
            "item_1320": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 187,
                "fieldId": 2015,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "at",
                "label": "At",
                "placeholder": "At",
                "order": 0,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "date",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "date"
                ],
                "updateValidation": [
                    "required",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1320,
                "createdAt": "2024-05-01 22:17:22",
                "updatedAt": "2024-05-28 21:24:48"
            },
            "item_1321": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 187,
                "fieldId": 2014,
                "relationshipId": 370,
                "relationshipCollectionName": "users",
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": "usersForSelect",
                "name": "user_id",
                "label": "User",
                "placeholder": "User",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "Please select the User",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "select",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "uuid",
                    "exists:users,id"
                ],
                "updateValidation": [
                    "required",
                    "uuid",
                    "exists:users,id"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1321,
                "createdAt": "2024-05-01 22:17:22",
                "updatedAt": "2024-05-28 21:24:48"
            },
            "item_1322": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 187,
                "fieldId": 2016,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "title",
                "label": "Title",
                "placeholder": "Title",
                "order": 2,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "required",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1322,
                "createdAt": "2024-05-01 22:17:22",
                "updatedAt": "2024-05-28 21:24:48"
            },
            "item_1416": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 187,
                "fieldId": 2017,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "link",
                "label": "Link",
                "placeholder": "Link",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "url",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string",
                    "url"
                ],
                "updateValidation": [
                    "nullable",
                    "string",
                    "url"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1416,
                "createdAt": "2024-05-28 21:24:45",
                "updatedAt": "2024-05-28 22:49:46"
            },
            "item_1324": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 187,
                "fieldId": 2018,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "message",
                "label": "Message",
                "placeholder": "Message",
                "order": 5,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1324,
                "createdAt": "2024-05-01 22:17:22",
                "updatedAt": "2024-05-28 21:24:48"
            },
            "item_1343": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 187,
                "fieldId": 2037,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "i_p_address",
                "label": "I P Address",
                "placeholder": "I P Address",
                "order": 6,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "ip"
                ],
                "updateValidation": [
                    "nullable",
                    "ip"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1343,
                "createdAt": "2024-05-01 23:00:10",
                "updatedAt": "2024-05-28 21:39:28"
            },
            "item_1325": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1731,
                "relationshipId": 323,
                "relationshipCollectionName": "users",
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": "usersForSelect",
                "name": "user_id",
                "label": "User",
                "placeholder": "User",
                "order": 0,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "Please select the User",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "select",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "uuid",
                    "exists:users,id"
                ],
                "updateValidation": [
                    "nullable",
                    "uuid",
                    "exists:users,id"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1325,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1326": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1743,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "string",
                "label": "String",
                "placeholder": "String",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "required",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1326,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1327": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1995,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "email",
                "label": "Email",
                "placeholder": "Email",
                "order": 2,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "email",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "email"
                ],
                "updateValidation": [
                    "nullable",
                    "email"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1327,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1328": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1735,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "integer",
                "label": "Integer",
                "placeholder": "Integer",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "number",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1328,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-30 18:49:59"
            },
            "item_1329": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1736,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "decimal",
                "label": "Decimal",
                "placeholder": "Decimal",
                "order": 4,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "number",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1329,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1330": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1996,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "n_p_w_p",
                "label": "N P W P",
                "placeholder": "N P W P",
                "order": 5,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable"
                ],
                "updateValidation": [
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1330,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-29 22:22:16"
            },
            "item_1331": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1739,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "datetime",
                "label": "Datetime",
                "placeholder": "Datetime",
                "order": 6,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "datetime",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date"
                ],
                "updateValidation": [
                    "nullable",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1331,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-29 22:22:43"
            },
            "item_1332": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1738,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "date",
                "label": "Date",
                "placeholder": "Date",
                "order": 7,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "date",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date"
                ],
                "updateValidation": [
                    "nullable",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1332,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-29 22:22:48"
            },
            "item_1333": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1737,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "time",
                "label": "Time",
                "placeholder": "Time",
                "order": 8,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "time",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date_format:H:i"
                ],
                "updateValidation": [
                    "nullable",
                    "date_format:H:i"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1333,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1334": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1742,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "i_p_address",
                "label": "I P Address",
                "placeholder": "I P Address",
                "order": 9,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "ip"
                ],
                "updateValidation": [
                    "nullable",
                    "ip"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1334,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-29 22:22:56"
            },
            "item_1335": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1734,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "bool",
                "label": "Bool",
                "placeholder": "Bool",
                "order": 10,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "checkbox",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "boolean"
                ],
                "updateValidation": [
                    "nullable",
                    "boolean"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1335,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-29 22:22:59"
            },
            "item_1336": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1733,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "enum",
                "label": "Enum",
                "placeholder": "Enum",
                "order": 11,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "select",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [
                    {
                        "value": "enabled",
                        "label": "Enabled"
                    },
                    {
                        "value": "disabled",
                        "label": "Disabled"
                    }
                ],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "in:enabled,disabled"
                ],
                "updateValidation": [
                    "nullable",
                    "in:enabled,disabled"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1336,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1337": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1732,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "text",
                "label": "Text",
                "placeholder": "Text",
                "order": 12,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1337,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-29 22:23:06"
            },
            "item_1345": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1740,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "file",
                "label": "File",
                "placeholder": "File",
                "order": 13,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "file",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "file",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "file",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1345,
                "createdAt": "2024-05-01 23:14:28",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1346": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1741,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "image",
                "label": "Image",
                "placeholder": "Image",
                "order": 14,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "image",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1346,
                "createdAt": "2024-05-01 23:14:39",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1369": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 2044,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "markdown_text",
                "label": "Markdown Text",
                "placeholder": "Markdown Text",
                "order": 15,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1369,
                "createdAt": "2024-05-02 22:23:27",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1340": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 1997,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "w_y_s_i_w_y_g",
                "label": "W Y S I W Y G",
                "placeholder": "W Y S I W Y G",
                "order": 16,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1340,
                "createdAt": "2024-05-01 22:41:53",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1362": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 2038,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "latitude",
                "label": "Latitude",
                "placeholder": "Latitude",
                "order": 20,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1362,
                "createdAt": "2024-05-02 06:55:07",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1363": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 188,
                "fieldId": 2039,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "longitude",
                "label": "Longitude",
                "placeholder": "Longitude",
                "order": 21,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1363,
                "createdAt": "2024-05-02 06:55:14",
                "updatedAt": "2024-05-28 21:59:22"
            },
            "item_1348": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2004,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "datetime",
                "label": "Datetime",
                "placeholder": "Datetime",
                "order": 0,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.datetime",
                "type": "datetime",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date"
                ],
                "updateValidation": [
                    "nullable",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1348,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-06-01 21:12:28"
            },
            "item_1349": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2005,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "date",
                "label": "Date",
                "placeholder": "Date",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.date",
                "type": "date",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date"
                ],
                "updateValidation": [
                    "nullable",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1349,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-06-01 21:12:26"
            },
            "item_1350": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2006,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "time",
                "label": "Time",
                "placeholder": "Time",
                "order": 2,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.time",
                "type": "time",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date_format:H:i"
                ],
                "updateValidation": [
                    "nullable",
                    "date_format:H:i"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1350,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-06-04 14:35:23"
            },
            "item_1351": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2003,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "n_p_w_p",
                "label": "N P W P",
                "placeholder": "N P W P",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.n_p_w_p",
                "type": "text",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable"
                ],
                "updateValidation": [
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1351,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-06-04 21:46:13"
            },
            "item_1370": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2045,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "markdown_text",
                "label": "Markdown Text",
                "placeholder": "Markdown Text",
                "order": 4,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.markdown_text",
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1370,
                "createdAt": "2024-05-02 22:25:07",
                "updatedAt": "2024-05-28 21:52:15"
            },
            "item_1352": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2008,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "w_y_s_i_w_y_g",
                "label": "W Y S I W Y G",
                "placeholder": "W Y S I W Y G",
                "order": 5,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.w_y_s_i_w_y_g",
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1352,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-06-04 21:47:13"
            },
            "item_1356": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2009,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "file",
                "label": "File",
                "placeholder": "File",
                "order": 6,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.file",
                "type": "file",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "file",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "file",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1356,
                "createdAt": "2024-05-01 23:16:14",
                "updatedAt": "2024-05-28 21:52:22"
            },
            "item_1357": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2010,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "image",
                "label": "Image",
                "placeholder": "Image",
                "order": 7,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.image",
                "type": "image",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1357,
                "createdAt": "2024-05-01 23:16:25",
                "updatedAt": "2024-05-28 21:52:24"
            },
            "item_1355": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2007,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "i_p_address",
                "label": "I P Address",
                "placeholder": "I P Address",
                "order": 8,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.i_p_address",
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "max:255"
                ],
                "updateValidation": [
                    "nullable",
                    "max:255"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1355,
                "createdAt": "2024-05-01 23:15:31",
                "updatedAt": "2024-05-02 22:25:17"
            },
            "item_1367": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2041,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "latitude",
                "label": "Latitude",
                "placeholder": "Latitude",
                "order": 12,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.latitude",
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1367,
                "createdAt": "2024-05-02 06:58:32",
                "updatedAt": "2024-05-28 21:53:17"
            },
            "item_1368": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 189,
                "fieldId": 2042,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "longitude",
                "label": "Longitude",
                "placeholder": "Longitude",
                "order": 13,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": "subrecord.longitude",
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1368,
                "createdAt": "2024-05-02 06:58:37",
                "updatedAt": "2024-05-28 21:53:18"
            },
            "item_1371": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2021,
                "relationshipId": 372,
                "relationshipCollectionName": "users",
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": "usersForSelect",
                "name": "user_id",
                "label": "User",
                "placeholder": "User",
                "order": 0,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "Please select the User",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "select",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "uuid",
                    "exists:users,id"
                ],
                "updateValidation": [
                    "required",
                    "uuid",
                    "exists:users,id"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1371,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-19 12:06:04"
            },
            "item_1372": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2020,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "at",
                "label": "At",
                "placeholder": "At",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "date",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "date"
                ],
                "updateValidation": [
                    "required",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1372,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-02 22:33:12"
            },
            "item_1378": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2024,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "file",
                "label": "File",
                "placeholder": "File",
                "order": 2,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "file",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "file",
                    "max:1024",
                    "required"
                ],
                "updateValidation": [
                    "file",
                    "max:1024",
                    "required"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1378,
                "createdAt": "2024-05-02 22:30:46",
                "updatedAt": "2024-05-28 21:47:58"
            },
            "item_1374": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2022,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "name",
                "label": "Name",
                "placeholder": "Name",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1374,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-28 21:47:56"
            },
            "item_1375": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2025,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "description",
                "label": "Description",
                "placeholder": "Description",
                "order": 4,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1375,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-28 21:47:24"
            },
            "item_1376": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2026,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "type",
                "label": "Type",
                "placeholder": "Type",
                "order": 5,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1376,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-28 21:47:31"
            },
            "item_1377": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 190,
                "fieldId": 2027,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "metadata",
                "label": "Metadata",
                "placeholder": "Metadata",
                "order": 6,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "json"
                ],
                "updateValidation": [
                    "nullable",
                    "json"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1377,
                "createdAt": "2024-05-02 22:30:30",
                "updatedAt": "2024-05-28 21:47:33"
            },
            "item_1379": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2029,
                "relationshipId": 374,
                "relationshipCollectionName": "users",
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": "usersForSelect",
                "name": "user_id",
                "label": "User",
                "placeholder": "User",
                "order": 0,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "Please select the User",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "select",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "uuid",
                    "exists:users,id"
                ],
                "updateValidation": [
                    "required",
                    "uuid",
                    "exists:users,id"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1379,
                "createdAt": "2024-05-02 22:32:17",
                "updatedAt": "2024-05-28 21:48:44"
            },
            "item_1380": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2030,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "at",
                "label": "At",
                "placeholder": "At",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "date",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "date"
                ],
                "updateValidation": [
                    "required",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1380,
                "createdAt": "2024-05-02 22:32:17",
                "updatedAt": "2024-05-28 21:48:44"
            },
            "item_1387": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2031,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "file",
                "label": "File",
                "placeholder": "File",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "image",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "image",
                    "max:1024",
                    "required"
                ],
                "updateValidation": [
                    "image",
                    "max:1024",
                    "required"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1387,
                "createdAt": "2024-05-02 22:32:31",
                "updatedAt": "2024-05-28 21:50:41"
            },
            "item_1382": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2036,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "name",
                "label": "Name",
                "placeholder": "Name",
                "order": 4,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1382,
                "createdAt": "2024-05-02 22:32:17",
                "updatedAt": "2024-05-28 21:49:45"
            },
            "item_1388": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2034,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "description",
                "label": "Description",
                "placeholder": "Description",
                "order": 5,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1388,
                "createdAt": "2024-05-02 22:35:06",
                "updatedAt": "2024-05-28 21:49:40"
            },
            "item_1384": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2033,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "type",
                "label": "Type",
                "placeholder": "Type",
                "order": 6,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "max:255",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1384,
                "createdAt": "2024-05-02 22:32:17",
                "updatedAt": "2024-05-28 21:49:36"
            },
            "item_1386": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2035,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "metadata",
                "label": "Metadata",
                "placeholder": "Metadata",
                "order": 7,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "json"
                ],
                "updateValidation": [
                    "nullable",
                    "json"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": false,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1386,
                "createdAt": "2024-05-02 22:32:17",
                "updatedAt": "2024-05-28 21:49:31"
            },
            "item_1418": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 191,
                "fieldId": 2032,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "thumbnail",
                "label": "Thumbnail",
                "placeholder": "Thumbnail",
                "order": 9,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "image",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": false,
                "onUpdate": false,
                "onShow": false,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1418,
                "createdAt": "2024-05-28 21:49:08",
                "updatedAt": "2024-05-28 21:50:02"
            },
            "item_1399": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2011,
                "relationshipId": 368,
                "relationshipCollectionName": "records",
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": "recordsForSelect",
                "name": "record_id",
                "label": "Record",
                "placeholder": "Record",
                "order": 0,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "Please select the Record",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "select",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "required",
                    "uuid",
                    "exists:records,id"
                ],
                "updateValidation": [
                    "required",
                    "uuid",
                    "exists:records,id"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1399,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1400": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2004,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "datetime",
                "label": "Datetime",
                "placeholder": "Datetime",
                "order": 1,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "datetime",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date"
                ],
                "updateValidation": [
                    "nullable",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1400,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1401": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2005,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "date",
                "label": "Date",
                "placeholder": "Date",
                "order": 2,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "date",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date"
                ],
                "updateValidation": [
                    "nullable",
                    "date"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1401,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1402": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2006,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "time",
                "label": "Time",
                "placeholder": "Time",
                "order": 3,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "time",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "date_format:H:i:s"
                ],
                "updateValidation": [
                    "nullable",
                    "date_format:H:i"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1402,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-06-01 20:00:33"
            },
            "item_1403": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2003,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "n_p_w_p",
                "label": "N P W P",
                "placeholder": "N P W P",
                "order": 4,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable"
                ],
                "updateValidation": [
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1403,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1404": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2045,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "markdown_text",
                "label": "Markdown Text",
                "placeholder": "Markdown Text",
                "order": 5,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1404,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1405": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2008,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "w_y_s_i_w_y_g",
                "label": "W Y S I W Y G",
                "placeholder": "W Y S I W Y G",
                "order": 6,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "textarea",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "string"
                ],
                "updateValidation": [
                    "nullable",
                    "string"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1405,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1412": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2009,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "file",
                "label": "File",
                "placeholder": "File",
                "order": 7,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "file",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "file",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "file",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1412,
                "createdAt": "2024-05-20 20:55:53",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1413": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2010,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "image",
                "label": "Image",
                "placeholder": "Image",
                "order": 8,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "image",
                "checked": false,
                "max": 255,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "updateValidation": [
                    "image",
                    "max:1024",
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1413,
                "createdAt": "2024-05-20 20:56:00",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1408": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2007,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "i_p_address",
                "label": "I P Address",
                "placeholder": "I P Address",
                "order": 9,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "text",
                "checked": false,
                "max": null,
                "min": null,
                "step": null,
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable"
                ],
                "updateValidation": [
                    "nullable"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1408,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:58:10"
            },
            "item_1410": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2041,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "latitude",
                "label": "Latitude",
                "placeholder": "Latitude",
                "order": 12,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "number",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1410,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            },
            "item_1411": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "crudId": 196,
                "fieldId": 2042,
                "relationshipId": null,
                "relationshipCollectionName": null,
                "foreignId": null,
                "foreignCollectionName": null,
                "livewireSelectVariableName": null,
                "name": "longitude",
                "label": "Longitude",
                "placeholder": "Longitude",
                "order": 13,
                "cols": 12,
                "colsMedium": 12,
                "colsLarge": 12,
                "readOnly": false,
                "required": true,
                "defaultValue": null,
                "starterOptionText": "",
                "isComputed": false,
                "computedFormula": null,
                "showComputedOnLivewireForm": false,
                "livewireInputReference": null,
                "type": "number",
                "checked": false,
                "max": 255,
                "min": null,
                "step": "0.01",
                "items": [],
                "dependentSelectItems": {},
                "validation": [
                    "nullable",
                    "numeric"
                ],
                "updateValidation": [
                    "nullable",
                    "numeric"
                ],
                "onCreate": true,
                "onUpdate": true,
                "onShow": true,
                "onIndex": true,
                "onForms": true,
                "dependentSelectId": null,
                "id": 1411,
                "createdAt": "2024-05-20 20:53:59",
                "updatedAt": "2024-05-20 20:57:39"
            }
        },
        "projects": {
            "projects": {
                "count": 12,
                "lastPrimaryKey": 17,
                "index": {
                    "1": {
                        "hasMany": {
                            "entities.projectId": [
                                1,
                                2
                            ],
                            "cruds.projectId": [
                                1,
                                2
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "entities.projectId": [
                                4,
                                43,
                                44,
                                42,
                                40,
                                39,
                                41,
                                34,
                                35,
                                36,
                                37,
                                38,
                                14,
                                13,
                                11,
                                9,
                                10,
                                12,
                                6,
                                7,
                                8,
                                5,
                                17,
                                16,
                                15,
                                46,
                                47,
                                48,
                                45,
                                18,
                                19,
                                87,
                                85,
                                88,
                                86
                            ],
                            "comments.projectId": [],
                            "cruds.projectId": [
                                32,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                14,
                                15,
                                16,
                                17,
                                18,
                                13,
                                79,
                                80,
                                81,
                                82
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "3": {
                        "hasMany": {
                            "entities.projectId": [
                                20,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                33,
                                32,
                                23,
                                22,
                                21
                            ],
                            "cruds.projectId": [
                                19,
                                29,
                                22,
                                21,
                                20,
                                24,
                                23,
                                30,
                                27,
                                26,
                                25,
                                28
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "entities.projectId": [
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55
                            ],
                            "cruds.projectId": [
                                53,
                                59,
                                54,
                                55,
                                56,
                                58,
                                57
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "5": {
                        "hasMany": {
                            "entities.projectId": [
                                61,
                                160,
                                161,
                                60,
                                194,
                                193,
                                192,
                                58,
                                190,
                                203,
                                56,
                                159,
                                57
                            ],
                            "cruds.projectId": [
                                60,
                                154,
                                61,
                                149,
                                151,
                                156,
                                152,
                                153,
                                65,
                                162,
                                165,
                                166,
                                167,
                                186
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "6": {
                        "hasMany": {
                            "entities.projectId": [
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                69,
                                68,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "7": {
                        "hasMany": {
                            "entities.projectId": [
                                70,
                                71,
                                75,
                                76
                            ],
                            "cruds.projectId": [
                                67,
                                73,
                                76,
                                77,
                                78
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "10": {
                        "hasMany": {
                            "entities.projectId": [
                                162,
                                163,
                                167,
                                166,
                                168,
                                169,
                                171,
                                172,
                                170,
                                173,
                                175,
                                165,
                                174,
                                176,
                                164
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "11": {
                        "hasMany": {
                            "entities.projectId": [
                                177,
                                181,
                                179,
                                180,
                                178,
                                182,
                                183
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "12": {
                        "hasMany": {
                            "entities.projectId": [
                                204,
                                207,
                                205,
                                206,
                                184,
                                185
                            ],
                            "cruds.projectId": [
                                158,
                                187,
                                188,
                                190,
                                191,
                                196,
                                189
                            ],
                            "comments.projectId": [
                                4
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "15": {
                        "hasMany": {
                            "entities.projectId": [
                                195,
                                196,
                                197,
                                198,
                                199,
                                200,
                                201,
                                202
                            ],
                            "cruds.projectId": [
                                180,
                                179,
                                185,
                                183,
                                178,
                                181,
                                184,
                                177,
                                182
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    },
                    "17": {
                        "hasMany": {
                            "entities.projectId": [
                                210
                            ],
                            "cruds.projectId": [
                                195
                            ]
                        },
                        "hasOne": {},
                        "belongsTo": {},
                        "belongsToMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": [],
                "reladbVersion": "0.3.1"
            },
            "item_12": {
                "__returnRelationsAutomatically": true,
                "__saveDataToStorage": true,
                "__onUpdateListener": null,
                "__customEventsEnabled": false,
                "name": "Vemto",
                "url": "http://vemto.test",
                "mode": "draft",
                "folder": "D:\\laragon\\www",
                "authModelId": 184,
                "tenancyModelId": null,
                "settings": {
                    "cssFramework": "tailwind",
                    "theme": "default",
                    "uiTemplate": "jetstream",
                    "mutateDatesToCarbon": true,
                    "authModel": null,
                    "massAssignment": "fillable",
                    "validationMode": "array",
                    "routesMode": "resource",
                    "viewsFormMode": "blade",
                    "modelsFolder": "/Models",
                    "policiesFolder": "/Policies",
                    "servicesFolder": "/Services",
                    "requestsFolder": "/Http/Requests",
                    "controllersFolder": "/Http/Controllers",
                    "apiControllersFolder": "/Http/Controllers/Api",
                    "viewsFolder": "/resources/views/app",
                    "controllerNameMode": "singular",
                    "schemaZoom": 0.8,
                    "schemaScrollTop": 4374.39990234375,
                    "schemaScrollLeft": 3897.60009765625,
                    "turbolinks": false,
                    "modules": []
                },
                "codeSettings": {
                    "options": {
                        "forceGeneration": true,
                        "deleteRemovedModules": true
                    },
                    "base": {
                        "migrations": false,
                        "models": false,
                        "policies": false,
                        "factories": false,
                        "seeders": false,
                        "routes": false,
                        "apiRoutes": false,
                        "apiSanctumAuth": false
                    },
                    "cruds": {
                        "158": {
                            "crudId": 158,
                            "name": "Users",
                            "requests": false,
                            "controller": false,
                            "views": false,
                            "tests": false,
                            "api": false
                        },
                        "187": {
                            "crudId": 187,
                            "name": "User Activity Logs",
                            "requests": false,
                            "controller": false,
                            "views": false,
                            "tests": false,
                            "api": false
                        },
                        "188": {
                            "crudId": 188,
                            "name": "Records",
                            "requests": false,
                            "controller": false,
                            "views": false,
                            "tests": false,
                            "api": false
                        },
                        "189": {
                            "crudId": 189,
                            "name": "Record Subrecords",
                            "requests": false,
                            "controller": false,
                            "views": true,
                            "tests": false,
                            "api": false
                        },
                        "190": {
                            "crudId": 190,
                            "name": "User Uploads",
                            "requests": false,
                            "controller": false,
                            "views": false,
                            "tests": false,
                            "api": false
                        },
                        "191": {
                            "crudId": 191,
                            "name": "User Galleries",
                            "requests": false,
                            "controller": false,
                            "views": false,
                            "tests": false,
                            "api": false
                        },
                        "196": {
                            "crudId": 196,
                            "name": "Subrecords",
                            "requests": false,
                            "controller": false,
                            "views": false,
                            "tests": false,
                            "api": false
                        }
                    },
                    "modules": {
                        "permissionsApi": false,
                        "permissions": false,
                        "uiTemplate": true
                    },
                    "generationCommands": {
                        "checkDependencies": true,
                        "gitClone": true,
                        "composerInstall": true,
                        "storageLink": true,
                        "npmInstall": true,
                        "compileAssets": true
                    },
                    "runCommands": {
                        "compileAssets": true,
                        "migrate": true,
                        "serve": true,
                        "openBrowser": true
                    }
                },
                "connection": {
                    "type": "pgsql",
                    "host": "127.0.0.1",
                    "port": 5432,
                    "database": "vemto",
                    "username": "postgres",
                    "password": ""
                },
                "modules": [
                    "auth",
                    "permissions",
                    "multiTenancy"
                ],
                "version": "1.3.2",
                "laravelVersion": 10,
                "repositoryUrl": null,
                "repositoryBranch": null,
                "files": {
                    ".env": {
                        "deleteOnGeneration": true,
                        "content": "APP_NAME=\"Vemto\"\nAPP_ENV=local\nAPP_KEY=base64:XHzNwusgQ4C3GxO/iuzFuCtfraFab5DVKU09/BcuquM=\nAPP_DEBUG=true\nAPP_URL=http://vemto.test\n\nLOG_CHANNEL=stack\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_LEVEL=debug\n\nDB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=vemto\nDB_USERNAME=postgres\nDB_PASSWORD=\"\"\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=database\nSESSION_LIFETIME=120\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailpit\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=\"hello@example.com\"\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\nAWS_USE_PATH_STYLE_ENDPOINT=false\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_HOST=\nPUSHER_PORT=443\nPUSHER_SCHEME=https\nPUSHER_APP_CLUSTER=mt1\nVITE_APP_NAME=\"${APP_NAME}\"\nVITE_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nVITE_PUSHER_HOST=\"${PUSHER_HOST}\"\nVITE_PUSHER_PORT=\"${PUSHER_PORT}\"\nVITE_PUSHER_SCHEME=\"${PUSHER_SCHEME}\"\nVITE_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n",
                        "module": "base",
                        "path": ".env"
                    },
                    "\\app\\Providers\\AuthServiceProvider.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     */\n    public function boot(): void\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n    }\n}\n",
                        "module": "base",
                        "path": "\\app\\Providers\\AuthServiceProvider.php"
                    },
                    "\\app\\Providers\\AppServiceProvider.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     */\n    public function register(): void\n    {\n    }\n\n    /**\n     * Bootstrap any application services.\n     */\n    public function boot(): void\n    {\n        //\n    }\n}\n",
                        "module": "base",
                        "path": "\\app\\Providers\\AppServiceProvider.php"
                    },
                    "\\config\\auth.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nreturn [\n    'super_admins' => ['admin@admin.com'],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_reset_tokens',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n",
                        "module": "base",
                        "path": "\\config\\auth.php"
                    },
                    "\\app\\Http\\Controllers\\Controller.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, ValidatesRequests;\n}\n",
                        "module": "base",
                        "path": "\\app\\Http\\Controllers\\Controller.php"
                    },
                    "\\app\\Http\\Requests\\UserStoreRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users,email', 'email'],\n            'password' => ['required', 'min:6'],\n        ];\n    }\n}\n",
                        "module": "crud:158",
                        "path": "\\app\\Http\\Requests\\UserStoreRequest.php"
                    },
                    "\\app\\Http\\Requests\\UserUpdateRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users', 'email')->ignore($this->user),\n                'email',\n            ],\n            'password' => ['nullable'],\n        ];\n    }\n}\n",
                        "module": "crud:158",
                        "path": "\\app\\Http\\Requests\\UserUpdateRequest.php"
                    },
                    "\\app\\Http\\Controllers\\UserController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = (string) $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(10)\n            ->withQueryString();\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', User::class);\n\n        return view('app.users.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        return redirect()\n            ->route('users.show', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, User $user): View\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, User $user): View\n    {\n        $this->authorize('update', $user);\n\n        return view('app.users.edit', compact('user'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserUpdateRequest $request,\n        User $user\n    ): RedirectResponse {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        return redirect()\n            ->route('users.show', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, User $user): RedirectResponse\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n",
                        "module": "crud:158",
                        "path": "\\app\\Http\\Controllers\\UserController.php"
                    },
                    "\\tests\\Feature\\Controllers\\UserControllerTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user(): void\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertModelMissing($user);\n    }\n}\n",
                        "module": "crud:158",
                        "path": "\\tests\\Feature\\Controllers\\UserControllerTest.php"
                    },
                    "\\resources\\views\\app\\users\\create.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.users.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form method=\"POST\" action=\"{{ route('users.store') }}\">\n                @include('app.users.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            >\n                            </i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:158",
                        "path": "\\resources\\views\\app\\users\\create.blade.php"
                    },
                    "\\resources\\views\\app\\users\\edit.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.users.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form method=\"PUT\" action=\"{{ route('users.update', $user) }}\">\n                @include('app.users.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('users.show', $user) }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\n                            </i>\n                            @lang('crud.common.cancel')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:158",
                        "path": "\\resources\\views\\app\\users\\edit.blade.php"
                    },
                    "\\resources\\views\\app\\users\\form-inputs.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@php $editing = isset($user) @endphp\n\n<style>\n    .ts-control {\n        border: none;\n        padding: 0;\n    }\n\n    .ts-dropdown,\n    .ts-control,\n    .ts-control input {\n        color: rgb(31 41 55 / var(--tw-text-opacity));\n        font-family: inherit;\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n</style>\n\n<x-partials.card>\n    {{--\n    <x-slot name=\"title\">\n        <span>@lang('card.title')</span>\n    </x-slot>\n    --}}\n\n    <div class=\"flex flex-wrap\">\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"name\"\n                label=\"{{ __('crud.users.inputs.name') }}\"\n                :value=\"old('name', ($editing ? $user->name : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.users.inputs.name') }}\"\n                required\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.email\n                name=\"email\"\n                label=\"{{ __('crud.users.inputs.email') }}\"\n                :value=\"old('email', ($editing ? $user->email : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.users.inputs.email') }}\"\n                required\n            ></x-inputs.email>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.password\n                name=\"password\"\n                label=\"{{ __('crud.users.inputs.password') }}\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.users.inputs.password') }}\"\n                :required=\"!$editing\"\n            ></x-inputs.password>\n        </x-inputs.group>\n    </div>\n</x-partials.card>\n",
                        "module": "crud:158",
                        "path": "\\resources\\views\\app\\users\\form-inputs.blade.php"
                    },
                    "\\resources\\views\\app\\users\\show.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.users.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                {{--\n                <x-slot name=\"title\">\n                    <span>@lang('card.title')</span>\n                </x-slot>\n                --}}\n\n                <div class=\"flex flex-wrap mt-2 px-4\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.name')\n                        </h5>\n                        <span> {{ $user->name ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.email')\n                        </h5>\n                        <span> {{ $user->email ?? '-' }} </span>\n                    </div>\n                </div>\n            </x-partials.card>\n\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    <span>@lang('text.actions')</span>\n                </x-slot>\n                <div class=\"mt-4 px-4\">\n                    <a href=\"{{ route('users.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('update', $user)\n                    <a href=\"{{ route('users.edit', $user) }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-create\"></i>\n                        @lang('crud.common.edit')\n                    </a>\n                    @endcan @can('delete', $user)\n                    <div class=\"float-right\">\n                        <form\n                            action=\"{{ route('users.destroy', $user) }}\"\n                            method=\"POST\"\n                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                        >\n                            @csrf @method('DELETE')\n                            <button type=\"submit\" class=\"button\">\n                                <i class=\"mr-1 icon ion-md-trash text-red-600\">\n                                </i>\n                                <span class=\"text-red-600\">\n                                    @lang('crud.common.delete')\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:158",
                        "path": "\\resources\\views\\app\\users\\show.blade.php"
                    },
                    "\\resources\\views\\app\\users\\index.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\User::class)\n                            <a\n                                href=\"{{ route('users.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.email')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($users as $user)\n                            <tr class=\"hover:bg-gray-50\">\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->name ?? '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->email ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $user)\n                                        <a\n                                            href=\"{{ route('users.edit', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $user)\n                                        <a\n                                            href=\"{{ route('users.show', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"3\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"3\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $users->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:158",
                        "path": "\\resources\\views\\app\\users\\index.blade.php"
                    },
                    "\\app\\Http\\Requests\\UserActivityLogStoreRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserActivityLogStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'at' => ['required', 'date'],\n            'user_id' => ['required', 'uuid', 'exists:users,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'link' => ['nullable', 'string', 'url'],\n            'message' => ['nullable', 'string'],\n            'i_p_address' => ['nullable', 'ip'],\n        ];\n    }\n}\n",
                        "module": "crud:187",
                        "path": "\\app\\Http\\Requests\\UserActivityLogStoreRequest.php"
                    },
                    "\\app\\Http\\Requests\\UserActivityLogUpdateRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserActivityLogUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'at' => ['required', 'date'],\n            'user_id' => ['required', 'uuid', 'exists:users,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'link' => ['nullable', 'string', 'url'],\n            'message' => ['nullable', 'string'],\n            'i_p_address' => ['nullable', 'ip'],\n        ];\n    }\n}\n",
                        "module": "crud:187",
                        "path": "\\app\\Http\\Requests\\UserActivityLogUpdateRequest.php"
                    },
                    "\\app\\Http\\Controllers\\UserActivityLogController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse App\\Models\\UserActivityLog;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\UserActivityLogStoreRequest;\nuse App\\Http\\Requests\\UserActivityLogUpdateRequest;\n\nclass UserActivityLogController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', UserActivityLog::class);\n\n        $search = (string) $request->get('search', '');\n\n        $userActivityLogs = UserActivityLog::search($search)\n            ->latest('id')\n            ->paginate(10)\n            ->withQueryString();\n\n        return view(\n            'app.user_activity_logs.index',\n            compact('userActivityLogs', 'search')\n        );\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', UserActivityLog::class);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.user_activity_logs.create', compact('users'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(\n        UserActivityLogStoreRequest $request\n    ): RedirectResponse {\n        $this->authorize('create', UserActivityLog::class);\n\n        $validated = $request->validated();\n\n        $userActivityLog = UserActivityLog::create($validated);\n\n        return redirect()\n            ->route('user-activity-logs.show', $userActivityLog)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(\n        Request $request,\n        UserActivityLog $userActivityLog\n    ): View {\n        $this->authorize('view', $userActivityLog);\n\n        return view('app.user_activity_logs.show', compact('userActivityLog'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(\n        Request $request,\n        UserActivityLog $userActivityLog\n    ): View {\n        $this->authorize('update', $userActivityLog);\n\n        $users = User::pluck('name', 'id');\n\n        return view(\n            'app.user_activity_logs.edit',\n            compact('userActivityLog', 'users')\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserActivityLogUpdateRequest $request,\n        UserActivityLog $userActivityLog\n    ): RedirectResponse {\n        $this->authorize('update', $userActivityLog);\n\n        $validated = $request->validated();\n\n        $userActivityLog->update($validated);\n\n        return redirect()\n            ->route('user-activity-logs.show', $userActivityLog)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        UserActivityLog $userActivityLog\n    ): RedirectResponse {\n        $this->authorize('delete', $userActivityLog);\n\n        $userActivityLog->delete();\n\n        return redirect()\n            ->route('user-activity-logs.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n",
                        "module": "crud:187",
                        "path": "\\app\\Http\\Controllers\\UserActivityLogController.php"
                    },
                    "\\tests\\Feature\\Controllers\\UserActivityLogControllerTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\UserActivityLog;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserActivityLogControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_user_activity_logs(): void\n    {\n        $userActivityLogs = UserActivityLog::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('user-activity-logs.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_activity_logs.index')\n            ->assertViewHas('userActivityLogs');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user_activity_log(): void\n    {\n        $response = $this->get(route('user-activity-logs.create'));\n\n        $response->assertOk()->assertViewIs('app.user_activity_logs.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_activity_log(): void\n    {\n        $data = UserActivityLog::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('user-activity-logs.store'), $data);\n\n        $this->assertDatabaseHas('user_activity_logs', $data);\n\n        $userActivityLog = UserActivityLog::latest('id')->first();\n\n        $response->assertRedirect(\n            route('user-activity-logs.edit', $userActivityLog)\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user_activity_log(): void\n    {\n        $userActivityLog = UserActivityLog::factory()->create();\n\n        $response = $this->get(\n            route('user-activity-logs.show', $userActivityLog)\n        );\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_activity_logs.show')\n            ->assertViewHas('userActivityLog');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user_activity_log(): void\n    {\n        $userActivityLog = UserActivityLog::factory()->create();\n\n        $response = $this->get(\n            route('user-activity-logs.edit', $userActivityLog)\n        );\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_activity_logs.edit')\n            ->assertViewHas('userActivityLog');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user_activity_log(): void\n    {\n        $userActivityLog = UserActivityLog::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'user_id' => $this->faker->uuid(),\n            'title' => $this->faker->sentence(10),\n            'link' => $this->faker->text(),\n            'message' => $this->faker->sentence(20),\n            'i_p_address' => $this->faker->ipv4(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->put(\n            route('user-activity-logs.update', $userActivityLog),\n            $data\n        );\n\n        $data['id'] = $userActivityLog->id;\n\n        $this->assertDatabaseHas('user_activity_logs', $data);\n\n        $response->assertRedirect(\n            route('user-activity-logs.edit', $userActivityLog)\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user_activity_log(): void\n    {\n        $userActivityLog = UserActivityLog::factory()->create();\n\n        $response = $this->delete(\n            route('user-activity-logs.destroy', $userActivityLog)\n        );\n\n        $response->assertRedirect(route('user-activity-logs.index'));\n\n        $this->assertModelMissing($userActivityLog);\n    }\n}\n",
                        "module": "crud:187",
                        "path": "\\tests\\Feature\\Controllers\\UserActivityLogControllerTest.php"
                    },
                    "\\resources\\views\\app\\user_activity_logs\\create.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_activity_logs.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('user-activity-logs.store') }}\"\n            >\n                @include('app.user_activity_logs.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('user-activity-logs.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            >\n                            </i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:187",
                        "path": "\\resources\\views\\app\\user_activity_logs\\create.blade.php"
                    },
                    "\\resources\\views\\app\\user_activity_logs\\edit.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_activity_logs.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('user-activity-logs.update', $userActivityLog) }}\"\n            >\n                @include('app.user_activity_logs.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('user-activity-logs.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('user-activity-logs.show', $userActivityLog) }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\n                            </i>\n                            @lang('crud.common.cancel')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:187",
                        "path": "\\resources\\views\\app\\user_activity_logs\\edit.blade.php"
                    },
                    "\\resources\\views\\app\\user_activity_logs\\form-inputs.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@php $editing = isset($userActivityLog) @endphp\n\n<style>\n    .ts-control {\n        border: none;\n        padding: 0;\n    }\n\n    .ts-dropdown,\n    .ts-control,\n    .ts-control input {\n        color: rgb(31 41 55 / var(--tw-text-opacity));\n        font-family: inherit;\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n</style>\n\n<x-partials.card>\n    {{--\n    <x-slot name=\"title\">\n        <span>@lang('card.title')</span>\n    </x-slot>\n    --}}\n\n    <div class=\"flex flex-wrap\">\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.date\n                name=\"at\"\n                label=\"{{ __('crud.user_activity_logs.inputs.at') }}\"\n                value=\"{{ old('at', ($editing ? optional($userActivityLog->at)->format('Y-m-d') : '')) }}\"\n                required\n            ></x-inputs.date>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.tomselect\n                name=\"user_id\"\n                label=\"{{ __('crud.user_activity_logs.inputs.user_id') }}\"\n                required\n            >\n                @php $selected = old('user_id', ($editing ? $userActivityLog->user_id : '')) @endphp\n                <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n                @foreach($users as $value => $label)\n                <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n                @endforeach\n            </x-inputs.tomselect>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"title\"\n                label=\"{{ __('crud.user_activity_logs.inputs.title') }}\"\n                :value=\"old('title', ($editing ? $userActivityLog->title : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.user_activity_logs.inputs.title') }}\"\n                required\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.url\n                name=\"link\"\n                label=\"{{ __('crud.user_activity_logs.inputs.link') }}\"\n                :value=\"old('link', ($editing ? $userActivityLog->link : ''))\"\n                placeholder=\"{{ __('crud.user_activity_logs.inputs.link') }}\"\n            ></x-inputs.url>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"message\"\n                label=\"{{ __('crud.user_activity_logs.inputs.message') }}\"\n            >\n                {{ old('message', ($editing ? $userActivityLog->message : ''))\n                }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"i_p_address\"\n                label=\"{{ __('crud.user_activity_logs.inputs.i_p_address') }}\"\n                :value=\"old('i_p_address', ($editing ? $userActivityLog->i_p_address : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.user_activity_logs.inputs.i_p_address') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n    </div>\n</x-partials.card>\n",
                        "module": "crud:187",
                        "path": "\\resources\\views\\app\\user_activity_logs\\form-inputs.blade.php"
                    },
                    "\\resources\\views\\app\\user_activity_logs\\show.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_activity_logs.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                {{--\n                <x-slot name=\"title\">\n                    <span>@lang('card.title')</span>\n                </x-slot>\n                --}}\n\n                <div class=\"flex flex-wrap mt-2 px-4\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_activity_logs.inputs.at')\n                        </h5>\n                        <span>\n                            {{ optional($userActivityLog->at)->format('l, d F\n                            Y') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_activity_logs.inputs.user_id')\n                        </h5>\n                        <span>\n                            {{ optional($userActivityLog->user)->name ?? '-' }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_activity_logs.inputs.title')\n                        </h5>\n                        <span> {{ $userActivityLog->title ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_activity_logs.inputs.link')\n                        </h5>\n                        <a\n                            class=\"underline cursor-pointer\"\n                            target=\"_blank\"\n                            href=\"{{ $userActivityLog->link }}\"\n                        >\n                            {{ $userActivityLog->link ?? '-' }}\n                        </a>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_activity_logs.inputs.message')\n                        </h5>\n                        <span> {{ $userActivityLog->message ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_activity_logs.inputs.i_p_address')\n                        </h5>\n                        <span>\n                            {{ $userActivityLog->i_p_address ?? '-' }}\n                        </span>\n                    </div>\n                </div>\n            </x-partials.card>\n\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    <span>@lang('text.actions')</span>\n                </x-slot>\n                <div class=\"mt-4 px-4\">\n                    <a\n                        href=\"{{ route('user-activity-logs.index') }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('update', $userActivityLog)\n                    <a\n                        href=\"{{ route('user-activity-logs.edit', $userActivityLog) }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-create\"></i>\n                        @lang('crud.common.edit')\n                    </a>\n                    @endcan @can('delete', $userActivityLog)\n                    <div class=\"float-right\">\n                        <form\n                            action=\"{{ route('user-activity-logs.destroy', $userActivityLog) }}\"\n                            method=\"POST\"\n                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                        >\n                            @csrf @method('DELETE')\n                            <button type=\"submit\" class=\"button\">\n                                <i class=\"mr-1 icon ion-md-trash text-red-600\">\n                                </i>\n                                <span class=\"text-red-600\">\n                                    @lang('crud.common.delete')\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:187",
                        "path": "\\resources\\views\\app\\user_activity_logs\\show.blade.php"
                    },
                    "\\resources\\views\\app\\user_activity_logs\\index.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.user_activity_logs.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\UserActivityLog::class)\n                            <a\n                                href=\"{{ route('user-activity-logs.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_activity_logs.inputs.at')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_activity_logs.inputs.user_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_activity_logs.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_activity_logs.inputs.i_p_address')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($userActivityLogs as $userActivityLog)\n                            <tr class=\"hover:bg-gray-50\">\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{\n                                    optional($userActivityLog->at)->format('D, d\n                                    M Y') }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($userActivityLog->user)->name ??\n                                    '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $userActivityLog->title ?? '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $userActivityLog->i_p_address ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $userActivityLog)\n                                        <a\n                                            href=\"{{ route('user-activity-logs.edit', $userActivityLog) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $userActivityLog)\n                                        <a\n                                            href=\"{{ route('user-activity-logs.show', $userActivityLog) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"5\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"5\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $userActivityLogs->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:187",
                        "path": "\\resources\\views\\app\\user_activity_logs\\index.blade.php"
                    },
                    "\\app\\Http\\Requests\\RecordStoreRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass RecordStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['nullable', 'uuid', 'exists:users,id'],\n            'string' => ['required', 'max:255', 'string'],\n            'email' => ['nullable', 'email'],\n            'integer' => ['nullable', 'numeric'],\n            'decimal' => ['nullable', 'numeric'],\n            'n_p_w_p' => ['nullable'],\n            'datetime' => ['nullable', 'date'],\n            'date' => ['nullable', 'date'],\n            'time' => ['nullable', 'date_format:H:i'],\n            'i_p_address' => ['nullable', 'ip'],\n            'bool' => ['nullable', 'boolean'],\n            'enum' => ['nullable', 'in:enabled,disabled'],\n            'text' => ['nullable', 'string'],\n            'file' => ['file', 'max:1024', 'nullable'],\n            'image' => ['image', 'max:1024', 'nullable'],\n            'markdown_text' => ['nullable', 'string'],\n            'w_y_s_i_w_y_g' => ['nullable', 'string'],\n            'latitude' => ['nullable', 'numeric'],\n            'longitude' => ['nullable', 'numeric'],\n        ];\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\app\\Http\\Requests\\RecordStoreRequest.php"
                    },
                    "\\app\\Http\\Requests\\RecordUpdateRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass RecordUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['nullable', 'uuid', 'exists:users,id'],\n            'string' => ['required', 'max:255', 'string'],\n            'email' => ['nullable', 'email'],\n            'integer' => ['nullable', 'numeric'],\n            'decimal' => ['nullable', 'numeric'],\n            'n_p_w_p' => ['nullable'],\n            'datetime' => ['nullable', 'date'],\n            'date' => ['nullable', 'date'],\n            'time' => ['nullable', 'date_format:H:i'],\n            'i_p_address' => ['nullable', 'ip'],\n            'bool' => ['nullable', 'boolean'],\n            'enum' => ['nullable', 'in:enabled,disabled'],\n            'text' => ['nullable', 'string'],\n            'file' => ['file', 'max:1024', 'nullable'],\n            'image' => ['image', 'max:1024', 'nullable'],\n            'markdown_text' => ['nullable', 'string'],\n            'w_y_s_i_w_y_g' => ['nullable', 'string'],\n            'latitude' => ['nullable', 'numeric'],\n            'longitude' => ['nullable', 'numeric'],\n        ];\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\app\\Http\\Requests\\RecordUpdateRequest.php"
                    },
                    "\\app\\Http\\Controllers\\RecordController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Record;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\RecordStoreRequest;\nuse App\\Http\\Requests\\RecordUpdateRequest;\n\nclass RecordController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Record::class);\n\n        $search = (string) $request->get('search', '');\n\n        $records = Record::search($search)\n            ->latest()\n            ->paginate(10)\n            ->withQueryString();\n\n        return view('app.records.index', compact('records', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Record::class);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.records.create', compact('users'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(RecordStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Record::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $record = Record::create($validated);\n\n        return redirect()\n            ->route('records.show', $record)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Record $record): View\n    {\n        $this->authorize('view', $record);\n\n        return view('app.records.show', compact('record'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Record $record): View\n    {\n        $this->authorize('update', $record);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.records.edit', compact('record', 'users'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        RecordUpdateRequest $request,\n        Record $record\n    ): RedirectResponse {\n        $this->authorize('update', $record);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            if ($record->file) {\n                Storage::delete($record->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            if ($record->image) {\n                Storage::delete($record->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $record->update($validated);\n\n        return redirect()\n            ->route('records.show', $record)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Record $record): RedirectResponse\n    {\n        $this->authorize('delete', $record);\n\n        if ($record->file) {\n            Storage::delete($record->file);\n        }\n\n        if ($record->image) {\n            Storage::delete($record->image);\n        }\n\n        $record->delete();\n\n        return redirect()\n            ->route('records.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\app\\Http\\Controllers\\RecordController.php"
                    },
                    "\\tests\\Feature\\Controllers\\RecordControllerTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Record;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RecordControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_records(): void\n    {\n        $records = Record::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('records.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.records.index')\n            ->assertViewHas('records');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_record(): void\n    {\n        $response = $this->get(route('records.create'));\n\n        $response->assertOk()->assertViewIs('app.records.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_record(): void\n    {\n        $data = Record::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('records.store'), $data);\n\n        unset($data['created_by']);\n        unset($data['updated_by']);\n\n        $this->assertDatabaseHas('records', $data);\n\n        $record = Record::latest('id')->first();\n\n        $response->assertRedirect(route('records.edit', $record));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_record(): void\n    {\n        $record = Record::factory()->create();\n\n        $response = $this->get(route('records.show', $record));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.records.show')\n            ->assertViewHas('record');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_record(): void\n    {\n        $record = Record::factory()->create();\n\n        $response = $this->get(route('records.edit', $record));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.records.edit')\n            ->assertViewHas('record');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_record(): void\n    {\n        $record = Record::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'created_by' => $this->faker->uuid(),\n            'updated_by' => $this->faker->uuid(),\n            'user_id' => $this->faker->uuid(),\n            'string' => $this->faker->city(),\n            'email' => $this->faker->email(),\n            'integer' => $this->faker->randomNumber(0),\n            'decimal' => $this->faker->randomNumber(1),\n            'n_p_w_p' => $this->faker->randomNumber(),\n            'datetime' => $this->faker->dateTime(),\n            'date' => $this->faker->date(),\n            'time' => $this->faker->time(),\n            'i_p_address' => $this->faker->ipv4(),\n            'bool' => $this->faker->boolean(),\n            'enum' => 'enabled',\n            'text' => $this->faker->text(),\n            'file' => $this->faker->text(),\n            'image' => $this->faker->text(),\n            'markdown_text' => $this->faker->text(),\n            'w_y_s_i_w_y_g' => $this->faker->text(),\n            'latitude' => $this->faker->latitude(),\n            'longitude' => $this->faker->longitude(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->put(route('records.update', $record), $data);\n\n        unset($data['created_by']);\n        unset($data['updated_by']);\n\n        $data['id'] = $record->id;\n\n        $this->assertDatabaseHas('records', $data);\n\n        $response->assertRedirect(route('records.edit', $record));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_record(): void\n    {\n        $record = Record::factory()->create();\n\n        $response = $this->delete(route('records.destroy', $record));\n\n        $response->assertRedirect(route('records.index'));\n\n        $this->assertModelMissing($record);\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\tests\\Feature\\Controllers\\RecordControllerTest.php"
                    },
                    "\\resources\\views\\app\\records\\create.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.records.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('records.store') }}\"\n                has-files\n            >\n                @include('app.records.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a href=\"{{ route('records.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            >\n                            </i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:188",
                        "path": "\\resources\\views\\app\\records\\create.blade.php"
                    },
                    "\\resources\\views\\app\\records\\edit.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.records.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('records.update', $record) }}\"\n                has-files\n            >\n                @include('app.records.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a href=\"{{ route('records.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('records.show', $record) }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\n                            </i>\n                            @lang('crud.common.cancel')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n\n            @can('view-any', App\\Models\\Subrecord::class)\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    @lang('crud.record_subrecords.name')\n                </x-slot>\n\n                <livewire:record-subrecords-detail :record=\"$record\" />\n            </x-partials.card>\n            @endcan\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:188",
                        "path": "\\resources\\views\\app\\records\\edit.blade.php"
                    },
                    "\\resources\\views\\app\\records\\form-inputs.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@php $editing = isset($record) @endphp\n\n<style>\n    .ts-control {\n        border: none;\n        padding: 0;\n    }\n\n    .ts-dropdown,\n    .ts-control,\n    .ts-control input {\n        color: rgb(31 41 55 / var(--tw-text-opacity));\n        font-family: inherit;\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n</style>\n\n<x-partials.card>\n    {{--\n    <x-slot name=\"title\">\n        <span>@lang('card.title')</span>\n    </x-slot>\n    --}}\n\n    <div class=\"flex flex-wrap\">\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.tomselect\n                name=\"user_id\"\n                label=\"{{ __('crud.records.inputs.user_id') }}\"\n            >\n                @php $selected = old('user_id', ($editing ? $record->user_id : '')) @endphp\n                <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n                @foreach($users as $value => $label)\n                <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n                @endforeach\n            </x-inputs.tomselect>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"string\"\n                label=\"{{ __('crud.records.inputs.string') }}\"\n                :value=\"old('string', ($editing ? $record->string : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.records.inputs.string') }}\"\n                required\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.email\n                name=\"email\"\n                label=\"{{ __('crud.records.inputs.email') }}\"\n                :value=\"old('email', ($editing ? $record->email : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.records.inputs.email') }}\"\n            ></x-inputs.email>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.number\n                name=\"integer\"\n                label=\"{{ __('crud.records.inputs.integer') }}\"\n                :value=\"old('integer', ($editing ? $record->integer : ''))\"\n                placeholder=\"{{ __('crud.records.inputs.integer') }}\"\n            ></x-inputs.number>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.number\n                name=\"decimal\"\n                label=\"{{ __('crud.records.inputs.decimal') }}\"\n                :value=\"old('decimal', ($editing ? $record->decimal : ''))\"\n                max=\"255\"\n                step=\"0.01\"\n                placeholder=\"{{ __('crud.records.inputs.decimal') }}\"\n            ></x-inputs.number>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"n_p_w_p\"\n                label=\"{{ __('crud.records.inputs.n_p_w_p') }}\"\n                :value=\"old('n_p_w_p', ($editing ? $record->n_p_w_p : ''))\"\n                placeholder=\"{{ __('crud.records.inputs.n_p_w_p') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.datetime\n                name=\"datetime\"\n                label=\"Datetime\"\n                value=\"{{ old('datetime', ($editing ? optional($record->datetime)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            ></x-inputs.datetime>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.date\n                name=\"date\"\n                label=\"{{ __('crud.records.inputs.date') }}\"\n                value=\"{{ old('date', ($editing ? optional($record->date)->format('Y-m-d') : '')) }}\"\n            ></x-inputs.date>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"time\"\n                label=\"{{ __('crud.records.inputs.time') }}\"\n                :value=\"old('time', ($editing ? $record->time : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.records.inputs.time') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"i_p_address\"\n                label=\"{{ __('crud.records.inputs.i_p_address') }}\"\n                :value=\"old('i_p_address', ($editing ? $record->i_p_address : ''))\"\n                placeholder=\"{{ __('crud.records.inputs.i_p_address') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.checkbox\n                name=\"bool\"\n                label=\"{{ __('crud.records.inputs.bool') }}\"\n                :checked=\"old('bool', ($editing ? $record->bool : 0))\"\n            ></x-inputs.checkbox>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.select\n                name=\"enum\"\n                label=\"{{ __('crud.records.inputs.enum') }}\"\n            >\n                @php $selected = old('enum', ($editing ? $record->enum : '')) @endphp\n                <option value=\"enabled\" {{ $selected == 'enabled' ? 'selected' : '' }} >Enabled</option>\n                <option value=\"disabled\" {{ $selected == 'disabled' ? 'selected' : '' }} >Disabled</option>\n            </x-inputs.select>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"text\"\n                label=\"{{ __('crud.records.inputs.text') }}\"\n            >\n                {{ old('text', ($editing ? $record->text : '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.partials.label\n                name=\"file\"\n                label=\"{{ __('crud.records.inputs.file') }}\"\n            ></x-inputs.partials.label>\n            <br />\n\n            <input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n            />\n\n            @if($editing && $record->file)\n            <div class=\"mt-2\">\n                <a href=\"{{ \\Storage::url($record->file) }}\" target=\"_blank\">\n                    <i class=\"icon ion-md-download\"></i>\n                    Download\n                </a>\n            </div>\n            @endif @error('file') @include('components.inputs.partials.error')\n            @enderror\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <div\n                x-data=\"imageViewer('{{ $editing && $record->image ? \\Storage::url($record->image) : '' }}')\"\n            >\n                <x-inputs.partials.label\n                    name=\"image\"\n                    label=\"{{ __('crud.records.inputs.image') }}\"\n                ></x-inputs.partials.label>\n                <br />\n\n                <!-- Show the image -->\n                <template x-if=\"imageUrl\">\n                    <img\n                        :src=\"imageUrl\"\n                        class=\"object-cover rounded border border-gray-200\"\n                        style=\"width: 100px; height: 100px;\"\n                    />\n                </template>\n\n                <!-- Show the gray box when image is not available -->\n                <template x-if=\"!imageUrl\">\n                    <div\n                        class=\"border rounded border-gray-200 bg-gray-100\"\n                        style=\"width: 100px; height: 100px;\"\n                    ></div>\n                </template>\n\n                <div class=\"mt-2\">\n                    <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"image\"\n                        @change=\"fileChosen\"\n                    />\n                </div>\n\n                @error('image') @include('components.inputs.partials.error')\n                @enderror\n            </div>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"markdown_text\"\n                label=\"{{ __('crud.records.inputs.markdown_text') }}\"\n            >\n                {{ old('markdown_text', ($editing ? $record->markdown_text :\n                '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"w_y_s_i_w_y_g\"\n                label=\"{{ __('crud.records.inputs.w_y_s_i_w_y_g') }}\"\n                maxlength=\"255\"\n            >\n                {{ old('w_y_s_i_w_y_g', ($editing ? $record->w_y_s_i_w_y_g :\n                '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"latitude\"\n                label=\"{{ __('crud.records.inputs.latitude') }}\"\n                :value=\"old('latitude', ($editing ? $record->latitude : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.records.inputs.latitude') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"longitude\"\n                label=\"{{ __('crud.records.inputs.longitude') }}\"\n                :value=\"old('longitude', ($editing ? $record->longitude : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.records.inputs.longitude') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n    </div>\n</x-partials.card>\n",
                        "module": "crud:188",
                        "path": "\\resources\\views\\app\\records\\form-inputs.blade.php"
                    },
                    "\\resources\\views\\app\\records\\show.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.records.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                {{--\n                <x-slot name=\"title\">\n                    <span>@lang('card.title')</span>\n                </x-slot>\n                --}}\n\n                <div class=\"flex flex-wrap mt-2 px-4\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.user_id')\n                        </h5>\n                        <span>\n                            {{ optional($record->user)->name ?? '-' }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.string')\n                        </h5>\n                        <span> {{ $record->string ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.email')\n                        </h5>\n                        <span> {{ $record->email ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.integer')\n                        </h5>\n                        <span> {{ $record->integer ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.decimal')\n                        </h5>\n                        <span> {{ $record->decimal ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.n_p_w_p')\n                        </h5>\n                        <span> {{ $record->n_p_w_p ?? '-' }} </span>\n                    </div>\n                    /* Datetime */\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.datetime')\n                        </h5>\n                        <span>\n                            {{ optional($record->datetime)->format('l, d F Y,\n                            H:i') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.date')\n                        </h5>\n                        <span>\n                            {{ optional($record->date)->format('l, d F Y') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.time')\n                        </h5>\n                        <span>\n                            {{ optional($record->time)->format('H:i') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.i_p_address')\n                        </h5>\n                        <span> {{ $record->i_p_address ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.bool')\n                        </h5>\n                        <span> {{ $record->bool ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.enum')\n                        </h5>\n                        <span> {{ $record->enum ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.text')\n                        </h5>\n                        <span> {{ $record->text ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.file')\n                        </h5>\n                        @if($record->file)\n                        <a\n                            href=\"{{ \\Storage::url($record->file) }}\"\n                            target=\"blank\"\n                        >\n                            <i class=\"mr-1 icon ion-md-download\"></i>\n                            Download\n                        </a>\n                        @else - @endif\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $record->image ? \\Storage::url($record->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.markdown_text')\n                        </h5>\n                        <span> {{ $record->markdown_text ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.w_y_s_i_w_y_g')\n                        </h5>\n                        <span> {{ $record->w_y_s_i_w_y_g ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.latitude')\n                        </h5>\n                        <span> {{ $record->latitude ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.records.inputs.longitude')\n                        </h5>\n                        <span> {{ $record->longitude ?? '-' }} </span>\n                    </div>\n                </div>\n            </x-partials.card>\n\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    <span>@lang('text.actions')</span>\n                </x-slot>\n                <div class=\"mt-4 px-4\">\n                    <a href=\"{{ route('records.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('update', $record)\n                    <a\n                        href=\"{{ route('records.edit', $record) }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-create\"></i>\n                        @lang('crud.common.edit')\n                    </a>\n                    @endcan @can('delete', $record)\n                    <div class=\"float-right\">\n                        <form\n                            action=\"{{ route('records.destroy', $record) }}\"\n                            method=\"POST\"\n                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                        >\n                            @csrf @method('DELETE')\n                            <button type=\"submit\" class=\"button\">\n                                <i class=\"mr-1 icon ion-md-trash text-red-600\">\n                                </i>\n                                <span class=\"text-red-600\">\n                                    @lang('crud.common.delete')\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                    @endcan\n                </div>\n            </x-partials.card>\n\n            @can('view-any', App\\Models\\Subrecord::class)\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    @lang('crud.record_subrecords.name')\n                </x-slot>\n\n                <livewire:record-subrecords-detail :record=\"$record\" />\n            </x-partials.card>\n            @endcan\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:188",
                        "path": "\\resources\\views\\app\\records\\show.blade.php"
                    },
                    "\\resources\\views\\app\\records\\index.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.records.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Record::class)\n                            <a\n                                href=\"{{ route('records.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.records.inputs.user_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.records.inputs.string')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.records.inputs.integer')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.records.inputs.n_p_w_p')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.records.inputs.datetime')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($records as $record)\n                            <tr class=\"hover:bg-gray-50\">\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($record->user)->name ?? '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $record->string ?? '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $record->integer ?? '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $record->n_p_w_p ?? '-' }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($record->datetime)->format('D, d\n                                    M Y, H:i') }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $record)\n                                        <a\n                                            href=\"{{ route('records.edit', $record) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $record)\n                                        <a\n                                            href=\"{{ route('records.show', $record) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"6\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"6\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $records->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:188",
                        "path": "\\resources\\views\\app\\records\\index.blade.php"
                    },
                    "\\app\\Http\\Requests\\UserUploadStoreRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUploadStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'uuid', 'exists:users,id'],\n            'at' => ['required', 'date'],\n            'file' => ['file', 'max:1024', 'required'],\n            'name' => ['nullable', 'max:255', 'string'],\n            'description' => ['nullable', 'string'],\n            'type' => ['nullable', 'max:255', 'string'],\n            'metadata' => ['nullable', 'json'],\n        ];\n    }\n}\n",
                        "module": "crud:190",
                        "path": "\\app\\Http\\Requests\\UserUploadStoreRequest.php"
                    },
                    "\\app\\Http\\Requests\\UserUploadUpdateRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUploadUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'uuid', 'exists:users,id'],\n            'at' => ['required', 'date'],\n            'file' => ['file', 'max:1024', 'required'],\n            'name' => ['nullable', 'max:255', 'string'],\n            'description' => ['nullable', 'string'],\n            'type' => ['nullable', 'max:255', 'string'],\n            'metadata' => ['nullable', 'json'],\n        ];\n    }\n}\n",
                        "module": "crud:190",
                        "path": "\\app\\Http\\Requests\\UserUploadUpdateRequest.php"
                    },
                    "\\app\\Http\\Controllers\\UserUploadController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse App\\Models\\UserUpload;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\UserUploadStoreRequest;\nuse App\\Http\\Requests\\UserUploadUpdateRequest;\n\nclass UserUploadController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', UserUpload::class);\n\n        $search = (string) $request->get('search', '');\n\n        $userUploads = UserUpload::search($search)\n            ->latest('id')\n            ->paginate(10)\n            ->withQueryString();\n\n        return view('app.user_uploads.index', compact('userUploads', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', UserUpload::class);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.user_uploads.create', compact('users'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserUploadStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', UserUpload::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userUpload = UserUpload::create($validated);\n\n        return redirect()\n            ->route('user-uploads.show', $userUpload)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, UserUpload $userUpload): View\n    {\n        $this->authorize('view', $userUpload);\n\n        return view('app.user_uploads.show', compact('userUpload'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, UserUpload $userUpload): View\n    {\n        $this->authorize('update', $userUpload);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.user_uploads.edit', compact('userUpload', 'users'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserUploadUpdateRequest $request,\n        UserUpload $userUpload\n    ): RedirectResponse {\n        $this->authorize('update', $userUpload);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            if ($userUpload->file) {\n                Storage::delete($userUpload->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userUpload->update($validated);\n\n        return redirect()\n            ->route('user-uploads.show', $userUpload)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        UserUpload $userUpload\n    ): RedirectResponse {\n        $this->authorize('delete', $userUpload);\n\n        if ($userUpload->file) {\n            Storage::delete($userUpload->file);\n        }\n\n        $userUpload->delete();\n\n        return redirect()\n            ->route('user-uploads.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n",
                        "module": "crud:190",
                        "path": "\\app\\Http\\Controllers\\UserUploadController.php"
                    },
                    "\\tests\\Feature\\Controllers\\UserUploadControllerTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\UserUpload;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserUploadControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_user_uploads(): void\n    {\n        $userUploads = UserUpload::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('user-uploads.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_uploads.index')\n            ->assertViewHas('userUploads');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user_upload(): void\n    {\n        $response = $this->get(route('user-uploads.create'));\n\n        $response->assertOk()->assertViewIs('app.user_uploads.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_upload(): void\n    {\n        $data = UserUpload::factory()\n            ->make()\n            ->toArray();\n\n        $data['metadata'] = json_encode($data['metadata']);\n\n        $response = $this->post(route('user-uploads.store'), $data);\n\n        $data['metadata'] = $this->castToJson($data['metadata']);\n\n        $this->assertDatabaseHas('user_uploads', $data);\n\n        $userUpload = UserUpload::latest('id')->first();\n\n        $response->assertRedirect(route('user-uploads.edit', $userUpload));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user_upload(): void\n    {\n        $userUpload = UserUpload::factory()->create();\n\n        $response = $this->get(route('user-uploads.show', $userUpload));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_uploads.show')\n            ->assertViewHas('userUpload');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user_upload(): void\n    {\n        $userUpload = UserUpload::factory()->create();\n\n        $response = $this->get(route('user-uploads.edit', $userUpload));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_uploads.edit')\n            ->assertViewHas('userUpload');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user_upload(): void\n    {\n        $userUpload = UserUpload::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'user_id' => $this->faker->uuid(),\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'file' => $this->faker->text(),\n            'name' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'type' => $this->faker->word(),\n            'metadata' => [],\n            'user_id' => $user->id,\n        ];\n\n        $data['metadata'] = json_encode($data['metadata']);\n\n        $response = $this->put(\n            route('user-uploads.update', $userUpload),\n            $data\n        );\n\n        $data['id'] = $userUpload->id;\n\n        $data['metadata'] = $this->castToJson($data['metadata']);\n\n        $this->assertDatabaseHas('user_uploads', $data);\n\n        $response->assertRedirect(route('user-uploads.edit', $userUpload));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user_upload(): void\n    {\n        $userUpload = UserUpload::factory()->create();\n\n        $response = $this->delete(route('user-uploads.destroy', $userUpload));\n\n        $response->assertRedirect(route('user-uploads.index'));\n\n        $this->assertModelMissing($userUpload);\n    }\n}\n",
                        "module": "crud:190",
                        "path": "\\tests\\Feature\\Controllers\\UserUploadControllerTest.php"
                    },
                    "\\resources\\views\\app\\user_uploads\\create.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_uploads.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('user-uploads.store') }}\"\n                has-files\n            >\n                @include('app.user_uploads.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('user-uploads.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            >\n                            </i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:190",
                        "path": "\\resources\\views\\app\\user_uploads\\create.blade.php"
                    },
                    "\\resources\\views\\app\\user_uploads\\edit.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_uploads.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('user-uploads.update', $userUpload) }}\"\n                has-files\n            >\n                @include('app.user_uploads.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('user-uploads.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('user-uploads.show', $userUpload) }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\n                            </i>\n                            @lang('crud.common.cancel')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:190",
                        "path": "\\resources\\views\\app\\user_uploads\\edit.blade.php"
                    },
                    "\\resources\\views\\app\\user_uploads\\form-inputs.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@php $editing = isset($userUpload) @endphp\n\n<style>\n    .ts-control {\n        border: none;\n        padding: 0;\n    }\n\n    .ts-dropdown,\n    .ts-control,\n    .ts-control input {\n        color: rgb(31 41 55 / var(--tw-text-opacity));\n        font-family: inherit;\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n</style>\n\n<x-partials.card>\n    {{--\n    <x-slot name=\"title\">\n        <span>@lang('card.title')</span>\n    </x-slot>\n    --}}\n\n    <div class=\"flex flex-wrap\">\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.tomselect\n                name=\"user_id\"\n                label=\"{{ __('crud.user_uploads.inputs.user_id') }}\"\n                required\n            >\n                @php $selected = old('user_id', ($editing ? $userUpload->user_id : '')) @endphp\n                <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n                @foreach($users as $value => $label)\n                <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n                @endforeach\n            </x-inputs.tomselect>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.date\n                name=\"at\"\n                label=\"{{ __('crud.user_uploads.inputs.at') }}\"\n                value=\"{{ old('at', ($editing ? optional($userUpload->at)->format('Y-m-d') : '')) }}\"\n                required\n            ></x-inputs.date>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.partials.label\n                name=\"file\"\n                label=\"{{ __('crud.user_uploads.inputs.file') }}\"\n            ></x-inputs.partials.label>\n            <br />\n\n            <input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n            />\n\n            @if($editing && $userUpload->file)\n            <div class=\"mt-2\">\n                <a\n                    href=\"{{ \\Storage::url($userUpload->file) }}\"\n                    target=\"_blank\"\n                >\n                    <i class=\"icon ion-md-download\"></i>\n                    Download\n                </a>\n            </div>\n            @endif @error('file') @include('components.inputs.partials.error')\n            @enderror\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"name\"\n                label=\"{{ __('crud.user_uploads.inputs.name') }}\"\n                :value=\"old('name', ($editing ? $userUpload->name : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.user_uploads.inputs.name') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"description\"\n                label=\"{{ __('crud.user_uploads.inputs.description') }}\"\n            >\n                {{ old('description', ($editing ? $userUpload->description :\n                '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"type\"\n                label=\"{{ __('crud.user_uploads.inputs.type') }}\"\n                :value=\"old('type', ($editing ? $userUpload->type : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.user_uploads.inputs.type') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"metadata\"\n                label=\"{{ __('crud.user_uploads.inputs.metadata') }}\"\n            >\n                {{ old('metadata', ($editing ?\n                json_encode($userUpload->metadata) : '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n    </div>\n</x-partials.card>\n",
                        "module": "crud:190",
                        "path": "\\resources\\views\\app\\user_uploads\\form-inputs.blade.php"
                    },
                    "\\resources\\views\\app\\user_uploads\\show.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_uploads.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                {{--\n                <x-slot name=\"title\">\n                    <span>@lang('card.title')</span>\n                </x-slot>\n                --}}\n\n                <div class=\"flex flex-wrap mt-2 px-4\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.user_id')\n                        </h5>\n                        <span>\n                            {{ optional($userUpload->user)->name ?? '-' }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.at')\n                        </h5>\n                        <span>\n                            {{ optional($userUpload->at)->format('l, d F Y') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.file')\n                        </h5>\n                        @if($userUpload->file)\n                        <a\n                            href=\"{{ \\Storage::url($userUpload->file) }}\"\n                            target=\"blank\"\n                        >\n                            <i class=\"mr-1 icon ion-md-download\"></i>\n                            Download\n                        </a>\n                        @else - @endif\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.name')\n                        </h5>\n                        <span> {{ $userUpload->name ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.description')\n                        </h5>\n                        <span> {{ $userUpload->description ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.type')\n                        </h5>\n                        <span> {{ $userUpload->type ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_uploads.inputs.metadata')\n                        </h5>\n                        <pre>\n                                        {{ json_encode($userUpload->metadata) ?? '-' }}\n                                    </pre\n                        >\n                    </div>\n                </div>\n            </x-partials.card>\n\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    <span>@lang('text.actions')</span>\n                </x-slot>\n                <div class=\"mt-4 px-4\">\n                    <a href=\"{{ route('user-uploads.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('update', $userUpload)\n                    <a\n                        href=\"{{ route('user-uploads.edit', $userUpload) }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-create\"></i>\n                        @lang('crud.common.edit')\n                    </a>\n                    @endcan @can('delete', $userUpload)\n                    <div class=\"float-right\">\n                        <form\n                            action=\"{{ route('user-uploads.destroy', $userUpload) }}\"\n                            method=\"POST\"\n                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                        >\n                            @csrf @method('DELETE')\n                            <button type=\"submit\" class=\"button\">\n                                <i class=\"mr-1 icon ion-md-trash text-red-600\">\n                                </i>\n                                <span class=\"text-red-600\">\n                                    @lang('crud.common.delete')\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:190",
                        "path": "\\resources\\views\\app\\user_uploads\\show.blade.php"
                    },
                    "\\resources\\views\\app\\user_uploads\\index.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.user_uploads.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\UserUpload::class)\n                            <a\n                                href=\"{{ route('user-uploads.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_uploads.inputs.user_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_uploads.inputs.at')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_uploads.inputs.file')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($userUploads as $userUpload)\n                            <tr class=\"hover:bg-gray-50\">\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($userUpload->user)->name ?? '-'\n                                    }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($userUpload->at)->format('D, d M\n                                    Y') }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    @if($userUpload->file)\n                                    <a\n                                        href=\"{{ \\Storage::url($userUpload->file) }}\"\n                                        target=\"blank\"\n                                        ><i\n                                            class=\"mr-1 icon ion-md-download\"\n                                        ></i\n                                        >&nbsp;Download</a\n                                    >\n                                    @else - @endif\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $userUpload)\n                                        <a\n                                            href=\"{{ route('user-uploads.edit', $userUpload) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $userUpload)\n                                        <a\n                                            href=\"{{ route('user-uploads.show', $userUpload) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $userUploads->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:190",
                        "path": "\\resources\\views\\app\\user_uploads\\index.blade.php"
                    },
                    "\\app\\Http\\Requests\\UserGalleryStoreRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserGalleryStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'uuid', 'exists:users,id'],\n            'at' => ['required', 'date'],\n            'file' => ['image', 'max:1024', 'required'],\n            'name' => ['nullable', 'max:255', 'string'],\n            'description' => ['nullable', 'string'],\n            'type' => ['nullable', 'max:255', 'string'],\n            'metadata' => ['nullable', 'json'],\n            'thumbnail' => ['image', 'max:1024', 'nullable'],\n        ];\n    }\n}\n",
                        "module": "crud:191",
                        "path": "\\app\\Http\\Requests\\UserGalleryStoreRequest.php"
                    },
                    "\\app\\Http\\Requests\\UserGalleryUpdateRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserGalleryUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'uuid', 'exists:users,id'],\n            'at' => ['required', 'date'],\n            'file' => ['image', 'max:1024', 'required'],\n            'name' => ['nullable', 'max:255', 'string'],\n            'description' => ['nullable', 'string'],\n            'type' => ['nullable', 'max:255', 'string'],\n            'metadata' => ['nullable', 'json'],\n            'thumbnail' => ['image', 'max:1024', 'nullable'],\n        ];\n    }\n}\n",
                        "module": "crud:191",
                        "path": "\\app\\Http\\Requests\\UserGalleryUpdateRequest.php"
                    },
                    "\\app\\Http\\Controllers\\UserGalleryController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse App\\Models\\UserGallery;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\UserGalleryStoreRequest;\nuse App\\Http\\Requests\\UserGalleryUpdateRequest;\n\nclass UserGalleryController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', UserGallery::class);\n\n        $search = (string) $request->get('search', '');\n\n        $userGalleries = UserGallery::search($search)\n            ->latest('id')\n            ->paginate(10)\n            ->withQueryString();\n\n        return view(\n            'app.user_galleries.index',\n            compact('userGalleries', 'search')\n        );\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', UserGallery::class);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.user_galleries.create', compact('users'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserGalleryStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', UserGallery::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userGallery = UserGallery::create($validated);\n\n        return redirect()\n            ->route('user-galleries.show', $userGallery)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, UserGallery $userGallery): View\n    {\n        $this->authorize('view', $userGallery);\n\n        return view('app.user_galleries.show', compact('userGallery'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, UserGallery $userGallery): View\n    {\n        $this->authorize('update', $userGallery);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.user_galleries.edit', compact('userGallery', 'users'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserGalleryUpdateRequest $request,\n        UserGallery $userGallery\n    ): RedirectResponse {\n        $this->authorize('update', $userGallery);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            if ($userGallery->file) {\n                Storage::delete($userGallery->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($userGallery->thumbnail) {\n                Storage::delete($userGallery->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userGallery->update($validated);\n\n        return redirect()\n            ->route('user-galleries.show', $userGallery)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        UserGallery $userGallery\n    ): RedirectResponse {\n        $this->authorize('delete', $userGallery);\n\n        if ($userGallery->file) {\n            Storage::delete($userGallery->file);\n        }\n\n        if ($userGallery->thumbnail) {\n            Storage::delete($userGallery->thumbnail);\n        }\n\n        $userGallery->delete();\n\n        return redirect()\n            ->route('user-galleries.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n",
                        "module": "crud:191",
                        "path": "\\app\\Http\\Controllers\\UserGalleryController.php"
                    },
                    "\\tests\\Feature\\Controllers\\UserGalleryControllerTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\UserGallery;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserGalleryControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_user_galleries(): void\n    {\n        $userGalleries = UserGallery::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('user-galleries.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_galleries.index')\n            ->assertViewHas('userGalleries');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user_gallery(): void\n    {\n        $response = $this->get(route('user-galleries.create'));\n\n        $response->assertOk()->assertViewIs('app.user_galleries.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_gallery(): void\n    {\n        $data = UserGallery::factory()\n            ->make()\n            ->toArray();\n\n        $data['metadata'] = json_encode($data['metadata']);\n\n        $response = $this->post(route('user-galleries.store'), $data);\n\n        $data['metadata'] = $this->castToJson($data['metadata']);\n\n        $this->assertDatabaseHas('user_galleries', $data);\n\n        $userGallery = UserGallery::latest('id')->first();\n\n        $response->assertRedirect(route('user-galleries.edit', $userGallery));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user_gallery(): void\n    {\n        $userGallery = UserGallery::factory()->create();\n\n        $response = $this->get(route('user-galleries.show', $userGallery));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_galleries.show')\n            ->assertViewHas('userGallery');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user_gallery(): void\n    {\n        $userGallery = UserGallery::factory()->create();\n\n        $response = $this->get(route('user-galleries.edit', $userGallery));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.user_galleries.edit')\n            ->assertViewHas('userGallery');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user_gallery(): void\n    {\n        $userGallery = UserGallery::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'user_id' => $this->faker->uuid(),\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'file' => $this->faker->text(),\n            'name' => $this->faker->name(),\n            'description' => $this->faker->text(),\n            'type' => $this->faker->word(),\n            'metadata' => [],\n            'thumbnail' => $this->faker->text(),\n            'user_id' => $user->id,\n        ];\n\n        $data['metadata'] = json_encode($data['metadata']);\n\n        $response = $this->put(\n            route('user-galleries.update', $userGallery),\n            $data\n        );\n\n        $data['id'] = $userGallery->id;\n\n        $data['metadata'] = $this->castToJson($data['metadata']);\n\n        $this->assertDatabaseHas('user_galleries', $data);\n\n        $response->assertRedirect(route('user-galleries.edit', $userGallery));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user_gallery(): void\n    {\n        $userGallery = UserGallery::factory()->create();\n\n        $response = $this->delete(\n            route('user-galleries.destroy', $userGallery)\n        );\n\n        $response->assertRedirect(route('user-galleries.index'));\n\n        $this->assertModelMissing($userGallery);\n    }\n}\n",
                        "module": "crud:191",
                        "path": "\\tests\\Feature\\Controllers\\UserGalleryControllerTest.php"
                    },
                    "\\resources\\views\\app\\user_galleries\\create.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_galleries.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('user-galleries.store') }}\"\n                has-files\n            >\n                @include('app.user_galleries.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('user-galleries.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            >\n                            </i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:191",
                        "path": "\\resources\\views\\app\\user_galleries\\create.blade.php"
                    },
                    "\\resources\\views\\app\\user_galleries\\edit.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_galleries.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('user-galleries.update', $userGallery) }}\"\n                has-files\n            >\n                @include('app.user_galleries.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('user-galleries.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('user-galleries.show', $userGallery) }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\n                            </i>\n                            @lang('crud.common.cancel')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:191",
                        "path": "\\resources\\views\\app\\user_galleries\\edit.blade.php"
                    },
                    "\\resources\\views\\app\\user_galleries\\form-inputs.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@php $editing = isset($userGallery) @endphp\n\n<style>\n    .ts-control {\n        border: none;\n        padding: 0;\n    }\n\n    .ts-dropdown,\n    .ts-control,\n    .ts-control input {\n        color: rgb(31 41 55 / var(--tw-text-opacity));\n        font-family: inherit;\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n</style>\n\n<x-partials.card>\n    {{--\n    <x-slot name=\"title\">\n        <span>@lang('card.title')</span>\n    </x-slot>\n    --}}\n\n    <div class=\"flex flex-wrap\">\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.tomselect\n                name=\"user_id\"\n                label=\"{{ __('crud.user_galleries.inputs.user_id') }}\"\n                required\n            >\n                @php $selected = old('user_id', ($editing ? $userGallery->user_id : '')) @endphp\n                <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n                @foreach($users as $value => $label)\n                <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n                @endforeach\n            </x-inputs.tomselect>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.date\n                name=\"at\"\n                label=\"{{ __('crud.user_galleries.inputs.at') }}\"\n                value=\"{{ old('at', ($editing ? optional($userGallery->at)->format('Y-m-d') : '')) }}\"\n                max=\"255\"\n                required\n            ></x-inputs.date>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <div\n                x-data=\"imageViewer('{{ $editing && $userGallery->file ? \\Storage::url($userGallery->file) : '' }}')\"\n            >\n                <x-inputs.partials.label\n                    name=\"file\"\n                    label=\"{{ __('crud.user_galleries.inputs.file') }}\"\n                ></x-inputs.partials.label>\n                <br />\n\n                <!-- Show the image -->\n                <template x-if=\"imageUrl\">\n                    <img\n                        :src=\"imageUrl\"\n                        class=\"object-cover rounded border border-gray-200\"\n                        style=\"width: 100px; height: 100px;\"\n                    />\n                </template>\n\n                <!-- Show the gray box when image is not available -->\n                <template x-if=\"!imageUrl\">\n                    <div\n                        class=\"border rounded border-gray-200 bg-gray-100\"\n                        style=\"width: 100px; height: 100px;\"\n                    ></div>\n                </template>\n\n                <div class=\"mt-2\">\n                    <input\n                        type=\"file\"\n                        name=\"file\"\n                        id=\"file\"\n                        @change=\"fileChosen\"\n                    />\n                </div>\n\n                @error('file') @include('components.inputs.partials.error')\n                @enderror\n            </div>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"name\"\n                label=\"{{ __('crud.user_galleries.inputs.name') }}\"\n                :value=\"old('name', ($editing ? $userGallery->name : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.user_galleries.inputs.name') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"description\"\n                label=\"{{ __('crud.user_galleries.inputs.description') }}\"\n            >\n                {{ old('description', ($editing ? $userGallery->description :\n                '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"type\"\n                label=\"{{ __('crud.user_galleries.inputs.type') }}\"\n                :value=\"old('type', ($editing ? $userGallery->type : ''))\"\n                placeholder=\"{{ __('crud.user_galleries.inputs.type') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"metadata\"\n                label=\"{{ __('crud.user_galleries.inputs.metadata') }}\"\n            >\n                {{ old('metadata', ($editing ?\n                json_encode($userGallery->metadata) : '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n    </div>\n</x-partials.card>\n",
                        "module": "crud:191",
                        "path": "\\resources\\views\\app\\user_galleries\\form-inputs.blade.php"
                    },
                    "\\resources\\views\\app\\user_galleries\\show.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.user_galleries.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                {{--\n                <x-slot name=\"title\">\n                    <span>@lang('card.title')</span>\n                </x-slot>\n                --}}\n\n                <div class=\"flex flex-wrap mt-2 px-4\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.user_id')\n                        </h5>\n                        <span>\n                            {{ optional($userGallery->user)->name ?? '-' }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.at')\n                        </h5>\n                        <span>\n                            {{ optional($userGallery->at)->format('l, d F Y') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.file')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $userGallery->file ? \\Storage::url($userGallery->file) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.name')\n                        </h5>\n                        <span> {{ $userGallery->name ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.description')\n                        </h5>\n                        <span> {{ $userGallery->description ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.type')\n                        </h5>\n                        <span> {{ $userGallery->type ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.user_galleries.inputs.metadata')\n                        </h5>\n                        <pre>\n                                        {{ json_encode($userGallery->metadata) ?? '-' }}\n                                    </pre\n                        >\n                    </div>\n                </div>\n            </x-partials.card>\n\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    <span>@lang('text.actions')</span>\n                </x-slot>\n                <div class=\"mt-4 px-4\">\n                    <a\n                        href=\"{{ route('user-galleries.index') }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('update', $userGallery)\n                    <a\n                        href=\"{{ route('user-galleries.edit', $userGallery) }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-create\"></i>\n                        @lang('crud.common.edit')\n                    </a>\n                    @endcan @can('delete', $userGallery)\n                    <div class=\"float-right\">\n                        <form\n                            action=\"{{ route('user-galleries.destroy', $userGallery) }}\"\n                            method=\"POST\"\n                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                        >\n                            @csrf @method('DELETE')\n                            <button type=\"submit\" class=\"button\">\n                                <i class=\"mr-1 icon ion-md-trash text-red-600\">\n                                </i>\n                                <span class=\"text-red-600\">\n                                    @lang('crud.common.delete')\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:191",
                        "path": "\\resources\\views\\app\\user_galleries\\show.blade.php"
                    },
                    "\\resources\\views\\app\\user_galleries\\index.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.user_galleries.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\UserGallery::class)\n                            <a\n                                href=\"{{ route('user-galleries.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_galleries.inputs.user_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_galleries.inputs.at')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_galleries.inputs.file')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.user_galleries.inputs.thumbnail')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($userGalleries as $userGallery)\n                            <tr class=\"hover:bg-gray-50\">\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($userGallery->user)->name ?? '-'\n                                    }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($userGallery->at)->format('D, d\n                                    M Y') }}\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $userGallery->file ? \\Storage::url($userGallery->file) : '' }}\"\n                                    />\n                                </td>\n                                /** [object Object] */\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $userGallery->thumbnail ? \\Storage::url($userGallery->thumbnail) : '' }}\"\n                                    />\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $userGallery)\n                                        <a\n                                            href=\"{{ route('user-galleries.edit', $userGallery) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $userGallery)\n                                        <a\n                                            href=\"{{ route('user-galleries.show', $userGallery) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"5\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"5\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $userGalleries->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:191",
                        "path": "\\resources\\views\\app\\user_galleries\\index.blade.php"
                    },
                    "\\app\\Http\\Resources\\UserActivityLogResource.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserActivityLogResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:205",
                        "path": "\\app\\Http\\Resources\\UserActivityLogResource.php"
                    },
                    "\\app\\Http\\Resources\\UserActivityLogCollection.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserActivityLogCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:205",
                        "path": "\\app\\Http\\Resources\\UserActivityLogCollection.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\UserActivityLogController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Models\\UserActivityLog;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\UserActivityLogResource;\nuse App\\Http\\Resources\\UserActivityLogCollection;\nuse App\\Http\\Requests\\UserActivityLogStoreRequest;\nuse App\\Http\\Requests\\UserActivityLogUpdateRequest;\n\nclass UserActivityLogController extends Controller\n{\n    public function index(Request $request): UserActivityLogCollection\n    {\n        $this->authorize('view-any', UserActivityLog::class);\n\n        $search = (string) $request->get('search', '');\n\n        $userActivityLogs = UserActivityLog::search($search)\n            ->latest('id')\n            ->paginate();\n\n        return new UserActivityLogCollection($userActivityLogs);\n    }\n\n    public function store(\n        UserActivityLogStoreRequest $request\n    ): UserActivityLogResource {\n        $this->authorize('create', UserActivityLog::class);\n\n        $validated = $request->validated();\n\n        $userActivityLog = UserActivityLog::create($validated);\n\n        return new UserActivityLogResource($userActivityLog);\n    }\n\n    public function show(\n        Request $request,\n        UserActivityLog $userActivityLog\n    ): UserActivityLogResource {\n        $this->authorize('view', $userActivityLog);\n\n        return new UserActivityLogResource($userActivityLog);\n    }\n\n    public function update(\n        UserActivityLogUpdateRequest $request,\n        UserActivityLog $userActivityLog\n    ): UserActivityLogResource {\n        $this->authorize('update', $userActivityLog);\n\n        $validated = $request->validated();\n\n        $userActivityLog->update($validated);\n\n        return new UserActivityLogResource($userActivityLog);\n    }\n\n    public function destroy(\n        Request $request,\n        UserActivityLog $userActivityLog\n    ): Response {\n        $this->authorize('delete', $userActivityLog);\n\n        $userActivityLog->delete();\n\n        return response()->noContent();\n    }\n}\n",
                        "module": "crud:187",
                        "path": "\\app\\Http\\Controllers\\Api\\UserActivityLogController.php"
                    },
                    "\\tests\\Feature\\Api\\UserActivityLogTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\UserActivityLog;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserActivityLogTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_activity_logs_list(): void\n    {\n        $userActivityLogs = UserActivityLog::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.user-activity-logs.index'));\n\n        $response->assertOk()->assertSee($userActivityLogs[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_activity_log(): void\n    {\n        $data = UserActivityLog::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.user-activity-logs.store'),\n            $data\n        );\n\n        $this->assertDatabaseHas('user_activity_logs', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user_activity_log(): void\n    {\n        $userActivityLog = UserActivityLog::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'user_id' => $this->faker->uuid(),\n            'title' => $this->faker->sentence(10),\n            'link' => $this->faker->text(),\n            'message' => $this->faker->sentence(20),\n            'i_p_address' => $this->faker->ipv4(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.user-activity-logs.update', $userActivityLog),\n            $data\n        );\n\n        $data['id'] = $userActivityLog->id;\n\n        $this->assertDatabaseHas('user_activity_logs', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user_activity_log(): void\n    {\n        $userActivityLog = UserActivityLog::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.user-activity-logs.destroy', $userActivityLog)\n        );\n\n        $this->assertModelMissing($userActivityLog);\n\n        $response->assertNoContent();\n    }\n}\n",
                        "module": "crud:187",
                        "path": "\\tests\\Feature\\Api\\UserActivityLogTest.php"
                    },
                    "\\app\\Http\\Resources\\RecordResource.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass RecordResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:185",
                        "path": "\\app\\Http\\Resources\\RecordResource.php"
                    },
                    "\\app\\Http\\Resources\\RecordCollection.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass RecordCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:185",
                        "path": "\\app\\Http\\Resources\\RecordCollection.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\RecordController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Record;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\RecordResource;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\RecordCollection;\nuse App\\Http\\Requests\\RecordStoreRequest;\nuse App\\Http\\Requests\\RecordUpdateRequest;\n\nclass RecordController extends Controller\n{\n    public function index(Request $request): RecordCollection\n    {\n        $this->authorize('view-any', Record::class);\n\n        $search = (string) $request->get('search', '');\n\n        $records = Record::search($search)\n            ->latest()\n            ->paginate();\n\n        return new RecordCollection($records);\n    }\n\n    public function store(RecordStoreRequest $request): RecordResource\n    {\n        $this->authorize('create', Record::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $record = Record::create($validated);\n\n        return new RecordResource($record);\n    }\n\n    public function show(Request $request, Record $record): RecordResource\n    {\n        $this->authorize('view', $record);\n\n        return new RecordResource($record);\n    }\n\n    public function update(\n        RecordUpdateRequest $request,\n        Record $record\n    ): RecordResource {\n        $this->authorize('update', $record);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('file')) {\n            if ($record->file) {\n                Storage::delete($record->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            if ($record->image) {\n                Storage::delete($record->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $record->update($validated);\n\n        return new RecordResource($record);\n    }\n\n    public function destroy(Request $request, Record $record): Response\n    {\n        $this->authorize('delete', $record);\n\n        if ($record->file) {\n            Storage::delete($record->file);\n        }\n\n        if ($record->image) {\n            Storage::delete($record->image);\n        }\n\n        $record->delete();\n\n        return response()->noContent();\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\app\\Http\\Controllers\\Api\\RecordController.php"
                    },
                    "\\tests\\Feature\\Api\\RecordTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Record;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RecordTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_records_list(): void\n    {\n        $records = Record::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.records.index'));\n\n        $response->assertOk()->assertSee($records[0]->string);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_record(): void\n    {\n        $data = Record::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.records.store'), $data);\n\n        unset($data['created_by']);\n        unset($data['updated_by']);\n\n        $this->assertDatabaseHas('records', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_record(): void\n    {\n        $record = Record::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'created_by' => $this->faker->uuid(),\n            'updated_by' => $this->faker->uuid(),\n            'user_id' => $this->faker->uuid(),\n            'string' => $this->faker->city(),\n            'email' => $this->faker->email(),\n            'integer' => $this->faker->randomNumber(0),\n            'decimal' => $this->faker->randomNumber(1),\n            'n_p_w_p' => $this->faker->randomNumber(),\n            'datetime' => $this->faker->dateTime(),\n            'date' => $this->faker->date(),\n            'time' => $this->faker->time(),\n            'i_p_address' => $this->faker->ipv4(),\n            'bool' => $this->faker->boolean(),\n            'enum' => 'enabled',\n            'text' => $this->faker->text(),\n            'file' => $this->faker->text(),\n            'image' => $this->faker->text(),\n            'markdown_text' => $this->faker->text(),\n            'w_y_s_i_w_y_g' => $this->faker->text(),\n            'latitude' => $this->faker->latitude(),\n            'longitude' => $this->faker->longitude(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->putJson(route('api.records.update', $record), $data);\n\n        unset($data['created_by']);\n        unset($data['updated_by']);\n\n        $data['id'] = $record->id;\n\n        $this->assertDatabaseHas('records', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_record(): void\n    {\n        $record = Record::factory()->create();\n\n        $response = $this->deleteJson(route('api.records.destroy', $record));\n\n        $this->assertModelMissing($record);\n\n        $response->assertNoContent();\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\tests\\Feature\\Api\\RecordTest.php"
                    },
                    "\\app\\Http\\Resources\\SubrecordResource.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass SubrecordResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:204",
                        "path": "\\app\\Http\\Resources\\SubrecordResource.php"
                    },
                    "\\app\\Http\\Resources\\SubrecordCollection.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass SubrecordCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:204",
                        "path": "\\app\\Http\\Resources\\SubrecordCollection.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\RecordSubrecordsController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Record;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\SubrecordResource;\nuse App\\Http\\Resources\\SubrecordCollection;\n\nclass RecordSubrecordsController extends Controller\n{\n    public function index(Request $request, Record $record): SubrecordCollection\n    {\n        $this->authorize('view', $record);\n\n        $search = (string) $request->get('search', '');\n\n        $subrecords = $record\n            ->subrecords()\n            ->search($search)\n            ->latest()\n            ->paginate(10);\n\n        return new SubrecordCollection($subrecords);\n    }\n\n    public function store(Request $request, Record $record): SubrecordResource\n    {\n        $this->authorize('create', Subrecord::class);\n\n        $validated = $request->validate([\n            'datetime' => ['nullable', 'date'],\n            'date' => ['nullable', 'date'],\n            'time' => ['nullable', 'date_format:H:i:s'],\n            'n_p_w_p' => ['nullable'],\n            'markdown_text' => ['nullable', 'string'],\n            'w_y_s_i_w_y_g' => ['nullable', 'string'],\n            'file' => ['file', 'max:1024', 'nullable'],\n            'image' => ['image', 'max:1024', 'nullable'],\n            'i_p_address' => ['nullable'],\n            'latitude' => ['nullable', 'numeric'],\n            'longitude' => ['nullable', 'numeric'],\n        ]);\n\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $subrecord = $record->subrecords()->create($validated);\n\n        return new SubrecordResource($subrecord);\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\app\\Http\\Controllers\\Api\\RecordSubrecordsController.php"
                    },
                    "\\tests\\Feature\\Api\\RecordSubrecordsTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Record;\nuse App\\Models\\Subrecord;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RecordSubrecordsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_record_subrecords(): void\n    {\n        $record = Record::factory()->create();\n        $subrecords = Subrecord::factory()\n            ->count(2)\n            ->create([\n                'record_id' => $record->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.records.subrecords.index', $record)\n        );\n\n        $response->assertOk()->assertSee($subrecords[0]->date);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_record_subrecords(): void\n    {\n        $record = Record::factory()->create();\n        $data = Subrecord::factory()\n            ->make([\n                'record_id' => $record->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.records.subrecords.store', $record),\n            $data\n        );\n\n        $this->assertDatabaseHas('subrecords', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $subrecord = Subrecord::latest('id')->first();\n\n        $this->assertEquals($record->id, $subrecord->record_id);\n    }\n}\n",
                        "module": "crud:188",
                        "path": "\\tests\\Feature\\Api\\RecordSubrecordsTest.php"
                    },
                    "\\app\\Http\\Resources\\UserUploadResource.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserUploadResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:206",
                        "path": "\\app\\Http\\Resources\\UserUploadResource.php"
                    },
                    "\\app\\Http\\Resources\\UserUploadCollection.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserUploadCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:206",
                        "path": "\\app\\Http\\Resources\\UserUploadCollection.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\UserUploadController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\UserUpload;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\UserUploadResource;\nuse App\\Http\\Resources\\UserUploadCollection;\nuse App\\Http\\Requests\\UserUploadStoreRequest;\nuse App\\Http\\Requests\\UserUploadUpdateRequest;\n\nclass UserUploadController extends Controller\n{\n    public function index(Request $request): UserUploadCollection\n    {\n        $this->authorize('view-any', UserUpload::class);\n\n        $search = (string) $request->get('search', '');\n\n        $userUploads = UserUpload::search($search)\n            ->latest('id')\n            ->paginate();\n\n        return new UserUploadCollection($userUploads);\n    }\n\n    public function store(UserUploadStoreRequest $request): UserUploadResource\n    {\n        $this->authorize('create', UserUpload::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userUpload = UserUpload::create($validated);\n\n        return new UserUploadResource($userUpload);\n    }\n\n    public function show(\n        Request $request,\n        UserUpload $userUpload\n    ): UserUploadResource {\n        $this->authorize('view', $userUpload);\n\n        return new UserUploadResource($userUpload);\n    }\n\n    public function update(\n        UserUploadUpdateRequest $request,\n        UserUpload $userUpload\n    ): UserUploadResource {\n        $this->authorize('update', $userUpload);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('file')) {\n            if ($userUpload->file) {\n                Storage::delete($userUpload->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userUpload->update($validated);\n\n        return new UserUploadResource($userUpload);\n    }\n\n    public function destroy(Request $request, UserUpload $userUpload): Response\n    {\n        $this->authorize('delete', $userUpload);\n\n        if ($userUpload->file) {\n            Storage::delete($userUpload->file);\n        }\n\n        $userUpload->delete();\n\n        return response()->noContent();\n    }\n}\n",
                        "module": "crud:190",
                        "path": "\\app\\Http\\Controllers\\Api\\UserUploadController.php"
                    },
                    "\\tests\\Feature\\Api\\UserUploadTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\UserUpload;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserUploadTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_uploads_list(): void\n    {\n        $userUploads = UserUpload::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.user-uploads.index'));\n\n        $response->assertOk()->assertSee($userUploads[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_upload(): void\n    {\n        $data = UserUpload::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.user-uploads.store'), $data);\n\n        $this->assertDatabaseHas('user_uploads', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user_upload(): void\n    {\n        $userUpload = UserUpload::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'user_id' => $this->faker->uuid(),\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'file' => $this->faker->text(),\n            'name' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'type' => $this->faker->word(),\n            'metadata' => [],\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.user-uploads.update', $userUpload),\n            $data\n        );\n\n        $data['id'] = $userUpload->id;\n\n        $this->assertDatabaseHas('user_uploads', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user_upload(): void\n    {\n        $userUpload = UserUpload::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.user-uploads.destroy', $userUpload)\n        );\n\n        $this->assertModelMissing($userUpload);\n\n        $response->assertNoContent();\n    }\n}\n",
                        "module": "crud:190",
                        "path": "\\tests\\Feature\\Api\\UserUploadTest.php"
                    },
                    "\\app\\Http\\Resources\\UserGalleryResource.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserGalleryResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:207",
                        "path": "\\app\\Http\\Resources\\UserGalleryResource.php"
                    },
                    "\\app\\Http\\Resources\\UserGalleryCollection.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserGalleryCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n",
                        "module": "entity:207",
                        "path": "\\app\\Http\\Resources\\UserGalleryCollection.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\UserGalleryController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\UserGallery;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\UserGalleryResource;\nuse App\\Http\\Resources\\UserGalleryCollection;\nuse App\\Http\\Requests\\UserGalleryStoreRequest;\nuse App\\Http\\Requests\\UserGalleryUpdateRequest;\n\nclass UserGalleryController extends Controller\n{\n    public function index(Request $request): UserGalleryCollection\n    {\n        $this->authorize('view-any', UserGallery::class);\n\n        $search = (string) $request->get('search', '');\n\n        $userGalleries = UserGallery::search($search)\n            ->latest('id')\n            ->paginate();\n\n        return new UserGalleryCollection($userGalleries);\n    }\n\n    public function store(UserGalleryStoreRequest $request): UserGalleryResource\n    {\n        $this->authorize('create', UserGallery::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userGallery = UserGallery::create($validated);\n\n        return new UserGalleryResource($userGallery);\n    }\n\n    public function show(\n        Request $request,\n        UserGallery $userGallery\n    ): UserGalleryResource {\n        $this->authorize('view', $userGallery);\n\n        return new UserGalleryResource($userGallery);\n    }\n\n    public function update(\n        UserGalleryUpdateRequest $request,\n        UserGallery $userGallery\n    ): UserGalleryResource {\n        $this->authorize('update', $userGallery);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('file')) {\n            if ($userGallery->file) {\n                Storage::delete($userGallery->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($userGallery->thumbnail) {\n                Storage::delete($userGallery->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['metadata'] = json_decode($validated['metadata'], true);\n\n        $userGallery->update($validated);\n\n        return new UserGalleryResource($userGallery);\n    }\n\n    public function destroy(\n        Request $request,\n        UserGallery $userGallery\n    ): Response {\n        $this->authorize('delete', $userGallery);\n\n        if ($userGallery->file) {\n            Storage::delete($userGallery->file);\n        }\n\n        if ($userGallery->thumbnail) {\n            Storage::delete($userGallery->thumbnail);\n        }\n\n        $userGallery->delete();\n\n        return response()->noContent();\n    }\n}\n",
                        "module": "crud:191",
                        "path": "\\app\\Http\\Controllers\\Api\\UserGalleryController.php"
                    },
                    "\\tests\\Feature\\Api\\UserGalleryTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\UserGallery;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserGalleryTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_galleries_list(): void\n    {\n        $userGalleries = UserGallery::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.user-galleries.index'));\n\n        $response->assertOk()->assertSee($userGalleries[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_gallery(): void\n    {\n        $data = UserGallery::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.user-galleries.store'), $data);\n\n        $this->assertDatabaseHas('user_galleries', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user_gallery(): void\n    {\n        $userGallery = UserGallery::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'user_id' => $this->faker->uuid(),\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'file' => $this->faker->text(),\n            'name' => $this->faker->name(),\n            'description' => $this->faker->text(),\n            'type' => $this->faker->word(),\n            'metadata' => [],\n            'thumbnail' => $this->faker->text(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.user-galleries.update', $userGallery),\n            $data\n        );\n\n        $data['id'] = $userGallery->id;\n\n        $this->assertDatabaseHas('user_galleries', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user_gallery(): void\n    {\n        $userGallery = UserGallery::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.user-galleries.destroy', $userGallery)\n        );\n\n        $this->assertModelMissing($userGallery);\n\n        $response->assertNoContent();\n    }\n}\n",
                        "module": "crud:191",
                        "path": "\\tests\\Feature\\Api\\UserGalleryTest.php"
                    },
                    "\\lang\\en\\crud.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'new' => 'New',\n        'cancel' => 'Cancel',\n        'attach' => 'Attach',\n        'detach' => 'Detach',\n        'save' => 'Save',\n        'delete' => 'Delete',\n        'delete_selected' => 'Delete selected',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'new_title' => 'New User',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n        ],\n    ],\n\n    'user_activity_logs' => [\n        'name' => 'User Activity Logs',\n        'index_title' => 'User Activity Logs List',\n        'new_title' => 'New User Activity Log',\n        'create_title' => 'Create User Activity Log',\n        'edit_title' => 'Edit User Activity Log',\n        'show_title' => 'Show User Activity Log',\n        'inputs' => [\n            'at' => 'At',\n            'user_id' => 'User',\n            'title' => 'Title',\n            'link' => 'Link',\n            'message' => 'Message',\n            'i_p_address' => 'I P Address',\n        ],\n    ],\n\n    'records' => [\n        'name' => 'Records',\n        'index_title' => 'Records List',\n        'new_title' => 'New Record',\n        'create_title' => 'Create Record',\n        'edit_title' => 'Edit Record',\n        'show_title' => 'Show Record',\n        'inputs' => [\n            'user_id' => 'User',\n            'string' => 'String',\n            'email' => 'Email',\n            'integer' => 'Integer',\n            'decimal' => 'Decimal',\n            'n_p_w_p' => 'N P W P',\n            'datetime' => 'Datetime',\n            'date' => 'Date',\n            'time' => 'Time',\n            'i_p_address' => 'I P Address',\n            'bool' => 'Bool',\n            'enum' => 'Enum',\n            'text' => 'Text',\n            'file' => 'File',\n            'image' => 'Image',\n            'markdown_text' => 'Markdown Text',\n            'w_y_s_i_w_y_g' => 'W Y S I W Y G',\n            'latitude' => 'Latitude',\n            'longitude' => 'Longitude',\n        ],\n    ],\n\n    'user_uploads' => [\n        'name' => 'User Uploads',\n        'index_title' => 'UserUploads List',\n        'new_title' => 'New User Upload',\n        'create_title' => 'Create User Upload',\n        'edit_title' => 'Edit User Upload',\n        'show_title' => 'Show User Upload',\n        'inputs' => [\n            'user_id' => 'User',\n            'at' => 'At',\n            'file' => 'File',\n            'name' => 'Name',\n            'description' => 'Description',\n            'type' => 'Type',\n            'metadata' => 'Metadata',\n        ],\n    ],\n\n    'user_galleries' => [\n        'name' => 'User Galleries',\n        'index_title' => 'User Galleries List',\n        'new_title' => 'New User Gallery',\n        'create_title' => 'Create User Gallery',\n        'edit_title' => 'Edit User Gallery',\n        'show_title' => 'Show User Gallery',\n        'inputs' => [\n            'user_id' => 'User',\n            'at' => 'At',\n            'file' => 'File',\n            'name' => 'Name',\n            'description' => 'Description',\n            'type' => 'Type',\n            'metadata' => 'Metadata',\n            'thumbnail' => 'Thumbnail',\n        ],\n    ],\n\n    'subrecords' => [\n        'name' => 'Subrecords',\n        'index_title' => 'Subrecords List',\n        'new_title' => 'New Subrecord',\n        'create_title' => 'Create Subrecord',\n        'edit_title' => 'Edit Subrecord',\n        'show_title' => 'Show Subrecord',\n        'inputs' => [\n            'record_id' => 'Record',\n            'datetime' => 'Datetime',\n            'date' => 'Date',\n            'time' => 'Time',\n            'n_p_w_p' => 'N P W P',\n            'markdown_text' => 'Markdown Text',\n            'w_y_s_i_w_y_g' => 'W Y S I W Y G',\n            'file' => 'File',\n            'image' => 'Image',\n            'i_p_address' => 'I P Address',\n            'latitude' => 'Latitude',\n            'longitude' => 'Longitude',\n        ],\n    ],\n\n    'record_subrecords' => [\n        'name' => 'Record Subrecords',\n        'index_title' => 'Subrecords List',\n        'new_title' => 'New Subrecord',\n        'create_title' => 'Create Subrecord',\n        'edit_title' => 'Edit Subrecord',\n        'show_title' => 'Show Subrecord',\n        'inputs' => [\n            'datetime' => 'Datetime',\n            'date' => 'Date',\n            'time' => 'Time',\n            'n_p_w_p' => 'N P W P',\n            'markdown_text' => 'Markdown Text',\n            'w_y_s_i_w_y_g' => 'W Y S I W Y G',\n            'file' => 'File',\n            'image' => 'Image',\n            'i_p_address' => 'I P Address',\n            'latitude' => 'Latitude',\n            'longitude' => 'Longitude',\n        ],\n    ],\n];\n",
                        "module": "base",
                        "path": "\\lang\\en\\crud.php"
                    },
                    "\\resources\\views\\livewire\\record-subrecords-detail.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<div>\n    <div>\n        @can('create', App\\Models\\Subrecord::class)\n        <button class=\"button\" wire:click=\"newSubrecord\">\n            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n            @lang('crud.common.new')\n        </button>\n        @endcan @can('delete-any', App\\Models\\Subrecord::class)\n        <button\n            class=\"button button-danger\"\n             {{ empty($selected) ? 'disabled' : '' }} \n            onclick=\"confirm('{{ __('crud.common.are_you_sure') }}') || event.stopImmediatePropagation()\"\n            wire:click=\"destroySelected\"\n        >\n            <i class=\"mr-1 icon ion-md-trash text-primary\"></i>\n            @lang('crud.common.delete_selected')\n        </button>\n        @endcan\n    </div>\n\n    <x-modal wire:model=\"showingModalView\">\n        <div class=\"px-6 py-4\">\n            <div class=\"text-lg font-bold\">{{ $modalTitle }}</div>\n\n            <div class=\"mt-5\">\n                <div class=\"flex flex-wrap\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.datetime')\n                        </h5>\n                        <span>\n                            {{ optional($subrecord->datetime)->format('l, d F Y,\n                            H:i') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.date')\n                        </h5>\n                        <span>\n                            {{ optional($subrecord->date)->format('l, d F Y') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.time')\n                        </h5>\n                        <span>\n                            {{ optional($subrecord->time)->format('H:i') }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.n_p_w_p')\n                        </h5>\n                        <span> {{ $subrecord->n_p_w_p ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.markdown_text')\n                        </h5>\n                        <span> {{ $subrecord->markdown_text ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.w_y_s_i_w_y_g')\n                        </h5>\n                        <span> {{ $subrecord->w_y_s_i_w_y_g ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.file')\n                        </h5>\n                        @if($subrecord->file)\n                        <a\n                            href=\"{{ \\Storage::url($subrecord->file) }}\"\n                            target=\"blank\"\n                        >\n                            <i class=\"mr-1 icon ion-md-download\"></i>\n                            Download\n                        </a>\n                        @else - @endif\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $subrecord->image ? \\Storage::url($subrecord->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.i_p_address')\n                        </h5>\n                        <span> {{ $subrecord->i_p_address ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.latitude')\n                        </h5>\n                        <span> {{ $subrecord->latitude ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.longitude')\n                        </h5>\n                        <span> {{ $subrecord->longitude ?? '-' }} </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"px-6 py-4 bg-gray-50 flex justify-between\">\n            <button\n                type=\"button\"\n                class=\"button\"\n                wire:click=\"$toggle('showingModalView')\"\n            >\n                <i class=\"mr-1 icon ion-md-close\"></i>\n                @lang('text.close')\n            </button>\n            @can('update', $subrecord)\n            <button\n                type=\"button\"\n                class=\"button mr-1\"\n                wire:click=\"editSubrecord('{{ $subrecord->id }}')\"\n            >\n                <i class=\"mr-1 icon ion-md-create\"></i>\n                @lang('crud.common.edit')\n            </button>\n            @endcan\n        </div>\n    </x-modal>\n\n    <x-modal wire:model=\"showingModalForm\">\n        <div class=\"px-6 py-4\">\n            <div class=\"text-lg font-bold\">{{ $modalTitle }}</div>\n\n            <div class=\"mt-5\">\n                <div class=\"flex flex-wrap\">\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.datetime\n                            name=\"subrecord.datetime\"\n                            label=\"Datetime\"\n                            wire:model=\"subrecord.datetime\"\n                        ></x-inputs.datetime>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.date\n                            name=\"subrecordDate\"\n                            label=\"{{ __('crud.subrecords.inputs.date') }}\"\n                            wire:model=\"subrecordDate\"\n                        ></x-inputs.date>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.text\n                            name=\"subrecord.time\"\n                            label=\"{{ __('crud.subrecords.inputs.time') }}\"\n                            wire:model=\"subrecord.time\"\n                            maxlength=\"255\"\n                            placeholder=\"{{ __('crud.subrecords.inputs.time') }}\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.text\n                            name=\"subrecord.n_p_w_p\"\n                            label=\"{{ __('crud.subrecords.inputs.n_p_w_p') }}\"\n                            wire:model=\"subrecord.n_p_w_p\"\n                            maxlength=\"255\"\n                            placeholder=\"{{ __('crud.subrecords.inputs.n_p_w_p') }}\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.textarea\n                            name=\"subrecord.markdown_text\"\n                            label=\"{{ __('crud.subrecords.inputs.markdown_text') }}\"\n                            wire:model=\"subrecord.markdown_text\"\n                        ></x-inputs.textarea>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.textarea\n                            name=\"subrecord.w_y_s_i_w_y_g\"\n                            label=\"{{ __('crud.subrecords.inputs.w_y_s_i_w_y_g') }}\"\n                            wire:model=\"subrecord.w_y_s_i_w_y_g\"\n                            maxlength=\"255\"\n                        ></x-inputs.textarea>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.partials.label\n                            name=\"subrecordFile\"\n                            label=\"{{ __('crud.subrecords.inputs.file') }}\"\n                        ></x-inputs.partials.label>\n                        <br />\n\n                        <input\n                            type=\"file\"\n                            name=\"subrecordFile\"\n                            id=\"subrecordFile{{ $uploadIteration }}\"\n                            wire:model=\"subrecordFile\"\n                            class=\"form-control-file\"\n                        />\n\n                        @if($editing && $subrecord->file)\n                        <div class=\"mt-2\">\n                            <a\n                                href=\"{{ \\Storage::url($subrecord->file) }}\"\n                                target=\"_blank\"\n                            >\n                                <i class=\"icon ion-md-download\"></i>\n                                Download\n                            </a>\n                        </div>\n                        @endif @error('subrecordFile')\n                        @include('components.inputs.partials.error') @enderror\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <div\n                            image-url=\"{{ $editing && $subrecord->image ? \\Storage::url($subrecord->image) : '' }}\"\n                            x-data=\"imageViewer()\"\n                            @refresh.window=\"refreshUrl()\"\n                        >\n                            <x-inputs.partials.label\n                                name=\"subrecordImage\"\n                                label=\"{{ __('crud.subrecords.inputs.image') }}\"\n                            ></x-inputs.partials.label>\n                            <br />\n\n                            <!-- Show the image -->\n                            <template x-if=\"imageUrl\">\n                                <img\n                                    :src=\"imageUrl\"\n                                    class=\"\n                                        object-cover\n                                        rounded\n                                        border border-gray-200\n                                    \"\n                                    style=\"width: 100px; height: 100px;\"\n                                />\n                            </template>\n\n                            <!-- Show the gray box when image is not available -->\n                            <template x-if=\"!imageUrl\">\n                                <div\n                                    class=\"\n                                        border\n                                        rounded\n                                        border-gray-200\n                                        bg-gray-100\n                                    \"\n                                    style=\"width: 100px; height: 100px;\"\n                                ></div>\n                            </template>\n\n                            <div class=\"mt-2\">\n                                <input\n                                    type=\"file\"\n                                    name=\"subrecordImage\"\n                                    id=\"subrecordImage{{ $uploadIteration }}\"\n                                    wire:model=\"subrecordImage\"\n                                    @change=\"fileChosen\"\n                                />\n                            </div>\n\n                            @error('subrecordImage')\n                            @include('components.inputs.partials.error')\n                            @enderror\n                        </div>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.text\n                            name=\"subrecord.i_p_address\"\n                            label=\"{{ __('crud.subrecords.inputs.i_p_address') }}\"\n                            wire:model=\"subrecord.i_p_address\"\n                            maxlength=\"255\"\n                            placeholder=\"{{ __('crud.subrecords.inputs.i_p_address') }}\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.text\n                            name=\"subrecord.latitude\"\n                            label=\"{{ __('crud.subrecords.inputs.latitude') }}\"\n                            wire:model=\"subrecord.latitude\"\n                            maxlength=\"255\"\n                            placeholder=\"{{ __('crud.subrecords.inputs.latitude') }}\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n                    <x-inputs.group class=\"w-full\">\n                        <x-inputs.text\n                            name=\"subrecord.longitude\"\n                            label=\"{{ __('crud.subrecords.inputs.longitude') }}\"\n                            wire:model=\"subrecord.longitude\"\n                            maxlength=\"255\"\n                            placeholder=\"{{ __('crud.subrecords.inputs.longitude') }}\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"px-6 py-4 bg-gray-50 flex justify-between\">\n            <button\n                type=\"button\"\n                class=\"button\"\n                wire:click=\"$toggle('showingModalForm')\"\n            >\n                <i class=\"mr-1 icon ion-md-close\"></i>\n                @lang('crud.common.cancel')\n            </button>\n\n            <button\n                type=\"button\"\n                class=\"button button-primary\"\n                wire:click=\"save\"\n            >\n                <i class=\"mr-1 icon ion-md-save\"></i>\n                @lang('crud.common.save')\n            </button>\n        </div>\n    </x-modal>\n\n    <div class=\"block w-full overflow-auto scrolling-touch mt-4\">\n        <table class=\"w-full max-w-full mb-4 bg-transparent\">\n            <thead class=\"text-gray-700\">\n                <tr>\n                    <th class=\"px-4 py-3 text-left w-1\">\n                        <input\n                            type=\"checkbox\"\n                            wire:model=\"allSelected\"\n                            wire:click=\"toggleFullSelection\"\n                            title=\"{{ trans('crud.common.select_all') }}\"\n                        />\n                    </th>\n                    <th class=\"px-4 py-3 text-left\">\n                        @lang('crud.record_subrecords.inputs.datetime')\n                    </th>\n                    <th class=\"px-4 py-3 text-left\">\n                        @lang('crud.record_subrecords.inputs.n_p_w_p')\n                    </th>\n                    <th class=\"px-4 py-3 text-left\">\n                        @lang('crud.record_subrecords.inputs.i_p_address')\n                    </th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody class=\"text-gray-600\">\n                @foreach ($subrecords as $subrecord)\n                <tr class=\"hover:bg-gray-100\">\n                    <td class=\"px-4 py-3 text-left\">\n                        <input\n                            type=\"checkbox\"\n                            value=\"{{ $subrecord->id }}\"\n                            wire:model=\"selected\"\n                        />\n                    </td>\n                    <td class=\"px-4 py-3 text-left\">\n                        {{ optional($subrecord->datetime)->format('D, d M Y,\n                        H:i') }}\n                    </td>\n                    <td class=\"px-4 py-3 text-left\">\n                        {{ $subrecord->n_p_w_p ?? '-' }}\n                    </td>\n                    <td class=\"px-4 py-3 text-left\">\n                        {{ $subrecord->i_p_address ?? '-' }}\n                    </td>\n                    <td class=\"px-4 py-3 text-right\" style=\"width: 134px;\">\n                        <div\n                            role=\"group\"\n                            aria-label=\"Row Actions\"\n                            class=\"relative inline-flex align-middle\"\n                        >\n                            <button\n                                type=\"button\"\n                                class=\"button mr-1\"\n                                wire:click=\"viewSubrecord('{{ $subrecord->id }}')\"\n                            >\n                                <i class=\"icon ion-md-eye\"></i>\n                            </button>\n                            @can('update', $subrecord)\n                            <button\n                                type=\"button\"\n                                class=\"button mr-1\"\n                                wire:click=\"editSubrecord('{{ $subrecord->id }}')\"\n                            >\n                                <i class=\"icon ion-md-create\"></i>\n                            </button>\n                            @endcan\n                        </div>\n                    </td>\n                </tr>\n                @endforeach\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td colspan=\"4\">\n                        <div class=\"mt-10 px-4\">\n                            {{ $subrecords->render() }}\n                        </div>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n</div>\n",
                        "module": "crud:189",
                        "path": "\\resources\\views\\livewire\\record-subrecords-detail.blade.php"
                    },
                    "\\app\\Http\\Livewire\\RecordSubrecordsDetail.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Livewire;\n\nuse App\\Models\\Record;\nuse Livewire\\Component;\nuse Illuminate\\View\\View;\nuse App\\Models\\Subrecord;\nuse Livewire\\WithPagination;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Facades\\Storage;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass RecordSubrecordsDetail extends Component\n{\n    use WithPagination;\n    use WithFileUploads;\n    use AuthorizesRequests;\n\n    public Record $record;\n    public Subrecord $subrecord;\n    public $subrecordFile;\n    public $subrecordImage;\n    public $uploadIteration = 0;\n    public $subrecordDatetime;\n    public $subrecordDate;\n\n    public $selected = [];\n    public $editing = false;\n    public $allSelected = false;\n    public $showingModalView = false;\n    public $showingModalForm = false;\n\n    public $modalTitle = 'New Subrecord';\n\n    protected $rules = [\n        'subrecordDatetime' => ['nullable', 'date'],\n        'subrecordDate' => ['nullable', 'date'],\n        'subrecord.time' => ['nullable', 'date_format:H:i'],\n        'subrecord.n_p_w_p' => ['nullable'],\n        'subrecord.markdown_text' => ['nullable', 'string'],\n        'subrecord.w_y_s_i_w_y_g' => ['nullable', 'string'],\n        'subrecordFile' => ['file', 'max:1024', 'nullable'],\n        'subrecordImage' => ['image', 'max:1024', 'nullable'],\n        'subrecord.i_p_address' => ['nullable', 'max:255'],\n        'subrecord.latitude' => ['nullable', 'numeric'],\n        'subrecord.longitude' => ['nullable', 'numeric'],\n    ];\n\n    public function mount(Record $record): void\n    {\n        $this->record = $record;\n        $this->resetSubrecordData();\n    }\n\n    public function resetSubrecordData(): void\n    {\n        $this->subrecord = new Subrecord();\n\n        $this->subrecordFile = null;\n        $this->subrecordImage = null;\n        $this->subrecordDatetime = null;\n        $this->subrecordDate = null;\n\n        $this->dispatchBrowserEvent('refresh');\n    }\n\n    public function newSubrecord(): void\n    {\n        $this->editing = false;\n        $this->modalTitle = trans('crud.record_subrecords.new_title');\n        $this->resetSubrecordData();\n\n        $this->showModal();\n    }\n\n    public function viewSubrecord(Subrecord $subrecord): void\n    {\n        $this->editing = false;\n        $this->modalTitle = trans('crud.record_subrecords.show_title');\n        $this->subrecord = $subrecord;\n\n        $this->subrecordDatetime = optional($this->subrecord->datetime)->format(\n            'Y-m-d H:i:s'\n        );\n\n        $this->subrecordDate = optional($this->subrecord->date)->format(\n            'Y-m-d'\n        );\n\n        $this->dispatchBrowserEvent('refresh');\n\n        $this->showModalView();\n    }\n\n    public function editSubrecord(Subrecord $subrecord): void\n    {\n        $this->editing = true;\n        $this->modalTitle = trans('crud.record_subrecords.edit_title');\n        $this->subrecord = $subrecord;\n\n        $this->subrecordDatetime = optional($this->subrecord->datetime)->format(\n            'Y-m-d H:i:s'\n        );\n\n        $this->subrecordDate = optional($this->subrecord->date)->format(\n            'Y-m-d'\n        );\n\n        $this->dispatchBrowserEvent('refresh');\n\n        $this->showModalForm();\n    }\n\n    public function showModalView(): void\n    {\n        $this->resetErrorBag();\n        $this->showingModalView = true;\n        $this->showingModalForm = false;\n    }\n\n    public function showModalForm(): void\n    {\n        $this->resetErrorBag();\n        $this->showingModalView = false;\n        $this->showingModalForm = true;\n    }\n\n    public function hideModal(): void\n    {\n        $this->showingModalView = false;\n        $this->showingModalForm = false;\n    }\n\n    public function save(): void\n    {\n        $this->validate();\n\n        if (!$this->subrecord->record_id) {\n            $this->authorize('create', Subrecord::class);\n\n            $this->subrecord->record_id = $this->record->id;\n        } else {\n            $this->authorize('update', $this->subrecord);\n        }\n\n        if ($this->subrecordFile) {\n            $this->subrecord->file = $this->subrecordFile->store('public');\n        }\n\n        if ($this->subrecordImage) {\n            $this->subrecord->image = $this->subrecordImage->store('public');\n        }\n\n        $this->subrecord->datetime = \\Carbon\\Carbon::make(\n            $this->subrecordDatetime\n        );\n        $this->subrecord->date = \\Carbon\\Carbon::make($this->subrecordDate);\n\n        $this->subrecord->save();\n\n        $this->uploadIteration++;\n\n        $this->hideModal();\n    }\n\n    public function destroySelected(): void\n    {\n        $this->authorize('delete-any', Subrecord::class);\n\n        collect($this->selected)->each(function (string $id) {\n            $subrecord = Subrecord::findOrFail($id);\n\n            if ($subrecord->file) {\n                Storage::delete($subrecord->file);\n            }\n\n            if ($subrecord->image) {\n                Storage::delete($subrecord->image);\n            }\n\n            $subrecord->delete();\n        });\n\n        $this->selected = [];\n        $this->allSelected = false;\n\n        $this->resetSubrecordData();\n    }\n\n    public function toggleFullSelection(): void\n    {\n        if (!$this->allSelected) {\n            $this->selected = [];\n            return;\n        }\n\n        foreach ($this->record->subrecords as $subrecord) {\n            array_push($this->selected, $subrecord->id);\n        }\n    }\n\n    public function render(): View\n    {\n        return view('livewire.record-subrecords-detail', [\n            'subrecords' => $this->record->subrecords()->paginate(100),\n        ]);\n    }\n}\n",
                        "module": "crud:189",
                        "path": "\\app\\Http\\Livewire\\RecordSubrecordsDetail.php"
                    },
                    "\\routes\\api.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Support\\Facades\\Route;\r\n\r\n/*\r\n|--------------------------------------------------------------------------\r\n| API Routes\r\n|--------------------------------------------------------------------------\r\n|\r\n| Here is where you can register API routes for your application. These\r\n| routes are loaded by the RouteServiceProvider within a group which\r\n| is assigned the \"api\" middleware group. Enjoy building your API!\r\n|\r\n*/\r\n\r\nRoute::middleware('auth:api')->get('/user', function (Request $request) {\r\n    return $request->user();\r\n});\r\n",
                        "module": "base",
                        "path": "\\routes\\api.php"
                    },
                    "\\routes\\web.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\r\n\r\nuse Illuminate\\Support\\Facades\\Route;\r\n\r\n/*\r\n|--------------------------------------------------------------------------\r\n| Web Routes\r\n|--------------------------------------------------------------------------\r\n|\r\n| Here is where you can register web routes for your application. These\r\n| routes are loaded by the RouteServiceProvider within a group which\r\n| contains the \"web\" middleware group. Now create something great!\r\n|\r\n*/\r\n\r\nRoute::get('/', function () {\r\n    return view('welcome');\r\n});",
                        "module": "base",
                        "path": "\\routes\\web.php"
                    },
                    "\\resources\\views\\components\\form-button.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'method' => 'POST',\r\n    'action'\r\n])\r\n\r\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\r\n    <div>\r\n        <button type=\"submit\" {{ $attributes }}>\r\n            {{ $slot }}\r\n        </button>\r\n    </div>\r\n</x-form>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\form-button.blade.php"
                    },
                    "\\resources\\views\\components\\form.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'method' => 'POST',\r\n    'action',\r\n    'hasFiles' => false,\r\n    'model'\r\n])\r\n\r\n@php\r\n    $method = strtoupper($method);\r\n@endphp\r\n\r\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\r\n    @csrf\r\n    @if (!in_array($method, ['POST', 'GET']))\r\n        @method($method)\r\n    @endif\r\n    {{ $slot }}\r\n</form>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\form.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\basic.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'type' => 'text',\r\n    'min' => null,\r\n    'max' => null,\r\n    'step' => null,\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<input\r\n    type=\"{{ $type }}\"\r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\"\r\n    value=\"{{ old($name, $value ?? '') }}\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\r\n    {{ $min ? \"min={$min}\" : '' }}\r\n    {{ $max ? \"max={$max}\" : '' }}\r\n    {{ $step ? \"step={$step}\" : '' }}\r\n    autocomplete=\"off\"\r\n>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\basic.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\checkbox.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'id',\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'checked' => false,\r\n    'addHiddenValue' => true,\r\n    'hiddenValue' => 0,\r\n])\r\n\r\n@php\r\n    $checked = !! $checked\r\n@endphp\r\n\r\n<div class=\"relative block mb-2\">\r\n\r\n    {{-- Adds a hidden default value to be send if checked is false --}}\r\n    @if($addHiddenValue)\r\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\r\n    @endif\r\n\r\n    <input\r\n        type=\"checkbox\"\r\n        id=\"{{ $id ?? $name }}\"\r\n        name=\"{{ $name }}\"\r\n        value=\"{{ $value ?? 1 }}\"\r\n        {{ $checked ? 'checked' : '' }}\r\n        {{ $attributes->merge(['class' => '']) }}\r\n    >\r\n\r\n    @if($label ?? null)\r\n        <label class=\"text-gray-700 pl-2\" for=\"{{ $id ?? $name }}\">\r\n            {{ $label }}\r\n        </label>\r\n    @endif\r\n</div>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\checkbox.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\date.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\date.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\datetime.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\datetime.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\email.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\email.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\group.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<div {{ $attributes->merge(['class' => 'px-4 my-2']) }}>\r\n    {{ $slot }}\r\n</div>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\group.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\hidden.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\hidden.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\number.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'min' => null,\r\n    'max' => null,\r\n    'step' => null,\r\n])\r\n\r\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\number.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\partials\\error.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<p class=\"text-red-600\" role=\"alert\">{{ $message }}</p>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\partials\\error.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\partials\\label.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<label class=\"{{ ($required ?? false) ? 'label label-required font-medium text-gray-700' : 'label font-medium text-gray-700' }}\" for=\"{{ $name }}\">\r\n    {{ $label }}\r\n</label>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\partials\\label.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\password.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value' => '',\r\n])\r\n\r\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\password.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\select.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'type' => 'text',\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<select\r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\r\n    autocomplete=\"off\"\r\n>{{ $slot }}</select>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\select.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\text.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\text.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\textarea.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<textarea \r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\" \r\n    rows=\"3\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\r\n    autocomplete=\"off\"\r\n>{{$slot}}</textarea>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\textarea.blade.php"
                    },
                    "\\resources\\views\\components\\inputs\\url.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"url\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\inputs\\url.blade.php"
                    },
                    "\\resources\\views\\components\\dropdown-link.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-left text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>\r\n",
                        "module": "base",
                        "path": "\\resources\\views\\components\\dropdown-link.blade.php"
                    },
                    "\\resources\\views\\components\\dropdown.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white', 'dropdownClasses' => ''])\r\n\r\n@php\r\nswitch ($align) {\r\n    case 'left':\r\n        $alignmentClasses = 'origin-top-left left-0';\r\n        break;\r\n    case 'top':\r\n        $alignmentClasses = 'origin-top';\r\n        break;\r\n    case 'none':\r\n    case 'false':\r\n        $alignmentClasses = '';\r\n        break;\r\n    case 'right':\r\n    default:\r\n        $alignmentClasses = 'origin-top-right right-0';\r\n        break;\r\n}\r\n\r\nswitch ($width) {\r\n    case '48':\r\n        $width = 'w-48';\r\n        break;\r\n}\r\n@endphp\r\n\r\n<div class=\"relative\" x-data=\"{ open: false }\" @click.away=\"open = false\" @close.stop=\"open = false\">\r\n    <div @click=\"open = ! open\">\r\n        {{ $trigger }}\r\n    </div>\r\n\r\n    <div x-show=\"open\"\r\n            x-transition:enter=\"transition ease-out duration-200\"\r\n            x-transition:enter-start=\"transform opacity-0 scale-95\"\r\n            x-transition:enter-end=\"transform opacity-100 scale-100\"\r\n            x-transition:leave=\"transition ease-in duration-75\"\r\n            x-transition:leave-start=\"transform opacity-100 scale-100\"\r\n            x-transition:leave-end=\"transform opacity-0 scale-95\"\r\n            class=\"absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }} {{ $dropdownClasses }}\"\r\n            style=\"display: none;\"\r\n            @click=\"open = false\">\r\n        <div class=\"rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}\">\r\n            {{ $content }}\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                        "module": "base",
                        "path": "\\resources\\views\\components\\dropdown.blade.php"
                    },
                    "\\resources\\views\\components\\modal.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "{{-- This modal modal was copied from Jetstream components --}}\r\n\r\n@props(['id', 'maxWidth'])\r\n\r\n@php\r\n$id = $id ?? md5($attributes->wire('model'));\r\n\r\n$maxWidth = [\r\n    'sm' => 'sm:max-w-sm',\r\n    'md' => 'sm:max-w-md',\r\n    'lg' => 'sm:max-w-lg',\r\n    'xl' => 'sm:max-w-xl',\r\n    '2xl' => 'sm:max-w-2xl',\r\n][$maxWidth ?? '2xl'];\r\n@endphp\r\n\r\n<div\r\n    x-data=\"{ show: @entangle($attributes->wire('model')).defer }\"\r\n    x-on:close.stop=\"show = false\"\r\n    x-on:keydown.escape.window=\"show = false\"\r\n    x-show=\"show\"\r\n    id=\"{{ $id }}\"\r\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\r\n    style=\"display: none;\"\r\n>\r\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0\"\r\n                    x-transition:enter-end=\"opacity-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100\"\r\n                    x-transition:leave-end=\"opacity-0\">\r\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n    </div>\r\n\r\n    <div x-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\r\n                    x-trap.inert.noscroll=\"show\"\r\n                    x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                    x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                    x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\r\n        {{ $slot }}\r\n    </div>\r\n</div>\r\n",
                        "module": "base",
                        "path": "\\resources\\views\\components\\modal.blade.php"
                    },
                    "\\resources\\views\\components\\nav-dropdown.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'title'\r\n])\r\n\r\n<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\r\n    <x-dropdown align=\"right\" width=\"48\">\r\n        <x-slot name=\"trigger\">\r\n            <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\r\n                <div>{{ $title ?? '' }}</div>\r\n\r\n                <div class=\"ml-1\">\r\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n                        <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                    </svg>\r\n                </div>\r\n            </button>\r\n        </x-slot>\r\n\r\n        <x-slot name=\"content\">\r\n            {{ $slot }}\r\n        </x-slot>\r\n    </x-dropdown>\r\n</div>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\nav-dropdown.blade.php"
                    },
                    "\\resources\\views\\components\\nav-link.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props(['active'])\r\n\r\n@php\r\n$classes = ($active ?? false)\r\n            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'\r\n            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';\r\n@endphp\r\n\r\n<a {{ $attributes->merge(['class' => $classes]) }}>\r\n    {{ $slot }}\r\n</a>\r\n",
                        "module": "base",
                        "path": "\\resources\\views\\components\\nav-link.blade.php"
                    },
                    "\\resources\\views\\components\\partials\\card.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'bodyClasses' => 'flex-auto p-6',\r\n])\r\n\r\n<div {{ $attributes->merge(['class' => 'relative flex flex-col rounded-lg bg-white break-words shadow-xl']) }}>\r\n    <div class=\"{{ $bodyClasses }}\">\r\n        \r\n        @if(isset($title))\r\n        <h4 class=\"text-lg font-bold mb-3\">\r\n            {{ $title }}\r\n        </h4>\r\n        @endif\r\n\r\n        @if(isset($subtitle))\r\n        <h5 class=\"text-gray-600 text-sm\">\r\n            {{ $subtitle }}\r\n        </h5>\r\n        @endif\r\n\r\n        {{ $slot }}\r\n    </div>\r\n</div>",
                        "module": "base",
                        "path": "\\resources\\views\\components\\partials\\card.blade.php"
                    },
                    "\\resources\\views\\components\\partials\\thumbnail.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props([\r\n    'src',\r\n    'size' => 50,\r\n])\r\n\r\n@if($src)\r\n<img src=\"{{ $src }}\" class=\"object-cover rounded border border-gray-200\" style=\"width: {{ $size }}px; height: {{ $size }}px;\">\r\n@else\r\n<div class=\"border rounded border-gray-200 bg-gray-100\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\r\n@endif",
                        "module": "base",
                        "path": "\\resources\\views\\components\\partials\\thumbnail.blade.php"
                    },
                    "\\resources\\views\\components\\responsive-nav-link.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@props(['active'])\r\n\r\n@php\r\n$classes = ($active ?? false)\r\n            ? 'block w-full pl-3 pr-4 py-2 border-l-4 border-indigo-400 text-left text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out'\r\n            : 'block w-full pl-3 pr-4 py-2 border-l-4 border-transparent text-left text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';\r\n@endphp\r\n\r\n<a {{ $attributes->merge(['class' => $classes]) }}>\r\n    {{ $slot }}\r\n</a>\r\n",
                        "module": "base",
                        "path": "\\resources\\views\\components\\responsive-nav-link.blade.php"
                    },
                    "\\resources\\css\\app.css": {
                        "deleteOnGeneration": true,
                        "content": "@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n\r\n.button {\r\n    @apply inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 border border-transparent rounded-md font-semibold text-xs tracking-widest transition ease-in-out duration-150 ring-gray-300;\r\n}\r\n\r\n.button:hover {\r\n    @apply bg-gray-200;\r\n}\r\n\r\n.button:active, .button:focus {\r\n    @apply bg-gray-300 ring;\r\n}\r\n\r\n.button.button-primary {\r\n    @apply bg-indigo-500 text-white !important;\r\n}\r\n\r\n.button-primary:hover, .button.button-primary:active, .button.button-primary:focus {\r\n    @apply bg-indigo-600 !important;\r\n}\r\n\r\n.button.button-primary:disabled {\r\n    @apply bg-indigo-200 !important;\r\n}\r\n\r\n.button.button-danger {\r\n    @apply bg-red-500 text-white !important;\r\n}\r\n\r\n.button-danger:hover, .button.button-danger:active, .button.button-danger:focus {\r\n    @apply bg-red-600 !important;\r\n}\r\n\r\n.button.button-danger:disabled {\r\n    @apply bg-red-200 !important;\r\n}",
                        "module": "base",
                        "path": "\\resources\\css\\app.css"
                    },
                    "\\resources\\views\\layouts\\app.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<!DOCTYPE html>\r\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n        \r\n        <title>Vemto</title>\r\n        \r\n        <!-- Fonts -->\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\">\r\n        \r\n        <!-- Styles -->\r\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\r\n        \r\n        <!-- Icons -->\r\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\r\n        \r\n        <!-- Scripts -->\r\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\r\n\r\n        \r\n        @livewireStyles\r\n    </head>\r\n    <body class=\"font-sans antialiased\">\r\n        <x-banner />\r\n\r\n        <div class=\"min-h-screen bg-gray-100\">\r\n            @livewire('navigation-menu')\r\n        \r\n            <!-- Page Heading -->\r\n            @if (isset($header))\r\n                <header class=\"bg-white shadow\">\r\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                        {{ $header }}\r\n                    </div>\r\n                </header>\r\n            @endif\r\n        \r\n            <!-- Page Content -->\r\n            <main>\r\n                {{ $slot }}\r\n            </main>\r\n        </div>\r\n\r\n        @stack('modals')\r\n        \r\n        @livewireScripts\r\n        \r\n        @stack('scripts')\r\n        \r\n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\r\n        \r\n        @if (session()->has('success')) \r\n        <script>\r\n            var notyf = new Notyf({dismissible: true})\r\n            notyf.success('{{ session('success') }}')\r\n        </script> \r\n        @endif\r\n        \r\n        <script>\r\n            /* Simple Alpine Image Viewer */\r\n            document.addEventListener('alpine:init', () => {\r\n                Alpine.data('imageViewer', (src = '') => {\r\n                    return {\r\n                        imageUrl: src,\r\n        \r\n                        refreshUrl() {\r\n                            this.imageUrl = this.$el.getAttribute(\"image-url\")\r\n                        },\r\n        \r\n                        fileChosen(event) {\r\n                            this.fileToDataUrl(event, src => this.imageUrl = src)\r\n                        },\r\n        \r\n                        fileToDataUrl(event, callback) {\r\n                            if (! event.target.files.length) return\r\n        \r\n                            let file = event.target.files[0],\r\n                                reader = new FileReader()\r\n        \r\n                            reader.readAsDataURL(file)\r\n                            reader.onload = e => callback(e.target.result)\r\n                        },\r\n                    }\r\n                })\r\n            })\r\n        </script>\r\n    </body>\r\n</html>\r\n",
                        "module": "base",
                        "path": "\\resources\\views\\layouts\\app.blade.php"
                    },
                    "\\resources\\views\\navigation-menu.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\r\n    <!-- Primary Navigation Menu -->\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div class=\"flex justify-between h-16\">\r\n            <div class=\"flex\">\r\n                <!-- Logo -->\r\n                <div class=\"shrink-0 flex items-center\">\r\n                    <a href=\"{{ route('dashboard') }}\">\r\n                        <x-application-mark class=\"block h-9 w-auto\" />\r\n                    </a>\r\n                </div>\r\n\r\n                <!-- Navigation Links -->\r\n                <div class=\"hidden space-x-8 sm:-my-px sm:ml-10 sm:flex\">\r\n                    <x-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\r\n                        {{ __('Dashboard') }}\r\n                    </x-nav-link>\r\n                </div>\r\n\r\n                <x-nav-dropdown title=\"Apps\" align=\"right\" width=\"48\">\r\n                        @can('view-any', App\\Models\\User::class)\r\n                        <x-dropdown-link href=\"{{ route('users.index') }}\">\r\n                        Users\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                        @can('view-any', App\\Models\\UserActivityLog::class)\r\n                        <x-dropdown-link href=\"{{ route('user-activity-logs.index') }}\">\r\n                        User Activity Logs\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                        @can('view-any', App\\Models\\Record::class)\r\n                        <x-dropdown-link href=\"{{ route('records.index') }}\">\r\n                        Records\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                        @can('view-any', App\\Models\\UserUpload::class)\r\n                        <x-dropdown-link href=\"{{ route('user-uploads.index') }}\">\r\n                        User Uploads\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                        @can('view-any', App\\Models\\UserGallery::class)\r\n                        <x-dropdown-link href=\"{{ route('user-galleries.index') }}\">\r\n                        User Galleries\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                        @can('view-any', App\\Models\\Subrecord::class)\r\n                        <x-dropdown-link href=\"{{ route('subrecords.index') }}\">\r\n                        Subrecords\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                </x-nav-dropdown>\r\n\r\n            </div>\r\n\r\n            <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\r\n                <!-- Teams Dropdown -->\r\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\r\n                    <div class=\"ml-3 relative\">\r\n                        <x-dropdown align=\"right\" width=\"60\">\r\n                            <x-slot name=\"trigger\">\r\n                                <span class=\"inline-flex rounded-md\">\r\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\">\r\n                                        {{ Auth::user()->currentTeam->name }}\r\n\r\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                </span>\r\n                            </x-slot>\r\n\r\n                            <x-slot name=\"content\">\r\n                                <div class=\"w-60\">\r\n                                    <!-- Team Management -->\r\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\r\n                                        {{ __('Manage Team') }}\r\n                                    </div>\r\n\r\n                                    <!-- Team Settings -->\r\n                                    <x-dropdown-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\">\r\n                                        {{ __('Team Settings') }}\r\n                                    </x-dropdown-link>\r\n\r\n                                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\r\n                                        <x-dropdown-link href=\"{{ route('teams.create') }}\">\r\n                                            {{ __('Create New Team') }}\r\n                                        </x-dropdown-link>\r\n                                    @endcan\r\n\r\n                                    <div class=\"border-t border-gray-100\"></div>\r\n\r\n                                    <!-- Team Switcher -->\r\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\r\n                                        {{ __('Switch Teams') }}\r\n                                    </div>\r\n\r\n                                    @foreach (Auth::user()->allTeams() as $team)\r\n                                        <x-switchable-team :team=\"$team\" />\r\n                                    @endforeach\r\n                                </div>\r\n                            </x-slot>\r\n                        </x-dropdown>\r\n                    </div>\r\n                @endif\r\n\r\n                <!-- Settings Dropdown -->\r\n                <div class=\"ml-3 relative\">\r\n                    <x-dropdown align=\"right\" width=\"48\">\r\n                        <x-slot name=\"trigger\">\r\n                            @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\r\n                                <button class=\"flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition duration-150 ease-in-out\">\r\n                                    <img class=\"h-8 w-8 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\r\n                                </button>\r\n                            @else\r\n                                <span class=\"inline-flex rounded-md\">\r\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\">\r\n                                        {{ Auth::user()->name }}\r\n\r\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                </span>\r\n                            @endif\r\n                        </x-slot>\r\n\r\n                        <x-slot name=\"content\">\r\n                            <!-- Account Management -->\r\n                            <div class=\"block px-4 py-2 text-xs text-gray-400\">\r\n                                {{ __('Manage Account') }}\r\n                            </div>\r\n\r\n                            <x-dropdown-link href=\"{{ route('profile.show') }}\">\r\n                                {{ __('Profile') }}\r\n                            </x-dropdown-link>\r\n\r\n                            @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\r\n                                <x-dropdown-link href=\"{{ route('api-tokens.index') }}\">\r\n                                    {{ __('API Tokens') }}\r\n                                </x-dropdown-link>\r\n                            @endif\r\n\r\n                            <div class=\"border-t border-gray-100\"></div>\r\n\r\n                            <!-- Authentication -->\r\n                            <form method=\"POST\" action=\"{{ route('logout') }}\">\r\n                                @csrf\r\n\r\n                                <x-dropdown-link href=\"{{ route('logout') }}\"\r\n                                         onclick=\"event.preventDefault();\r\n                                                this.closest('form').submit();\">\r\n                                    {{ __('Log Out') }}\r\n                                </x-dropdown-link>\r\n                            </form>\r\n                        </x-slot>\r\n                    </x-dropdown>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Hamburger -->\r\n            <div class=\"-mr-2 flex items-center sm:hidden\">\r\n                <button @click=\"open = ! open\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\r\n                    <svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path :class=\"{'hidden': open, 'inline-flex': ! open }\" class=\"inline-flex\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                        <path :class=\"{'hidden': ! open, 'inline-flex': open }\" class=\"hidden\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Responsive Navigation Menu -->\r\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\r\n        <div class=\"pt-2 pb-3 space-y-1\">\r\n            <x-responsive-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\r\n                {{ __('Dashboard') }}\r\n            </x-responsive-nav-link>\r\n            \r\n                @can('view-any', App\\Models\\User::class)\r\n                <x-responsive-nav-link href=\"{{ route('users.index') }}\">\r\n                Users\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n                @can('view-any', App\\Models\\UserActivityLog::class)\r\n                <x-responsive-nav-link href=\"{{ route('user-activity-logs.index') }}\">\r\n                User Activity Logs\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n                @can('view-any', App\\Models\\Record::class)\r\n                <x-responsive-nav-link href=\"{{ route('records.index') }}\">\r\n                Records\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n                @can('view-any', App\\Models\\UserUpload::class)\r\n                <x-responsive-nav-link href=\"{{ route('user-uploads.index') }}\">\r\n                User Uploads\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n                @can('view-any', App\\Models\\UserGallery::class)\r\n                <x-responsive-nav-link href=\"{{ route('user-galleries.index') }}\">\r\n                User Galleries\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n                @can('view-any', App\\Models\\Subrecord::class)\r\n                <x-responsive-nav-link href=\"{{ route('subrecords.index') }}\">\r\n                Subrecords\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n\r\n        </div>\r\n\r\n        <!-- Responsive Settings Options -->\r\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\r\n            <div class=\"flex items-center px-4\">\r\n                @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\r\n                    <div class=\"shrink-0 mr-3\">\r\n                        <img class=\"h-10 w-10 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\r\n                    </div>\r\n                @endif\r\n\r\n                <div>\r\n                    <div class=\"font-medium text-base text-gray-800\">{{ Auth::user()->name }}</div>\r\n                    <div class=\"font-medium text-sm text-gray-500\">{{ Auth::user()->email }}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"mt-3 space-y-1\">\r\n                <!-- Account Management -->\r\n                <x-responsive-nav-link href=\"{{ route('profile.show') }}\" :active=\"request()->routeIs('profile.show')\">\r\n                    {{ __('Profile') }}\r\n                </x-responsive-nav-link>\r\n\r\n                @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\r\n                    <x-responsive-nav-link href=\"{{ route('api-tokens.index') }}\" :active=\"request()->routeIs('api-tokens.index')\">\r\n                        {{ __('API Tokens') }}\r\n                    </x-responsive-nav-link>\r\n                @endif\r\n\r\n                <!-- Authentication -->\r\n                <form method=\"POST\" action=\"{{ route('logout') }}\">\r\n                    @csrf\r\n\r\n                    <x-responsive-nav-link href=\"{{ route('logout') }}\"\r\n                                   onclick=\"event.preventDefault();\r\n                                    this.closest('form').submit();\">\r\n                        {{ __('Log Out') }}\r\n                    </x-responsive-nav-link>\r\n                </form>\r\n\r\n                <!-- Team Management -->\r\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\r\n                    <div class=\"border-t border-gray-200\"></div>\r\n\r\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\r\n                        {{ __('Manage Team') }}\r\n                    </div>\r\n\r\n                    <!-- Team Settings -->\r\n                    <x-responsive-nav-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\" :active=\"request()->routeIs('teams.show')\">\r\n                        {{ __('Team Settings') }}\r\n                    </x-responsive-nav-link>\r\n\r\n                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\r\n                        <x-responsive-nav-link href=\"{{ route('teams.create') }}\" :active=\"request()->routeIs('teams.create')\">\r\n                            {{ __('Create New Team') }}\r\n                        </x-responsive-nav-link>\r\n                    @endcan\r\n\r\n                    <div class=\"border-t border-gray-200\"></div>\r\n\r\n                    <!-- Team Switcher -->\r\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\r\n                        {{ __('Switch Teams') }}\r\n                    </div>\r\n\r\n                    @foreach (Auth::user()->allTeams() as $team)\r\n                        <x-switchable-team :team=\"$team\" component=\"responsive-nav-link\" />\r\n                    @endforeach\r\n                @endif\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nav>",
                        "module": "base",
                        "path": "\\resources\\views\\navigation-menu.blade.php"
                    },
                    "\\database\\factories\\RecordFactory.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Record;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass RecordFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Record::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'created_by' => $this->faker->uuid(),\n            'updated_by' => $this->faker->uuid(),\n            'string' => $this->faker->city(),\n            'email' => $this->faker->email(),\n            'integer' => $this->faker->randomNumber(0),\n            'decimal' => $this->faker->randomNumber(1),\n            'n_p_w_p' => $this->faker->randomNumber(),\n            'datetime' => $this->faker->dateTime(),\n            'date' => $this->faker->date(),\n            'time' => $this->faker->time(),\n            'i_p_address' => $this->faker->ipv4(),\n            'bool' => $this->faker->boolean(),\n            'enum' => 'enabled',\n            'text' => $this->faker->text(),\n            'file' => $this->faker->text(),\n            'image' => $this->faker->text(),\n            'markdown_text' => $this->faker->text(),\n            'w_y_s_i_w_y_g' => $this->faker->text(),\n            'latitude' => $this->faker->latitude(),\n            'longitude' => $this->faker->longitude(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n",
                        "module": "entity:185",
                        "path": "\\database\\factories\\RecordFactory.php"
                    },
                    "\\database\\factories\\SubrecordFactory.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Subrecord;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SubrecordFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Subrecord::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'datetime' => $this->faker->dateTime(),\n            'date' => $this->faker->date(),\n            'time' => $this->faker->time(),\n            'n_p_w_p' => $this->faker->randomNumber(),\n            'markdown_text' => $this->faker->text(),\n            'w_y_s_i_w_y_g' => $this->faker->text(),\n            'file' => $this->faker->text(),\n            'image' => $this->faker->text(),\n            'i_p_address' => $this->faker->ipv4(),\n            'latitude' => $this->faker->latitude(),\n            'longitude' => $this->faker->longitude(),\n            'record_id' => \\App\\Models\\Record::factory(),\n        ];\n    }\n}\n",
                        "module": "entity:204",
                        "path": "\\database\\factories\\SubrecordFactory.php"
                    },
                    "\\database\\factories\\UserFactory.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                        "module": "entity:184",
                        "path": "\\database\\factories\\UserFactory.php"
                    },
                    "\\database\\factories\\UserActivityLogFactory.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\UserActivityLog;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserActivityLogFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = UserActivityLog::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'title' => $this->faker->sentence(10),\n            'link' => $this->faker->text(),\n            'message' => $this->faker->sentence(20),\n            'i_p_address' => $this->faker->ipv4(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n",
                        "module": "entity:205",
                        "path": "\\database\\factories\\UserActivityLogFactory.php"
                    },
                    "\\database\\factories\\UserGalleryFactory.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\UserGallery;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserGalleryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = UserGallery::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'file' => $this->faker->text(),\n            'name' => $this->faker->name(),\n            'description' => $this->faker->text(),\n            'type' => $this->faker->word(),\n            'metadata' => [],\n            'thumbnail' => $this->faker->text(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n",
                        "module": "entity:207",
                        "path": "\\database\\factories\\UserGalleryFactory.php"
                    },
                    "\\database\\factories\\UserUploadFactory.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\UserUpload;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserUploadFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = UserUpload::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'at' => $this->faker->dateTime('now', 'UTC'),\n            'file' => $this->faker->text(),\n            'name' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'type' => $this->faker->word(),\n            'metadata' => [],\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n",
                        "module": "entity:206",
                        "path": "\\database\\factories\\UserUploadFactory.php"
                    },
                    "\\database\\seeders\\RecordSeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Record;\nuse Illuminate\\Database\\Seeder;\n\nclass RecordSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Record::factory()\n            ->count(5)\n            ->create();\n    }\n}\n",
                        "module": "entity:185",
                        "path": "\\database\\seeders\\RecordSeeder.php"
                    },
                    "\\database\\seeders\\SubrecordSeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Subrecord;\nuse Illuminate\\Database\\Seeder;\n\nclass SubrecordSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Subrecord::factory()\n            ->count(5)\n            ->create();\n    }\n}\n",
                        "module": "entity:204",
                        "path": "\\database\\seeders\\SubrecordSeeder.php"
                    },
                    "\\database\\seeders\\UserSeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n",
                        "module": "entity:184",
                        "path": "\\database\\seeders\\UserSeeder.php"
                    },
                    "\\database\\seeders\\UserActivityLogSeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\UserActivityLog;\n\nclass UserActivityLogSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        UserActivityLog::factory()\n            ->count(5)\n            ->create();\n    }\n}\n",
                        "module": "entity:205",
                        "path": "\\database\\seeders\\UserActivityLogSeeder.php"
                    },
                    "\\database\\seeders\\UserGallerySeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\UserGallery;\nuse Illuminate\\Database\\Seeder;\n\nclass UserGallerySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        UserGallery::factory()\n            ->count(5)\n            ->create();\n    }\n}\n",
                        "module": "entity:207",
                        "path": "\\database\\seeders\\UserGallerySeeder.php"
                    },
                    "\\database\\seeders\\UserUploadSeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\UserUpload;\nuse Illuminate\\Database\\Seeder;\n\nclass UserUploadSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        UserUpload::factory()\n            ->count(5)\n            ->create();\n    }\n}\n",
                        "module": "entity:206",
                        "path": "\\database\\seeders\\UserUploadSeeder.php"
                    },
                    "\\database\\seeders\\DatabaseSeeder.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        // Adding an admin user\n        $user = \\App\\Models\\User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(RecordSeeder::class);\n        $this->call(SubrecordSeeder::class);\n        $this->call(UserSeeder::class);\n        $this->call(UserActivityLogSeeder::class);\n        $this->call(UserGallerySeeder::class);\n        $this->call(UserUploadSeeder::class);\n    }\n}\n",
                        "module": "base",
                        "path": "\\database\\seeders\\DatabaseSeeder.php"
                    },
                    "\\app\\Policies\\RecordPolicy.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Record;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass RecordPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the record can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the record can view the model.\n     */\n    public function view(User $user, Record $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the record can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the record can update the model.\n     */\n    public function update(User $user, Record $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the record can delete the model.\n     */\n    public function delete(User $user, Record $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the record can restore the model.\n     */\n    public function restore(User $user, Record $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the record can permanently delete the model.\n     */\n    public function forceDelete(User $user, Record $model): bool\n    {\n        return false;\n    }\n}\n",
                        "module": "entity:185",
                        "path": "\\app\\Policies\\RecordPolicy.php"
                    },
                    "\\app\\Policies\\SubrecordPolicy.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Subrecord;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass SubrecordPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the subrecord can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subrecord can view the model.\n     */\n    public function view(User $user, Subrecord $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subrecord can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subrecord can update the model.\n     */\n    public function update(User $user, Subrecord $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subrecord can delete the model.\n     */\n    public function delete(User $user, Subrecord $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subrecord can restore the model.\n     */\n    public function restore(User $user, Subrecord $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the subrecord can permanently delete the model.\n     */\n    public function forceDelete(User $user, Subrecord $model): bool\n    {\n        return false;\n    }\n}\n",
                        "module": "entity:204",
                        "path": "\\app\\Policies\\SubrecordPolicy.php"
                    },
                    "\\app\\Policies\\UserPolicy.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return false;\n    }\n}\n",
                        "module": "entity:184",
                        "path": "\\app\\Policies\\UserPolicy.php"
                    },
                    "\\app\\Policies\\UserActivityLogPolicy.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\UserActivityLog;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserActivityLogPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the userActivityLog can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userActivityLog can view the model.\n     */\n    public function view(User $user, UserActivityLog $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userActivityLog can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userActivityLog can update the model.\n     */\n    public function update(User $user, UserActivityLog $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userActivityLog can delete the model.\n     */\n    public function delete(User $user, UserActivityLog $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userActivityLog can restore the model.\n     */\n    public function restore(User $user, UserActivityLog $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the userActivityLog can permanently delete the model.\n     */\n    public function forceDelete(User $user, UserActivityLog $model): bool\n    {\n        return false;\n    }\n}\n",
                        "module": "entity:205",
                        "path": "\\app\\Policies\\UserActivityLogPolicy.php"
                    },
                    "\\app\\Policies\\UserGalleryPolicy.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\UserGallery;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserGalleryPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the userGallery can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userGallery can view the model.\n     */\n    public function view(User $user, UserGallery $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userGallery can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userGallery can update the model.\n     */\n    public function update(User $user, UserGallery $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userGallery can delete the model.\n     */\n    public function delete(User $user, UserGallery $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userGallery can restore the model.\n     */\n    public function restore(User $user, UserGallery $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the userGallery can permanently delete the model.\n     */\n    public function forceDelete(User $user, UserGallery $model): bool\n    {\n        return false;\n    }\n}\n",
                        "module": "entity:207",
                        "path": "\\app\\Policies\\UserGalleryPolicy.php"
                    },
                    "\\app\\Policies\\UserUploadPolicy.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\UserUpload;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserUploadPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the userUpload can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userUpload can view the model.\n     */\n    public function view(User $user, UserUpload $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userUpload can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userUpload can update the model.\n     */\n    public function update(User $user, UserUpload $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userUpload can delete the model.\n     */\n    public function delete(User $user, UserUpload $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the userUpload can restore the model.\n     */\n    public function restore(User $user, UserUpload $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the userUpload can permanently delete the model.\n     */\n    public function forceDelete(User $user, UserUpload $model): bool\n    {\n        return false;\n    }\n}\n",
                        "module": "entity:206",
                        "path": "\\app\\Policies\\UserUploadPolicy.php"
                    },
                    "\\database\\migrations\\2024_05_01_000001_create_records_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('records', function (Blueprint $table) {\n            $table->uuid('id')->primary();\n            $table->uuid('created_by')->nullable();\n            $table->uuid('updated_by')->nullable();\n            $table->uuid('user_id')->nullable();\n            $table->string('string');\n            $table->string('email')->nullable();\n            $table->integer('integer')->nullable();\n            $table->decimal('decimal')->nullable();\n            $table->bigInteger('n_p_w_p')->nullable();\n            $table->dateTime('datetime')->nullable();\n            $table->date('date')->nullable();\n            $table->time('time')->nullable();\n            $table->ipAddress('i_p_address')->nullable();\n            $table->boolean('bool')->nullable();\n            $table->enum('enum', ['enabled', 'disabled'])->nullable();\n            $table->text('text')->nullable();\n            $table->text('file')->nullable();\n            $table->text('image')->nullable();\n            $table->text('markdown_text')->nullable();\n            $table->text('w_y_s_i_w_y_g')->nullable();\n            $table->float('latitude')->nullable();\n            $table->float('longitude')->nullable();\n\n            $table->index('user_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('records');\n    }\n};\n",
                        "module": "entity:185",
                        "path": "\\database\\migrations\\2024_05_01_000001_create_records_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_000002_create_subrecords_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('subrecords', function (Blueprint $table) {\n            $table->uuid('id')->primary();\n            $table->uuid('record_id');\n            $table->dateTime('datetime')->nullable();\n            $table->date('date')->nullable();\n            $table->time('time')->nullable();\n            $table->bigInteger('n_p_w_p')->nullable();\n            $table->text('markdown_text')->nullable();\n            $table->text('w_y_s_i_w_y_g')->nullable();\n            $table->text('file')->nullable();\n            $table->text('image')->nullable();\n            $table->ipAddress('i_p_address')->nullable();\n            $table->float('latitude')->nullable();\n            $table->float('longitude')->nullable();\n\n            $table->index('record_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('subrecords');\n    }\n};\n",
                        "module": "entity:204",
                        "path": "\\database\\migrations\\2024_05_01_000002_create_subrecords_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_000000_create_users_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n            $table->text('two_factor_secret')->nullable();\n            $table->text('two_factor_recovery_codes')->nullable();\n            $table->timestamp('two_factor_confirmed_at')->nullable();\n            $table->foreignId('current_team_id')->nullable();\n            $table->text('profile_photo_path')->nullable();\n            $table\n                ->uuid('uid')\n                ->nullable()\n                ->unique();\n\n            $table->index('uid');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n    }\n};\n",
                        "module": "entity:184",
                        "path": "\\database\\migrations\\2024_05_01_000000_create_users_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_000003_create_user_activity_logs_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('user_activity_logs', function (Blueprint $table) {\n            $table->uuid('id')->primary();\n            $table->timestampTz('at');\n            $table->uuid('user_id');\n            $table->string('title');\n            $table->text('link')->nullable();\n            $table->text('message')->nullable();\n            $table->ipAddress('i_p_address')->nullable();\n\n            $table->index('user_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('user_activity_logs');\n    }\n};\n",
                        "module": "entity:205",
                        "path": "\\database\\migrations\\2024_05_01_000003_create_user_activity_logs_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_000004_create_user_galleries_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('user_galleries', function (Blueprint $table) {\n            $table->uuid('id')->primary();\n            $table->uuid('user_id');\n            $table->timestampTz('at');\n            $table->text('file');\n            $table->string('name')->nullable();\n            $table->text('description')->nullable();\n            $table->string('type')->nullable();\n            $table->json('metadata')->nullable();\n            $table->text('thumbnail')->nullable();\n\n            $table->index('user_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('user_galleries');\n    }\n};\n",
                        "module": "entity:207",
                        "path": "\\database\\migrations\\2024_05_01_000004_create_user_galleries_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_000005_create_user_uploads_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('user_uploads', function (Blueprint $table) {\n            $table->uuid('id')->primary();\n            $table->uuid('user_id');\n            $table->timestampTz('at');\n            $table->text('file');\n            $table->string('name')->nullable();\n            $table->text('description')->nullable();\n            $table->string('type')->nullable();\n            $table->json('metadata')->nullable();\n\n            $table->index('user_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('user_uploads');\n    }\n};\n",
                        "module": "entity:206",
                        "path": "\\database\\migrations\\2024_05_01_000005_create_user_uploads_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_009001_add_foreigns_to_records_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('records', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('records', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n",
                        "module": "entity:185|entity:184",
                        "path": "\\database\\migrations\\2024_05_01_009001_add_foreigns_to_records_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_009002_add_foreigns_to_subrecords_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('subrecords', function (Blueprint $table) {\n            $table\n                ->foreign('record_id')\n                ->references('id')\n                ->on('records')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('subrecords', function (Blueprint $table) {\n            $table->dropForeign(['record_id']);\n        });\n    }\n};\n",
                        "module": "entity:204|entity:185",
                        "path": "\\database\\migrations\\2024_05_01_009002_add_foreigns_to_subrecords_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_009003_add_foreigns_to_user_activity_logs_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('user_activity_logs', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('user_activity_logs', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n",
                        "module": "entity:205|entity:184",
                        "path": "\\database\\migrations\\2024_05_01_009003_add_foreigns_to_user_activity_logs_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_009004_add_foreigns_to_user_galleries_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('user_galleries', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('user_galleries', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n",
                        "module": "entity:207|entity:184",
                        "path": "\\database\\migrations\\2024_05_01_009004_add_foreigns_to_user_galleries_table.php"
                    },
                    "\\database\\migrations\\2024_05_01_009005_add_foreigns_to_user_uploads_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('user_uploads', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('user_uploads', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n",
                        "module": "entity:206|entity:184",
                        "path": "\\database\\migrations\\2024_05_01_009005_add_foreigns_to_user_uploads_table.php"
                    },
                    "\\app\\Models\\Record.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Concerns\\HasUuids;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Record extends Model\n{\n    use HasUuids;\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'created_by',\n        'updated_by',\n        'user_id',\n        'string',\n        'email',\n        'integer',\n        'decimal',\n        'n_p_w_p',\n        'datetime',\n        'date',\n        'time',\n        'i_p_address',\n        'bool',\n        'enum',\n        'text',\n        'file',\n        'image',\n        'markdown_text',\n        'w_y_s_i_w_y_g',\n        'latitude',\n        'longitude',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'datetime' => 'datetime',\n        'date' => 'date',\n        'time' => 'datetime:H:i:s',\n        'bool' => 'boolean',\n    ];\n\n    public function subrecords()\n    {\n        return $this->hasMany(Subrecord::class);\n    }\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n",
                        "module": "entity:185",
                        "path": "\\app\\Models\\Record.php"
                    },
                    "\\app\\Models\\Subrecord.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Concerns\\HasUuids;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Subrecord extends Model\n{\n    use HasUuids;\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'record_id',\n        'datetime',\n        'date',\n        'time',\n        'n_p_w_p',\n        'markdown_text',\n        'w_y_s_i_w_y_g',\n        'file',\n        'image',\n        'i_p_address',\n        'latitude',\n        'longitude',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'datetime' => 'datetime',\n        'date' => 'date',\n        'time' => 'datetime:H:i:s',\n    ];\n\n    public function record()\n    {\n        return $this->belongsTo(Record::class);\n    }\n}\n",
                        "module": "entity:204",
                        "path": "\\app\\Models\\Subrecord.php"
                    },
                    "\\app\\Models\\User.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse Laravel\\Sanctum\\HasApiTokens;\nuse App\\Models\\Scopes\\Searchable;\nuse Laravel\\Jetstream\\HasProfilePhoto;\nuse Illuminate\\Notifications\\Notifiable;\nuse Laravel\\Fortify\\TwoFactorAuthenticatable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Concerns\\HasUuids;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable implements MustVerifyEmail\n{\n    use HasUuids;\n    use Notifiable;\n    use HasFactory;\n    use Searchable;\n    use HasApiTokens;\n    use HasProfilePhoto;\n    use TwoFactorAuthenticatable;\n\n    protected $fillable = ['name', 'email', 'password'];\n\n    protected $searchableFields = ['*'];\n\n    protected $hidden = [\n        'password',\n        'remember_token',\n        'two_factor_secret',\n        'two_factor_recovery_codes',\n    ];\n\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n        'two_factor_confirmed_at' => 'datetime',\n    ];\n\n    public function userActivityLogs()\n    {\n        return $this->hasMany(UserActivityLog::class);\n    }\n\n    public function userUploads()\n    {\n        return $this->hasMany(UserUpload::class);\n    }\n\n    public function userGalleries()\n    {\n        return $this->hasMany(UserGallery::class);\n    }\n\n    public function records()\n    {\n        return $this->hasMany(Record::class);\n    }\n\n    public function isSuperAdmin(): bool\n    {\n        return in_array($this->email, config('auth.super_admins'));\n    }\n}\n",
                        "module": "entity:184",
                        "path": "\\app\\Models\\User.php"
                    },
                    "\\app\\Models\\UserActivityLog.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Concerns\\HasUuids;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass UserActivityLog extends Model\n{\n    use HasUuids;\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'at',\n        'user_id',\n        'title',\n        'link',\n        'message',\n        'i_p_address',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'user_activity_logs';\n\n    public $timestamps = false;\n\n    protected $casts = [\n        'at' => 'datetime',\n    ];\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n",
                        "module": "entity:205",
                        "path": "\\app\\Models\\UserActivityLog.php"
                    },
                    "\\app\\Models\\UserGallery.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Concerns\\HasUuids;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass UserGallery extends Model\n{\n    use HasUuids;\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'user_id',\n        'at',\n        'file',\n        'name',\n        'description',\n        'type',\n        'metadata',\n        'thumbnail',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'user_galleries';\n\n    public $timestamps = false;\n\n    protected $casts = [\n        'at' => 'datetime',\n        'metadata' => 'array',\n    ];\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n",
                        "module": "entity:207",
                        "path": "\\app\\Models\\UserGallery.php"
                    },
                    "\\app\\Models\\UserUpload.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Concerns\\HasUuids;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass UserUpload extends Model\n{\n    use HasUuids;\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'user_id',\n        'at',\n        'file',\n        'name',\n        'description',\n        'type',\n        'metadata',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'user_uploads';\n\n    public $timestamps = false;\n\n    protected $casts = [\n        'at' => 'datetime',\n        'metadata' => 'array',\n    ];\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n",
                        "module": "entity:206",
                        "path": "\\app\\Models\\UserUpload.php"
                    },
                    "\\app\\Models\\Scopes\\Searchable.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Models\\Scopes;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait Searchable\n{\n    /**\n     * Search paginated items ordering by ID descending\n     */\n    public function scopeSearchLatestPaginated(\n        Builder $query,\n        string $search,\n        int $paginationQuantity = 10\n    ): Builder {\n        return $query\n            ->search($search)\n            ->orderBy('updated_at', 'desc')\n            ->paginate($paginationQuantity);\n    }\n\n    /**\n     * Adds a scope to search the table based on the\n     * $searchableFields array inside the model\n     */\n    public function scopeSearch(Builder $query, string $search): Builder\n    {\n        $query->where(function ($query) use ($search) {\n            foreach ($this->getSearchableFields() as $field) {\n                $query->orWhere($field, 'like', \"%{$search}%\");\n            }\n        });\n\n        return $query;\n    }\n\n    /**\n     * Returns the searchable fields. If $searchableFields is undefined,\n     * or is an empty array, or its first element is '*', it will search\n     * in all table fields\n     */\n    protected function getSearchableFields(): array\n    {\n        if (isset($this->searchableFields) && count($this->searchableFields)) {\n            return $this->searchableFields[0] === '*'\n                ? $this->getAllModelTableFields()\n                : $this->searchableFields;\n        }\n\n        return $this->getAllModelTableFields();\n    }\n\n    /**\n     * Gets all fields from Model's table\n     */\n    protected function getAllModelTableFields(): array\n    {\n        $tableName = $this->getTable();\n\n        return $this->getConnection()\n            ->getSchemaBuilder()\n            ->getColumnListing($tableName);\n    }\n}\n",
                        "module": "base",
                        "path": "\\app\\Models\\Scopes\\Searchable.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\AuthController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Gate;\nuse App\\Actions\\Fortify\\CreateNewUser;\nuse Laravel\\Sanctum\\PersonalAccessToken;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $bearerToken = $request->bearerToken();\n        $token = PersonalAccessToken::findToken($bearerToken);\n        if ($token && !static::isTokenExpired($token->expires_at)) {\n            return response()->json([\n                'token' => $bearerToken,\n                'message' => \"Already logged in.\",\n            ]);\n        }\n\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n\n    private static function isTokenExpired($expiresAt)\n    {\n        if (empty($expiresAt)) {\n            return false;\n        }\n\n        $now = new \\DateTime();\n        return $expiresAt <= $now;\n    }\n\n    public function status(Request $request)\n    {\n        $user = $request->user('sanctum');\n        $menus = [];\n        $links = [];\n\n        if (Gate::forUser($user)->allows('view-any', User::class)) {\n            $menus['users'] = [\n                \"label\" => \"Users\",\n                \"url\" => route('api.users.index'),\n            ];\n        }\n\n        if ($user) {\n            $links['profile'] = [\n                \"label\" => \"Profile\",\n                \"url\" => route('api.user'),\n            ];\n            $links['logout'] = [\n                \"label\" => \"Logout\",\n                \"url\" => route('api.logout'),\n            ];\n        } else {\n            $links['login'] = [\n                \"label\" => \"Login\",\n                \"url\" => route('api.login'),\n            ];\n        }\n\n        return [\n            'token' => $request->bearerToken(),\n            'message' => $user ? \"Authenticated.\" : \"Unauthenticated.\",\n            'user' => $user,\n            'menus' => $menus,\n            'links' => $links,\n        ];\n    }\n\n    public function registration(Request $request)\n    {\n        $bearerToken = $request->bearerToken();\n        $token = PersonalAccessToken::findToken($bearerToken);\n        if ($token && !static::isTokenExpired($token->expires_at)) {\n            return response()->json([\n                'token' => $bearerToken,\n                'message' => \"Registration only allowed for guest.\",\n            ]);\n        }\n\n        return (new CreateNewUser())->create($request->all());\n    }\n\n    public function logout(Request $request)\n    {\n        $bearerToken = $request->bearerToken();\n        $segments = explode('|', $bearerToken);\n        $success = $request\n            ->user()\n            ->tokens()\n            ->where('id', $segments[0] ?? 0)\n            ->delete();\n\n        return response()->json([\n            'message' => $success ? \"Logout success\" : \"Logout failed\",\n        ]);\n    }\n}\n",
                        "module": "base",
                        "path": "\\app\\Http\\Controllers\\Api\\AuthController.php"
                    },
                    "\\tailwind.config.js": {
                        "deleteOnGeneration": true,
                        "content": "import defaultTheme from 'tailwindcss/defaultTheme';\r\nimport forms from '@tailwindcss/forms';\r\nimport typography from '@tailwindcss/typography';\r\n\r\n/** @type {import('tailwindcss').Config} */\r\nexport default {\r\n    content: [\r\n        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',\r\n        './vendor/laravel/jetstream/**/*.blade.php',\r\n        './storage/framework/views/*.php',\r\n        './resources/views/**/*.blade.php',\r\n    ],\r\n\r\n    theme: {\r\n        extend: {\r\n            fontFamily: {\r\n                sans: ['Figtree', ...defaultTheme.fontFamily.sans],\r\n            },\r\n        },\r\n    },\r\n\r\n    plugins: [forms, typography],\r\n};\r\n",
                        "module": "base",
                        "path": "\\tailwind.config.js"
                    },
                    "\\resources\\js\\bootstrap.js": {
                        "deleteOnGeneration": true,
                        "content": "import _ from 'lodash';\r\nwindow._ = _;\r\n\r\n/**\r\n * We'll load the axios HTTP library which allows us to easily issue requests\r\n * to our Laravel back-end. This library automatically handles sending the\r\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\r\n */\r\n\r\nimport axios from 'axios';\r\nwindow.axios = axios;\r\n\r\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n/**\r\n * Echo exposes an expressive API for subscribing to channels and listening\r\n * for events that are broadcast by Laravel. Echo and event broadcasting\r\n * allows your team to easily build robust real-time web applications.\r\n */\r\n\r\n// import Echo from 'laravel-echo';\r\n\r\n// import Pusher from 'pusher-js';\r\n// window.Pusher = Pusher;\r\n\r\n// window.Echo = new Echo({\r\n//     broadcaster: 'pusher',\r\n//     key: import.meta.env.VITE_PUSHER_APP_KEY,\r\n//     wsHost: import.meta.env.VITE_PUSHER_HOST ?? `ws-${import.meta.env.VITE_PUSHER_CLUSTER}.pusher.com`,\r\n//     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,\r\n//     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,\r\n//     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',\r\n//     enabledTransports: ['ws', 'wss'],\r\n// });",
                        "module": "base",
                        "path": "\\resources\\js\\bootstrap.js"
                    },
                    "\\database\\migrations\\2014_10_12_000000_create_users_table.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->uuid('id')->primary();\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n            $table->text('two_factor_secret')->nullable();\n            $table->text('two_factor_recovery_codes')->nullable();\n            $table->timestamp('two_factor_confirmed_at')->nullable();\n            $table->foreignId('current_team_id')->nullable();\n            $table->text('profile_photo_path')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n    }\n};\n",
                        "module": "entity:184",
                        "path": "\\database\\migrations\\2014_10_12_000000_create_users_table.php"
                    },
                    "\\app\\Http\\Controllers\\Api\\SubrecordController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Subrecord;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\SubrecordResource;\nuse App\\Http\\Resources\\SubrecordCollection;\nuse App\\Http\\Requests\\SubrecordStoreRequest;\nuse App\\Http\\Requests\\SubrecordUpdateRequest;\n\nclass SubrecordController extends Controller\n{\n    public function index(Request $request): SubrecordCollection\n    {\n        $this->authorize('view-any', Subrecord::class);\n\n        $search = (string) $request->get('search', '');\n\n        $subrecords = Subrecord::search($search)\n            ->latest()\n            ->paginate();\n\n        return new SubrecordCollection($subrecords);\n    }\n\n    public function store(SubrecordStoreRequest $request): SubrecordResource\n    {\n        $this->authorize('create', Subrecord::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $subrecord = Subrecord::create($validated);\n\n        return new SubrecordResource($subrecord);\n    }\n\n    public function show(\n        Request $request,\n        Subrecord $subrecord\n    ): SubrecordResource {\n        $this->authorize('view', $subrecord);\n\n        return new SubrecordResource($subrecord);\n    }\n\n    public function update(\n        SubrecordUpdateRequest $request,\n        Subrecord $subrecord\n    ): SubrecordResource {\n        $this->authorize('update', $subrecord);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('file')) {\n            if ($subrecord->file) {\n                Storage::delete($subrecord->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            if ($subrecord->image) {\n                Storage::delete($subrecord->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $subrecord->update($validated);\n\n        return new SubrecordResource($subrecord);\n    }\n\n    public function destroy(Request $request, Subrecord $subrecord): Response\n    {\n        $this->authorize('delete', $subrecord);\n\n        if ($subrecord->file) {\n            Storage::delete($subrecord->file);\n        }\n\n        if ($subrecord->image) {\n            Storage::delete($subrecord->image);\n        }\n\n        $subrecord->delete();\n\n        return response()->noContent();\n    }\n}\n",
                        "module": "crud:196",
                        "path": "\\app\\Http\\Controllers\\Api\\SubrecordController.php"
                    },
                    "\\tests\\Feature\\Api\\SubrecordTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Subrecord;\n\nuse App\\Models\\Record;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass SubrecordTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_subrecords_list(): void\n    {\n        $subrecords = Subrecord::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.subrecords.index'));\n\n        $response->assertOk()->assertSee($subrecords[0]->date);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_subrecord(): void\n    {\n        $data = Subrecord::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.subrecords.store'), $data);\n\n        $this->assertDatabaseHas('subrecords', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_subrecord(): void\n    {\n        $subrecord = Subrecord::factory()->create();\n\n        $record = Record::factory()->create();\n\n        $data = [\n            'datetime' => $this->faker->dateTime(),\n            'date' => $this->faker->date(),\n            'time' => $this->faker->time(),\n            'n_p_w_p' => $this->faker->randomNumber(),\n            'markdown_text' => $this->faker->text(),\n            'w_y_s_i_w_y_g' => $this->faker->text(),\n            'file' => $this->faker->text(),\n            'image' => $this->faker->text(),\n            'i_p_address' => $this->faker->ipv4(),\n            'latitude' => $this->faker->latitude(),\n            'longitude' => $this->faker->longitude(),\n            'record_id' => $record->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.subrecords.update', $subrecord),\n            $data\n        );\n\n        $data['id'] = $subrecord->id;\n\n        $this->assertDatabaseHas('subrecords', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_subrecord(): void\n    {\n        $subrecord = Subrecord::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.subrecords.destroy', $subrecord)\n        );\n\n        $this->assertModelMissing($subrecord);\n\n        $response->assertNoContent();\n    }\n}\n",
                        "module": "crud:196",
                        "path": "\\tests\\Feature\\Api\\SubrecordTest.php"
                    },
                    "\\app\\Http\\Requests\\SubrecordStoreRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass SubrecordStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'record_id' => ['required', 'uuid', 'exists:records,id'],\n            'datetime' => ['nullable', 'date'],\n            'date' => ['nullable', 'date'],\n            'time' => ['nullable', 'date_format:H:i:s'],\n            'n_p_w_p' => ['nullable'],\n            'markdown_text' => ['nullable', 'string'],\n            'w_y_s_i_w_y_g' => ['nullable', 'string'],\n            'file' => ['file', 'max:1024', 'nullable'],\n            'image' => ['image', 'max:1024', 'nullable'],\n            'i_p_address' => ['nullable'],\n            'latitude' => ['nullable', 'numeric'],\n            'longitude' => ['nullable', 'numeric'],\n        ];\n    }\n}\n",
                        "module": "crud:196",
                        "path": "\\app\\Http\\Requests\\SubrecordStoreRequest.php"
                    },
                    "\\app\\Http\\Requests\\SubrecordUpdateRequest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass SubrecordUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'record_id' => ['required', 'uuid', 'exists:records,id'],\n            'datetime' => ['nullable', 'date'],\n            'date' => ['nullable', 'date'],\n            'time' => ['nullable', 'date_format:H:i'],\n            'n_p_w_p' => ['nullable'],\n            'markdown_text' => ['nullable', 'string'],\n            'w_y_s_i_w_y_g' => ['nullable', 'string'],\n            'file' => ['file', 'max:1024', 'nullable'],\n            'image' => ['image', 'max:1024', 'nullable'],\n            'i_p_address' => ['nullable'],\n            'latitude' => ['nullable', 'numeric'],\n            'longitude' => ['nullable', 'numeric'],\n        ];\n    }\n}\n",
                        "module": "crud:196",
                        "path": "\\app\\Http\\Requests\\SubrecordUpdateRequest.php"
                    },
                    "\\app\\Http\\Controllers\\SubrecordController.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Record;\nuse App\\Models\\Subrecord;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\SubrecordStoreRequest;\nuse App\\Http\\Requests\\SubrecordUpdateRequest;\n\nclass SubrecordController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Subrecord::class);\n\n        $search = (string) $request->get('search', '');\n\n        $subrecords = Subrecord::search($search)\n            ->latest()\n            ->paginate(10)\n            ->withQueryString();\n\n        return view('app.subrecords.index', compact('subrecords', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Subrecord::class);\n\n        $records = Record::pluck('string', 'id');\n\n        return view('app.subrecords.create', compact('records'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(SubrecordStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Subrecord::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $subrecord = Subrecord::create($validated);\n\n        return redirect()\n            ->route('subrecords.show', $subrecord)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Subrecord $subrecord): View\n    {\n        $this->authorize('view', $subrecord);\n\n        return view('app.subrecords.show', compact('subrecord'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Subrecord $subrecord): View\n    {\n        $this->authorize('update', $subrecord);\n\n        $records = Record::pluck('string', 'id');\n\n        return view('app.subrecords.edit', compact('subrecord', 'records'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        SubrecordUpdateRequest $request,\n        Subrecord $subrecord\n    ): RedirectResponse {\n        $this->authorize('update', $subrecord);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            if ($subrecord->file) {\n                Storage::delete($subrecord->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            if ($subrecord->image) {\n                Storage::delete($subrecord->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $subrecord->update($validated);\n\n        return redirect()\n            ->route('subrecords.show', $subrecord)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Subrecord $subrecord\n    ): RedirectResponse {\n        $this->authorize('delete', $subrecord);\n\n        if ($subrecord->file) {\n            Storage::delete($subrecord->file);\n        }\n\n        if ($subrecord->image) {\n            Storage::delete($subrecord->image);\n        }\n\n        $subrecord->delete();\n\n        return redirect()\n            ->route('subrecords.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n",
                        "module": "crud:196",
                        "path": "\\app\\Http\\Controllers\\SubrecordController.php"
                    },
                    "\\tests\\Feature\\Controllers\\SubrecordControllerTest.php": {
                        "deleteOnGeneration": true,
                        "content": "<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Subrecord;\n\nuse App\\Models\\Record;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass SubrecordControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_subrecords(): void\n    {\n        $subrecords = Subrecord::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('subrecords.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.subrecords.index')\n            ->assertViewHas('subrecords');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_subrecord(): void\n    {\n        $response = $this->get(route('subrecords.create'));\n\n        $response->assertOk()->assertViewIs('app.subrecords.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_subrecord(): void\n    {\n        $data = Subrecord::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('subrecords.store'), $data);\n\n        $this->assertDatabaseHas('subrecords', $data);\n\n        $subrecord = Subrecord::latest('id')->first();\n\n        $response->assertRedirect(route('subrecords.edit', $subrecord));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_subrecord(): void\n    {\n        $subrecord = Subrecord::factory()->create();\n\n        $response = $this->get(route('subrecords.show', $subrecord));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.subrecords.show')\n            ->assertViewHas('subrecord');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_subrecord(): void\n    {\n        $subrecord = Subrecord::factory()->create();\n\n        $response = $this->get(route('subrecords.edit', $subrecord));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.subrecords.edit')\n            ->assertViewHas('subrecord');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_subrecord(): void\n    {\n        $subrecord = Subrecord::factory()->create();\n\n        $record = Record::factory()->create();\n\n        $data = [\n            'datetime' => $this->faker->dateTime(),\n            'date' => $this->faker->date(),\n            'time' => $this->faker->time(),\n            'n_p_w_p' => $this->faker->randomNumber(),\n            'markdown_text' => $this->faker->text(),\n            'w_y_s_i_w_y_g' => $this->faker->text(),\n            'file' => $this->faker->text(),\n            'image' => $this->faker->text(),\n            'i_p_address' => $this->faker->ipv4(),\n            'latitude' => $this->faker->latitude(),\n            'longitude' => $this->faker->longitude(),\n            'record_id' => $record->id,\n        ];\n\n        $response = $this->put(route('subrecords.update', $subrecord), $data);\n\n        $data['id'] = $subrecord->id;\n\n        $this->assertDatabaseHas('subrecords', $data);\n\n        $response->assertRedirect(route('subrecords.edit', $subrecord));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_subrecord(): void\n    {\n        $subrecord = Subrecord::factory()->create();\n\n        $response = $this->delete(route('subrecords.destroy', $subrecord));\n\n        $response->assertRedirect(route('subrecords.index'));\n\n        $this->assertModelMissing($subrecord);\n    }\n}\n",
                        "module": "crud:196",
                        "path": "\\tests\\Feature\\Controllers\\SubrecordControllerTest.php"
                    },
                    "\\resources\\views\\app\\subrecords\\create.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.subrecords.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('subrecords.store') }}\"\n                has-files\n            >\n                @include('app.subrecords.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('subrecords.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            >\n                            </i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:196",
                        "path": "\\resources\\views\\app\\subrecords\\create.blade.php"
                    },
                    "\\resources\\views\\app\\subrecords\\edit.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.subrecords.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('subrecords.update', $subrecord) }}\"\n                has-files\n            >\n                @include('app.subrecords.form-inputs')\n\n                <x-partials.card class=\"mt-5\">\n                    <x-slot name=\"title\">\n                        <span>@lang('text.actions')</span>\n                    </x-slot>\n                    <div class=\"mt-4 px-4\">\n                        <a\n                            href=\"{{ route('subrecords.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('subrecords.show', $subrecord) }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\n                            </i>\n                            @lang('crud.common.cancel')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-partials.card>\n            </x-form>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:196",
                        "path": "\\resources\\views\\app\\subrecords\\edit.blade.php"
                    },
                    "\\resources\\views\\app\\subrecords\\form-inputs.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "@php $editing = isset($subrecord) @endphp\n\n<style>\n    .ts-control {\n        border: none;\n        padding: 0;\n    }\n\n    .ts-dropdown,\n    .ts-control,\n    .ts-control input {\n        color: rgb(31 41 55 / var(--tw-text-opacity));\n        font-family: inherit;\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n</style>\n\n<x-partials.card>\n    {{--\n    <x-slot name=\"title\">\n        <span>@lang('card.title')</span>\n    </x-slot>\n    --}}\n\n    <div class=\"flex flex-wrap\">\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.tomselect\n                name=\"record_id\"\n                label=\"{{ __('crud.subrecords.inputs.record_id') }}\"\n                required\n            >\n                @php $selected = old('record_id', ($editing ? $subrecord->record_id : '')) @endphp\n                <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Record</option>\n                @foreach($records as $value => $label)\n                <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n                @endforeach\n            </x-inputs.tomselect>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.datetime\n                name=\"datetime\"\n                label=\"Datetime\"\n                value=\"{{ old('datetime', ($editing ? optional($subrecord->datetime)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            ></x-inputs.datetime>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.date\n                name=\"date\"\n                label=\"{{ __('crud.subrecords.inputs.date') }}\"\n                value=\"{{ old('date', ($editing ? optional($subrecord->date)->format('Y-m-d') : '')) }}\"\n            ></x-inputs.date>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"time\"\n                label=\"{{ __('crud.subrecords.inputs.time') }}\"\n                :value=\"old('time', ($editing ? $subrecord->time : ''))\"\n                maxlength=\"255\"\n                placeholder=\"{{ __('crud.subrecords.inputs.time') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"n_p_w_p\"\n                label=\"{{ __('crud.subrecords.inputs.n_p_w_p') }}\"\n                :value=\"old('n_p_w_p', ($editing ? $subrecord->n_p_w_p : ''))\"\n                placeholder=\"{{ __('crud.subrecords.inputs.n_p_w_p') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"markdown_text\"\n                label=\"{{ __('crud.subrecords.inputs.markdown_text') }}\"\n            >\n                {{ old('markdown_text', ($editing ? $subrecord->markdown_text :\n                '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.textarea\n                name=\"w_y_s_i_w_y_g\"\n                label=\"{{ __('crud.subrecords.inputs.w_y_s_i_w_y_g') }}\"\n            >\n                {{ old('w_y_s_i_w_y_g', ($editing ? $subrecord->w_y_s_i_w_y_g :\n                '')) }}\n            </x-inputs.textarea>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.partials.label\n                name=\"file\"\n                label=\"{{ __('crud.subrecords.inputs.file') }}\"\n            ></x-inputs.partials.label>\n            <br />\n\n            <input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n            />\n\n            @if($editing && $subrecord->file)\n            <div class=\"mt-2\">\n                <a href=\"{{ \\Storage::url($subrecord->file) }}\" target=\"_blank\">\n                    <i class=\"icon ion-md-download\"></i>\n                    Download\n                </a>\n            </div>\n            @endif @error('file') @include('components.inputs.partials.error')\n            @enderror\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <div\n                x-data=\"imageViewer('{{ $editing && $subrecord->image ? \\Storage::url($subrecord->image) : '' }}')\"\n            >\n                <x-inputs.partials.label\n                    name=\"image\"\n                    label=\"{{ __('crud.subrecords.inputs.image') }}\"\n                ></x-inputs.partials.label>\n                <br />\n\n                <!-- Show the image -->\n                <template x-if=\"imageUrl\">\n                    <img\n                        :src=\"imageUrl\"\n                        class=\"object-cover rounded border border-gray-200\"\n                        style=\"width: 100px; height: 100px;\"\n                    />\n                </template>\n\n                <!-- Show the gray box when image is not available -->\n                <template x-if=\"!imageUrl\">\n                    <div\n                        class=\"border rounded border-gray-200 bg-gray-100\"\n                        style=\"width: 100px; height: 100px;\"\n                    ></div>\n                </template>\n\n                <div class=\"mt-2\">\n                    <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"image\"\n                        @change=\"fileChosen\"\n                    />\n                </div>\n\n                @error('image') @include('components.inputs.partials.error')\n                @enderror\n            </div>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.text\n                name=\"i_p_address\"\n                label=\"{{ __('crud.subrecords.inputs.i_p_address') }}\"\n                :value=\"old('i_p_address', ($editing ? $subrecord->i_p_address : ''))\"\n                placeholder=\"{{ __('crud.subrecords.inputs.i_p_address') }}\"\n            ></x-inputs.text>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.number\n                name=\"latitude\"\n                label=\"{{ __('crud.subrecords.inputs.latitude') }}\"\n                :value=\"old('latitude', ($editing ? $subrecord->latitude : ''))\"\n                max=\"255\"\n                step=\"0.01\"\n                placeholder=\"{{ __('crud.subrecords.inputs.latitude') }}\"\n            ></x-inputs.number>\n        </x-inputs.group>\n\n        <x-inputs.group class=\"w-full\">\n            <x-inputs.number\n                name=\"longitude\"\n                label=\"{{ __('crud.subrecords.inputs.longitude') }}\"\n                :value=\"old('longitude', ($editing ? $subrecord->longitude : ''))\"\n                max=\"255\"\n                step=\"0.01\"\n                placeholder=\"{{ __('crud.subrecords.inputs.longitude') }}\"\n            ></x-inputs.number>\n        </x-inputs.group>\n    </div>\n</x-partials.card>\n",
                        "module": "crud:196",
                        "path": "\\resources\\views\\app\\subrecords\\form-inputs.blade.php"
                    },
                    "\\resources\\views\\app\\subrecords\\show.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\n            </a>\n            @lang('crud.subrecords.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                {{--\n                <x-slot name=\"title\">\n                    <span>@lang('card.title')</span>\n                </x-slot>\n                --}}\n\n                <div class=\"flex flex-wrap mt-2 px-4\">\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.record_id')\n                        </h5>\n                        <span>\n                            {{ optional($subrecord->record)->string ?? '-' }}\n                        </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.datetime')\n                        </h5>\n                        <span> {{ $subrecord->datetime ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.date')\n                        </h5>\n                        <span> {{ $subrecord->date ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.time')\n                        </h5>\n                        <span> {{ $subrecord->time ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.n_p_w_p')\n                        </h5>\n                        <span> {{ $subrecord->n_p_w_p ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.markdown_text')\n                        </h5>\n                        <span> {{ $subrecord->markdown_text ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.w_y_s_i_w_y_g')\n                        </h5>\n                        <span> {{ $subrecord->w_y_s_i_w_y_g ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.file')\n                        </h5>\n                        @if($subrecord->file)\n                        <a\n                            href=\"{{ \\Storage::url($subrecord->file) }}\"\n                            target=\"blank\"\n                        >\n                            <i class=\"mr-1 icon ion-md-download\"></i>\n                            Download\n                        </a>\n                        @else - @endif\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $subrecord->image ? \\Storage::url($subrecord->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.i_p_address')\n                        </h5>\n                        <span> {{ $subrecord->i_p_address ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.latitude')\n                        </h5>\n                        <span> {{ $subrecord->latitude ?? '-' }} </span>\n                    </div>\n                    <div class=\"mb-4 w-full\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.subrecords.inputs.longitude')\n                        </h5>\n                        <span> {{ $subrecord->longitude ?? '-' }} </span>\n                    </div>\n                </div>\n            </x-partials.card>\n\n            <x-partials.card class=\"mt-5\">\n                <x-slot name=\"title\">\n                    <span>@lang('text.actions')</span>\n                </x-slot>\n                <div class=\"mt-4 px-4\">\n                    <a href=\"{{ route('subrecords.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('update', $subrecord)\n                    <a\n                        href=\"{{ route('subrecords.edit', $subrecord) }}\"\n                        class=\"button\"\n                    >\n                        <i class=\"mr-1 icon ion-md-create\"></i>\n                        @lang('crud.common.edit')\n                    </a>\n                    @endcan @can('delete', $subrecord)\n                    <div class=\"float-right\">\n                        <form\n                            action=\"{{ route('subrecords.destroy', $subrecord) }}\"\n                            method=\"POST\"\n                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                        >\n                            @csrf @method('DELETE')\n                            <button type=\"submit\" class=\"button\">\n                                <i class=\"mr-1 icon ion-md-trash text-red-600\">\n                                </i>\n                                <span class=\"text-red-600\">\n                                    @lang('crud.common.delete')\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:196",
                        "path": "\\resources\\views\\app\\subrecords\\show.blade.php"
                    },
                    "\\resources\\views\\app\\subrecords\\index.blade.php": {
                        "deleteOnGeneration": true,
                        "content": "<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.subrecords.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Subrecord::class)\n                            <a\n                                href=\"{{ route('subrecords.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.record_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.datetime')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.date')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.time')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.n_p_w_p')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.markdown_text')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.w_y_s_i_w_y_g')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.file')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.subrecords.inputs.i_p_address')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.subrecords.inputs.latitude')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.subrecords.inputs.longitude')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($subrecords as $subrecord)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($subrecord->record)->string ??\n                                    '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->datetime ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->date ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->time ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->n_p_w_p ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->markdown_text ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->w_y_s_i_w_y_g ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    @if($subrecord->file)\n                                    <a\n                                        href=\"{{ \\Storage::url($subrecord->file) }}\"\n                                        target=\"blank\"\n                                        ><i\n                                            class=\"mr-1 icon ion-md-download\"\n                                        ></i\n                                        >&nbsp;Download</a\n                                    >\n                                    @else - @endif\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $subrecord->image ? \\Storage::url($subrecord->image) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $subrecord->i_p_address ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $subrecord->latitude ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $subrecord->longitude ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $subrecord)\n                                        <a\n                                            href=\"{{ route('subrecords.edit', $subrecord) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $subrecord)\n                                        <a\n                                            href=\"{{ route('subrecords.show', $subrecord) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"13\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"13\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $subrecords->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n",
                        "module": "crud:196",
                        "path": "\\resources\\views\\app\\subrecords\\index.blade.php"
                    }
                },
                "skippedFiles": {},
                "removedModules": [],
                "migrationsDate": "2024_05_01",
                "lastForeignAlias": 0,
                "cascadeDeleteAsDefault": true,
                "cascadeUpdateAsDefault": true,
                "hasFixedForeignCallbacks": true,
                "hasFixedMigrations": true,
                "hasFixedHasManyDetailOnPageFields": true,
                "hasFixedLongForeignIndexName": true,
                "hasFixedEntityMigrationsGeneration": true,
                "pluginsData": {},
                "templatesData": {
                    "ApiRoutes.vemtl": {
                        "path": "ApiRoutes.vemtl",
                        "content": "<?php\r\n\r\n<# CRUD controllers #>\r\n<% for(let crud of this.project.cruds) { %>\r\nuse <$ this.project.getApiControllersNamespace() $>\\<$ crud.model.getControllerName() $>;\r\n    <# Has Many Relationships controllers #>\r\n    <% for(let relationship of crud.model.getHasManyRelationships()) { %>\r\n        <% if(relationship.hasApi) { %>\r\n        use <$ this.project.getApiControllersNamespace() $>\\<$ relationship.getControllerName() $>;\r\n        <% } %>\r\n    <% } %>\r\n    <###>\r\n    <# Belong to Many Relationships controllers #>\r\n    <% for(let relationship of crud.model.getBelongsToManyRelationships()) { %>\r\n        <###>\r\n        <% if(relationship.hasApi) { %>\r\n        use <$ this.project.getApiControllersNamespace() $>\\<$ relationship.getControllerName() $>;\r\n        <% } %>\r\n    <% } %>\r\n<% } %>\r\n<# Authentication Controller #>\r\n<% if(this.generatorSettings.base.apiSanctumAuth) { %>\r\nuse <$ this.project.getApiControllersNamespace() $>\\AuthController;\r\n<% } %>\r\n<# Permissions module controllers #>\r\n<% if(this.generatorSettings.modules.permissions) { %>\r\nuse <$ this.project.getApiControllersNamespace() $>\\RoleController;\r\nuse <$ this.project.getApiControllersNamespace() $>\\PermissionController;\r\n<% } %>\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Support\\Facades\\Route;\r\n\r\n/*\r\n|--------------------------------------------------------------------------\r\n| API Routes\r\n|--------------------------------------------------------------------------\r\n|\r\n| Here is where you can register API routes for your application. These\r\n| routes are loaded by the RouteServiceProvider within a group which\r\n| is assigned the \"api\" middleware group. Enjoy building your API!\r\n|\r\n*/\r\n\r\n<% if(this.generatorSettings.base.apiSanctumAuth) { %>\r\n\r\n// status\r\nRoute::any('/', [AuthController::class, 'status'])\r\n    ->name('api.status');\r\n\r\n// login\r\nRoute::post('login', [AuthController::class, 'login'])\r\n    ->name('api.login');\r\n\r\n// registration\r\nRoute::post('registration', [AuthController::class, 'registration'])\r\n    ->name('api.registration');\r\n\r\n<% } %>\r\n\r\nRoute::name('api.')\r\n<% if(this.generatorSettings.base.apiSanctumAuth) { %>\r\n    ->middleware('auth:sanctum')\r\n<% } %>\r\n    ->group(function () {\r\n\r\n        // current user\r\n        Route::get('user', fn(Request $req) => $req->user())\r\n            ->name('user');\r\n\r\n        // logout\r\n        Route::post('logout', [AuthController::class, 'logout'])\r\n            ->name('logout');\r\n\r\n<# Generate permissions routes #>\r\n<% if(this.generatorSettings.modules.permissions) { %>\r\n    Route::apiResource('roles', RoleController::class);\r\n    Route::apiResource('permissions', PermissionController::class);\r\n<% } %>\r\n\r\n    Route::apiResource('users', UserController::class);\r\n\r\n<# Generate CRUD routes #>\r\n<% for(let crud of this.project.cruds) { %>\r\n    <% if(crud.hasApi) { %>\r\n        <% let controllerName = crud.model.getControllerName(); %>\r\n        <% if(this.project.settings.routesMode == 'resource') { %>\r\n        Route::apiResource('<$ crud.url $>', <$ controllerName $>::class);\r\n        <% } else { %>\r\n            <###>\r\n            <# Cruds routes api #>\r\n            <% for(let route of crud.getApiRoutes()) { %>\r\n            Route::<$ route.method $>('<$ route.endpoint $>', [<$ controllerName $>::class, '<$ route.getSuffix() $>'])\r\n                ->name('<$ crud.model.plural.case('paramCase') $>.<$ route.getSuffix() $>');\r\n            <% } %>\r\n        <% } %>\r\n        \r\n        <% for(let relationship of crud.model.getHasManyRelationships()) { %>\r\n            <# HasMany relationships api routes #>\r\n            <% if(relationship.hasApi) { %>\r\n            // <$ crud.model.name $> <$ relationship.name.case('capitalCase') $>\r\n                <% for(let route of relationship.getApiRoutes()) { %>\r\n                Route::<$ route.method $>('<$ route.endpoint $>', [<$ relationship.getControllerName() $>::class, '<$ route.getSuffix() $>'])->name('<$ crud.model.plural.case('paramCase') $>.<$ relationship.model.plural.case('paramCase') $>.<$ route.getSuffix() $>');\r\n                <% } %>\r\n\r\n            <% } %>\r\n        <% } %>\r\n        \r\n        <% for(let relationship of crud.model.getBelongsToManyRelationships()) { %>\r\n            <# BelongsToMany relationships api routes #>\r\n            <% if(relationship.hasApi) { %>\r\n            // <$ crud.model.name $> <$ relationship.name.case('capitalCase') $>\r\n                <% for(let route of relationship.getApiRoutes()) { %>\r\n                Route::<$ route.method $>('<$ route.endpoint $>', [<$ relationship.getControllerName() $>::class, '<$ route.getSuffix() $>'])->name('<$ crud.model.plural.case('paramCase') $>.<$ relationship.model.plural.case('paramCase') $>.<$ route.getSuffix() $>');\r\n                <% } %>\r\n\r\n            <% } %>\r\n        <% } %>\r\n\r\n    <% } %>\r\n<% } %> \r\n});",
                        "ignorePlugins": false
                    },
                    "ApiAuthController.vemtl": {
                        "path": "ApiAuthController.vemtl",
                        "content": "<?php\r\n\r\n<# TEMPLATE VARIABLES #>\r\n<% let modelVariableName = this.model.name.toLowerCase() %>\r\n<% let modelsNamespace = this.projectHelper.getModelsNamespace() %>\r\n<####>\r\nnamespace <$ this.projectHelper.getApiControllersNamespace() $>;\r\n\r\nuse App\\Actions\\Fortify\\CreateNewUser;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse <$ modelsNamespace $>\\<$ this.model.name $>;\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Http\\JsonResponse;\r\nuse Illuminate\\Support\\Facades\\Gate;\r\nuse Illuminate\\Validation\\ValidationException;\r\nuse Laravel\\Sanctum\\PersonalAccessToken;\r\n\r\nclass AuthController extends Controller\r\n{\r\n    public function login(Request $request): JsonResponse\r\n    {\r\n        $bearerToken = $request->bearerToken();\r\n        $token = PersonalAccessToken::findToken($bearerToken);\r\n        if ($token && !static::isTokenExpired($token->expires_at)) {\r\n            return response()->json([\r\n                'token' => $bearerToken,\r\n                'message' => \"Already logged in.\",\r\n            ]);\r\n        }\r\n\r\n        $credentials = $request->validate([\r\n            'email' => 'required|email',\r\n            'password' => 'required'\r\n        ]);\r\n\r\n        if (!auth()->attempt($credentials)) {\r\n            throw ValidationException::withMessages([\r\n                'email' => [trans('auth.failed')],\r\n            ]);\r\n        }\r\n\r\n        $<$ modelVariableName $> = <$ this.model.name $>::whereEmail($request->email)->firstOrFail();\r\n        \r\n        $token = $<$ modelVariableName $>->createToken('auth-token');\r\n\r\n        return response()->json([\r\n            'token' => $token->plainTextToken,\r\n        ]);\r\n    }\r\n\r\n    private static function isTokenExpired($expiresAt)\r\n    {\r\n        if (empty($expiresAt)) {\r\n            return false;\r\n        }\r\n\r\n        $now = new \\DateTime();\r\n        return $expiresAt <= $now;\r\n    }\r\n\r\n    public function status(Request $request)\r\n    {\r\n        $user = $request->user('sanctum');\r\n        $menus = [];\r\n        $links = [];\r\n\r\n        if (Gate::forUser($user)->allows('view-any', User::class)) {\r\n            $menus['users'] = [\r\n                \"label\" => \"Users\",\r\n                \"url\" => route('api.users.index'),\r\n            ];\r\n        }\r\n\r\n        if ($user) {\r\n            $links['profile'] = [\r\n                \"label\" => \"Profile\",\r\n                \"url\" => route('api.user'),\r\n            ];\r\n            $links['logout'] = [\r\n                \"label\" => \"Logout\",\r\n                \"url\" => route('api.logout'),\r\n            ];\r\n        } else {\r\n            $links['login'] = [\r\n                \"label\" => \"Login\",\r\n                \"url\" => route('api.login'),\r\n            ];\r\n        }\r\n\r\n        return [\r\n            'token' => $request->bearerToken(),\r\n            'message' => $user ? \"Authenticated.\" : \"Unauthenticated.\",\r\n            'user' => $user,\r\n            'menus' => $menus,\r\n            'links' => $links,\r\n        ];\r\n    }\r\n\r\n    public function registration(Request $request)\r\n    {\r\n        $bearerToken = $request->bearerToken();\r\n        $token = PersonalAccessToken::findToken($bearerToken);\r\n        if ($token && !static::isTokenExpired($token->expires_at)) {\r\n            return response()->json([\r\n                'token' => $bearerToken,\r\n                'message' => \"Registration only allowed for guest.\",\r\n            ]);\r\n        }\r\n\r\n        return (new CreateNewUser())->create($request->all());\r\n    }\r\n\r\n    public function logout(Request $request)\r\n    {\r\n        $bearerToken = $request->bearerToken();\r\n        $segments = explode('|', $bearerToken);\r\n        $success = $request\r\n            ->user()\r\n            ->tokens()\r\n            ->where('id', $segments[0] ?? 0)\r\n            ->delete();\r\n\r\n        return response()->json([\r\n            'message' => $success ? \"Logout success\" : \"Logout failed\",\r\n        ]);\r\n    }\r\n}\r\n",
                        "ignorePlugins": false
                    },
                    "ApiController.vemtl": {
                        "path": "ApiController.vemtl",
                        "content": "<?php\r\n<# TEMPLATE VARIABLES #>\r\n<% let modelName = this.crud.model.name %>\r\n<% let controllerName = this.crud.model.getControllerName() %>\r\n<% let modelsNamespace = this.projectHelper.getModelsNamespace() %>\r\n<% let modelPluralCamelCase = this.crud.model.plural.case('camelCase') %>\r\n<% let crudModelNameCamelCase = this.crud.model.name.case('camelCase') %>\r\n<% let hasSpecificRequests = this.controllerSettings.requests %>\r\n<####>\r\n\r\nnamespace <$ this.projectHelper.getApiControllersNamespace() $>;\r\n\r\nuse Illuminate\\Http\\Response;\r\nuse <$ modelsNamespace $>\\<$ modelName $>;\r\nuse App\\Http\\Resources\\<$ modelName $>Resource;\r\nuse App\\Http\\Resources\\<$ modelName $>Collection;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse Illuminate\\Http\\Request;\r\n<###>\r\n<% if(hasSpecificRequests) { %>\r\nuse <$ this.requestsNamespace $>\\<$ modelName $>StoreRequest;\r\nuse <$ this.requestsNamespace $>\\<$ modelName $>UpdateRequest;\r\n<% } %>\r\n<% if(this.crud.hasPasswordInputs()) { %>\r\nuse Illuminate\\Support\\Facades\\Hash;\r\n<% } %>\r\n<% if(this.crud.hasFileOrImageInputs()) { %>\r\nuse Illuminate\\Support\\Facades\\Storage;\r\n<% } %>\r\n<% if(this.crud.model.hasUniqueFields() && !hasSpecificRequests) { %>\r\nuse Illuminate\\Validation\\Rule;\r\n<% } %>\r\n\r\nclass <$ controllerName $> extends Controller\r\n{\r\n    public function index(Request $request): <$ modelName $>Collection\r\n    {\r\n        $this->authorize('view-any', <$ modelName $>::class);\r\n\r\n        $search = (string)$request->get('search', '');\r\n\r\n        $<$ this.crud.model.plural.case('camelCase') $> = <$ modelName $>::search($search)\r\n            ->latest(<% if(!this.crud.model.hasTimestampFields()) { %>'<$ this.crud.model.getPkName() $>'<% } %>)\r\n            ->paginate();\r\n\r\n        return new <$ modelName $>Collection($<$ modelPluralCamelCase $>);\r\n    }\r\n\r\n    <% let storeRequestName = hasSpecificRequests ? modelName + 'StoreRequest' : 'Request' %>\r\n    public function store(\r\n        <$ storeRequestName $> $request\r\n    ): <$ modelName $>Resource\r\n    {\r\n        $this->authorize('create', <$ modelName $>::class);\r\n\r\n        <% if(hasSpecificRequests) { %>\r\n        $validated = $request->validated();\r\n        <% } else { %>\r\n        $validated = $request->validate([\r\n            <% for (let input of this.crud.inputs) { %>\r\n                <# Inputs store validations #>\r\n                <% if(input.hasValidation()) { %>\r\n                '<$ input.name $>' => <$ input.getValidationForTemplate() $>,\r\n                <% } %>\r\n            <% } %>\r\n        ]);\r\n        <% } %>\r\n        <###>\r\n        <% if(this.crud.hasPasswordInputs()) { %>\r\n\r\n            <% for(let input of this.crud.getPasswordInputs()) { %>\r\n            <# Determines if input is required #>\r\n                <% if(!input.isRequiredOnCreate()) { %>\r\n                if(!empty($validated['<$ input.name $>'])) {\r\n                <% } %>\r\n                $validated['<$ input.name $>'] = Hash::make($validated['<$ input.name $>']);\r\n                <###>\r\n                <% if(!input.isRequiredOnCreate()) { %>\r\n                }\r\n                <% } %>\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <###>\r\n        <% if(this.crud.hasFileOrImageInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.crud.getFileAndImageInputs()) { %>\r\n            if($request->hasFile('<$ input.name $>')) {\r\n                $validated['<$ input.name $>'] = $request->file('<$ input.name $>')->store('public');\r\n            }\r\n            \r\n            <% } %>\r\n        <% } %>\r\n        <###>\r\n        <% if(this.crud.hasJsonInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.crud.getJsonInputs()) { %>\r\n            $validated['<$ input.name $>'] = json_decode($validated['<$ input.name $>'], true);\r\n            \r\n            <% } %>\r\n        <% } %>\r\n\r\n        $<$ crudModelNameCamelCase $> = <$ modelName $>::create($validated);\r\n\r\n        <% if(this.generatorSettings.modules.permissions && this.crud.model.isAuthModel()) { %>\r\n        $<$ crudModelNameCamelCase $>->syncRoles($request->roles);\r\n        <% } %>\r\n\r\n        return new <$ modelName $>Resource($<$ crudModelNameCamelCase $>);\r\n    }\r\n\r\n    public function show(\r\n        Request $request, \r\n        <$ modelName $> $<$ crudModelNameCamelCase $>\r\n    ): <$ modelName $>Resource\r\n    {\r\n        $this->authorize('view', $<$ crudModelNameCamelCase $>);\r\n\r\n        return new <$ modelName $>Resource($<$ crudModelNameCamelCase $>);\r\n    }\r\n\r\n    <% let updateRequestName = hasSpecificRequests ? modelName + 'UpdateRequest' : 'Request' %>\r\n    public function update(\r\n        <$ updateRequestName $> $request, \r\n        <$ modelName $> $<$ crudModelNameCamelCase $>\r\n    ): <$ modelName $>Resource\r\n    {\r\n        $this->authorize('update', $<$ crudModelNameCamelCase $>);\r\n\r\n        <% if(hasSpecificRequests) { %>\r\n        $validated = $request->validated();\r\n        <% } else { %>\r\n        $validated = $request->validate([\r\n            <% for (let input of this.crud.inputs) { %>\r\n                <# Inputs update validations #>\r\n                <% if(input.hasUpdateValidation()) { %>\r\n                '<$ input.name $>' => <$ input.getUpdateValidationWithUniqueRules() $>,\r\n                <% } %>\r\n            <% } %>\r\n        ]);\r\n        <% } %>\r\n\r\n        <% if(this.crud.hasPasswordInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.crud.getPasswordInputs()) { %>\r\n            if(empty($validated['<$ input.name $>'])) {\r\n                unset($validated['<$ input.name $>']);\r\n            } else {\r\n                $validated['<$ input.name $>'] = Hash::make($validated['<$ input.name $>']);\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <###>\r\n        <% if(this.crud.hasFileOrImageInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.crud.getFileAndImageInputs()) { %>\r\n            if($request->hasFile('<$ input.name $>')) {\r\n                if($<$ crudModelNameCamelCase $>-><$ input.name $>) {\r\n                    Storage::delete($<$ crudModelNameCamelCase $>-><$ input.name $>);\r\n                }\r\n\r\n                $validated['<$ input.name $>'] = $request->file('<$ input.name $>')->store('public');\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <###>\r\n        <% if(this.crud.hasJsonInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.crud.getJsonInputs()) { %>\r\n            $validated['<$ input.name $>'] = json_decode($validated['<$ input.name $>'], true);\r\n            \r\n            <% } %>\r\n        <% } %>\r\n\r\n        $<$ crudModelNameCamelCase $>->update($validated);\r\n\r\n        <% if(this.generatorSettings.modules.permissions && this.crud.model.isAuthModel()) { %>\r\n        $<$ crudModelNameCamelCase $>->syncRoles($request->roles);\r\n        <% } %>\r\n\r\n        return new <$ modelName $>Resource($<$ crudModelNameCamelCase $>);\r\n    }\r\n\r\n    public function destroy(\r\n        Request $request, \r\n        <$ modelName $> $<$ crudModelNameCamelCase $>\r\n    ): Response\r\n    {\r\n        $this->authorize('delete', $<$ crudModelNameCamelCase $>);\r\n\r\n        <% if(this.crud.hasFileOrImageInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.crud.getFileAndImageInputs()) { %>\r\n            if($<$ crudModelNameCamelCase $>-><$ input.name $>) {\r\n                Storage::delete($<$ crudModelNameCamelCase $>-><$ input.name $>);\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n        $<$ crudModelNameCamelCase $>->delete();\r\n\r\n        return response()->noContent();\r\n    }\r\n}\r\n",
                        "ignorePlugins": false
                    },
                    "Controller.vemtl": {
                        "path": "Controller.vemtl",
                        "content": "<?php\r\n<# TEMPLATE VARIABLES #>\r\n<% let valuesForCompact = [] %>\r\n<% let createValuesForCompact = [] %>\r\n<% let editValuesForCompact = [] %>\r\n<% let viewsPrefix = this.crud.getViewsPrefix() %>\r\n<% let routesPrefix = this.crud.getRoutesPrefix() %>\r\n<% let modelNameCamelCase = this.model.name.case('camelCase') %>\r\n<% let modelsNamespace = this.projectHelper.getModelsNamespace() %>\r\n<% let hasSpecificRequests = !! this.controllerSettings.requests %>\r\n<% let modelPluralCamelCase = this.model.plural.case('camelCase') %>\r\n<% let requestsNamespace = this.projectHelper.getRequestsNamespace() %>\r\n<% let hasPermissions = this.generatorSettings.modules.permissions && this.model.isAuthModel() %>\r\n<####>\r\n\r\nnamespace <$ this.projectHelper.getControllersNamespace() $>;\r\n\r\nuse <$ modelsNamespace $>\\<$ this.model.name $>;\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\View\\View;\r\n<% if(hasSpecificRequests) { %>\r\nuse <$ requestsNamespace $>\\<$ this.model.name $>StoreRequest;\r\nuse <$ requestsNamespace $>\\<$ this.model.name $>UpdateRequest;\r\n<% } %>\r\n<% if(this.crud.hasPasswordInputs()) { %>\r\nuse Illuminate\\Support\\Facades\\Hash;\r\n<% } %>\r\nuse Illuminate\\Http\\RedirectResponse;\r\n<% if(this.crud.hasFileOrImageInputs()) { %>\r\nuse Illuminate\\Support\\Facades\\Storage;\r\n<% } %>\r\n<# --- #>\r\n<# Importing models from BelongsTo relationships #>\r\n<% if(this.crud.hasBelongsToInputs()) { %>\r\n    <% for(let input of this.crud.getBelongsToInputs()) { %>\r\n        <% valuesForCompact.push(input.getRelationshipCollectionName()) %>\r\n        <% let relModel = input.relationship.model %>\r\n            <% if(!this.model.is(relModel)) { %>\r\n            use <$ modelsNamespace $>\\<$ relModel.name $>;\r\n            <% } %>\r\n    <% } %>\r\n<% } %>\r\n<# --- #>\r\n<# Adding permissions classes #>\r\n<% if(hasPermissions) { %>\r\n<% valuesForCompact.push('roles') %>\r\nuse Spatie\\Permission\\Models\\Role;\r\n<% } %>\r\n<# --- #>\r\n<# Checking if it needs custom validation rules #>\r\n<% if(this.model.hasUniqueFields() && !hasSpecificRequests) { %>\r\nuse Illuminate\\Validation\\Rule;\r\n<% } %>\r\n<# --- #>\r\n<# Import models from BelongsToMany checkbox groups #>\r\n<% if(this.crud.hasBelongsToManyCheckboxGroups()) { %>\r\n    <% for(let component of this.crud.getBelongsToManyCheckboxGroups()) { %>\r\n        <% if(component.onCreate || component.onEdit) { %>\r\n            use <$ modelsNamespace $>\\<$ component.relationship.model.name $>;\r\n        <% } %>\r\n    <% } %>\r\n<% } %>\r\n\r\nclass <$ this.crud.getControllerName() $> extends Controller\r\n{\r\n    /**\r\n     * Display a listing of the resource.\r\n     */\r\n    public function index(Request $request): View\r\n    {\r\n        $this->authorize('view-any', <$ this.model.name $>::class);\r\n\r\n        $search = (string)$request->get('search', '');\r\n\r\n        $<$ modelPluralCamelCase $> = <$ this.model.name $>::search($search)\r\n            ->latest(<% if(!this.model.hasTimestampFields()) { %>'<$ this.model.getPkName() $>'<% } %>)\r\n            ->paginate(10)\r\n            ->withQueryString();\r\n\r\n        return view('<$ viewsPrefix $>.index', compact('<$ modelPluralCamelCase $>', 'search'));\r\n    }\r\n\r\n    /**\r\n     * Show the form for creating a new resource.\r\n     */\r\n    public function create(Request $request): View\r\n    {\r\n        $this->authorize('create', <$ this.model.name $>::class);\r\n\r\n        <% if(this.crud.hasBelongsToInputs()) { %>\r\n            <% for(let input of this.crud.getBelongsToInputsGroupedByCollection()) { %>\r\n                <% let relModel = input.relationship.model %>\r\n                <% let collectionName = input.getRelationshipCollectionName() %>\r\n                $<$ collectionName $> = <$ relModel.name $>::pluck('<$ relModel.getLabelFieldName() $>', '<$ relModel.getPkName() $>');\r\n            <% } %>\r\n\r\n        <% } %>\r\n\r\n        <% if(hasPermissions) { %>\r\n        $roles = Role::get();\r\n        <% } %>\r\n        <# --- #>\r\n        <% if(this.crud.hasBelongsToManyCheckboxGroups()) { %>\r\n            <% for(let component of this.crud.getBelongsToManyCheckboxGroupsForCreateForm()) { %>\r\n                <###>\r\n                <% let relationshipModelPluralCamelCase = component.relationship.model.plural.case('camelCase') %>\r\n                <% createValuesForCompact.push(relationshipModelPluralCamelCase) %>\r\n                <###>\r\n                $<$ relationshipModelPluralCamelCase $> = <$ component.relationship.model.name $>::get();\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <% let hasCreateValuesForCompact = valuesForCompact.length || createValuesForCompact.length %>\r\n\r\n        return view('<$ viewsPrefix $>.create'\r\n        <% if(hasCreateValuesForCompact) { %>\r\n        , compact('<$ [].concat(valuesForCompact, createValuesForCompact).join(\"', '\") $>')\r\n        <% } %>);\r\n    }\r\n\r\n    /**\r\n     * Store a newly created resource in storage.\r\n     */\r\n    <% let storeRequestName = hasSpecificRequests ? this.model.name + 'StoreRequest' : 'Request' %>\r\n    public function store(\r\n        <$ storeRequestName $> $request\r\n    ): RedirectResponse\r\n    {\r\n        $this->authorize('create', <$ this.model.name $>::class);\r\n\r\n        <% if(hasSpecificRequests) { %>\r\n        $validated = $request->validated();\r\n        <% } else { %>\r\n        $validated = $request->validate([\r\n            <% for (let input of this.crud.inputs) { %>\r\n                <% if(input.hasValidation()) { %>\r\n                '<$ input.name $>' => <$ input.getValidationForTemplate() $>,\r\n                <% } %>\r\n            <% } %>\r\n            <###>\r\n            <% for(let component of this.crud.getBelongsToManyCheckboxGroupsForCreateForm()) { %>\r\n                <% let relationshipModelPluralCamelCase = component.relationship.model.plural.case('camelCase') %>\r\n                <###>\r\n                '<$ relationshipModelPluralCamelCase $>' => ['array'],\r\n            <% } %>\r\n        ]);\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD password inputs #>\r\n        <% if(this.crud.hasPasswordInputs()) { %>\r\n\r\n            <% for(let input of this.crud.getPasswordInputs()) { %>\r\n                <% if(!input.isRequiredOnCreate()) { %>\r\n                if(!empty($validated['<$ input.name $>'])) {\r\n                <% } %>\r\n                $validated['<$ input.name $>'] = Hash::make($validated['<$ input.name $>']);\r\n                <% if(!input.isRequiredOnCreate()) { %>\r\n        }\r\n                <% } %>\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD file inputs #>\r\n        <% if(this.crud.hasFileOrImageInputs()) { %>\r\n            <% for(let input of this.crud.getFileAndImageInputs()) { %>\r\n            if($request->hasFile('<$ input.name $>')) {\r\n                $validated['<$ input.name $>'] = $request->file('<$ input.name $>')->store('public');\r\n            }\r\n        \r\n            <% } %>\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD json inputs #>\r\n        <% if(this.crud.hasJsonInputs()) { %>\r\n            <% for(let input of this.crud.getJsonInputs()) { %>\r\n            $validated['<$ input.name $>'] = json_decode($validated['<$ input.name $>'], true);\r\n            \r\n            <% } %>\r\n        <% } %>\r\n\r\n        $<$ modelNameCamelCase $> = <$ this.model.name $>::create($validated);\r\n\r\n        <# Checking for CRUD BelongsToMany relationships #>\r\n        <% if(this.crud.hasBelongsToManyCheckboxGroups()) { %>\r\n            <% for(let component of this.crud.getBelongsToManyCheckboxGroupsForCreateForm()) { %>\r\n                <###>\r\n                <% let relationshipModelPluralCamelCase = component.relationship.model.plural.case('camelCase') %>\r\n                <###>\r\n                $<$ modelNameCamelCase $>-><$ relationshipModelPluralCamelCase $>()->attach($request-><$ relationshipModelPluralCamelCase $>);\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <% if(hasPermissions) { %>\r\n        $<$ modelNameCamelCase $>->syncRoles($request->roles);\r\n        <% } %>\r\n\r\n        return redirect()->route('<$ routesPrefix $>.show', $<$ modelNameCamelCase $>)->withSuccess(__('crud.common.created'));\r\n    }\r\n\r\n    /**\r\n     * Display the specified resource.\r\n     */\r\n    public function show(\r\n        Request $request, \r\n        <$ this.model.name $> $<$ modelNameCamelCase $>\r\n    ): View\r\n    {\r\n        $this->authorize('view', $<$ modelNameCamelCase $>);\r\n\r\n        return view('<$ viewsPrefix $>.show', compact('<$ modelNameCamelCase $>'));\r\n    }\r\n\r\n    /**\r\n     * Show the form for editing the specified resource.\r\n     */\r\n    public function edit(\r\n        Request $request, \r\n        <$ this.model.name $> $<$ modelNameCamelCase $>\r\n    ): View\r\n    {\r\n        $this->authorize('update', $<$ modelNameCamelCase $>);\r\n\r\n        <% if(this.crud.hasBelongsToInputs()) { %>\r\n            <% for(let input of this.crud.getBelongsToInputsGroupedByCollection()) { %>\r\n            <% let relModel = input.relationship.model %>\r\n            <% let collectionName = input.getRelationshipCollectionName() %>\r\n            $<$ collectionName $> = <$ relModel.name $>::pluck('<$ relModel.getLabelFieldName() $>', '<$ relModel.getPkName() $>');\r\n            <% } %>\r\n\r\n        <% } %>\r\n        <# --- #>\r\n        <% if(hasPermissions) { %>\r\n        $roles = Role::get();\r\n        <% } %>\r\n        <# --- #>\r\n        <# BelongsToMany checkbox groups #>\r\n        <% if(this.crud.hasBelongsToManyCheckboxGroups()) { %>\r\n            <% for(let component of this.crud.getBelongsToManyCheckboxGroupsForEditForm()) { %>\r\n                <###>\r\n                <% let relationshipModelPluralCamelCase = component.relationship.model.plural.case('camelCase') %>\r\n                <% editValuesForCompact.push(relationshipModelPluralCamelCase) %>\r\n                <###>\r\n                $<$ relationshipModelPluralCamelCase $> = <$ component.relationship.model.name $>::get();\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <% let hasEditValuesForCompact = valuesForCompact.length || editValuesForCompact.length %>\r\n\r\n        return view('<$ viewsPrefix $>.edit', compact('<$ modelNameCamelCase $>'<% if(hasEditValuesForCompact) { %>\r\n        , '<$ [].concat(valuesForCompact, editValuesForCompact).join(\"', '\") $>'\r\n        <% } %>));\r\n    }\r\n\r\n    /**\r\n     * Update the specified resource in storage.\r\n     */\r\n    <% let updateRequestName = hasSpecificRequests ? this.model.name + 'UpdateRequest' : 'Request' %>\r\n    public function update(\r\n        <$ updateRequestName $> $request, \r\n        <$ this.model.name $> $<$ modelNameCamelCase $>\r\n    ): RedirectResponse\r\n    {\r\n        $this->authorize('update', $<$ modelNameCamelCase $>);\r\n\r\n        <% if(hasSpecificRequests) { %>\r\n        $validated = $request->validated();\r\n        <% } else { %>\r\n        $validated = $request->validate([\r\n            <% for (let input of this.crud.inputs) { %>\r\n                <% if(input.hasUpdateValidation()) { %>\r\n                '<$ input.name $>' => <$ input.getUpdateValidationWithUniqueRules() $>,\r\n                <% } %>\r\n            <% } %>\r\n            <###>\r\n            <% for(let component of this.crud.getBelongsToManyCheckboxGroupsForEditForm()) { %>\r\n                <% let relationshipModelPluralCamelCase = component.relationship.model.plural.case('camelCase') %>\r\n                <###>\r\n                '<$ relationshipModelPluralCamelCase $>' => ['array'],\r\n            <% } %>\r\n        ]);\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD password inputs #>\r\n        <% if(this.crud.hasPasswordInputs()) { %>\r\n        \r\n            <% for(let input of this.crud.getPasswordInputs()) { %>\r\n            if(empty($validated['<$ input.name $>'])) {\r\n                unset($validated['<$ input.name $>']);\r\n            } else {\r\n                $validated['<$ input.name $>'] = Hash::make($validated['<$ input.name $>']);\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD file inputs #>\r\n        <% if(this.crud.hasFileOrImageInputs()) { %>\r\n            <% for(let input of this.crud.getFileAndImageInputs()) { %>\r\n            if($request->hasFile('<$ input.name $>')) {\r\n                if($<$ modelNameCamelCase $>-><$ input.name $>) {\r\n                    Storage::delete($<$ modelNameCamelCase $>-><$ input.name $>);\r\n                }\r\n\r\n                $validated['<$ input.name $>'] = $request->file('<$ input.name $>')->store('public');\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD json inputs #>\r\n        <% if(this.crud.hasJsonInputs()) { %>\r\n            <% for(let input of this.crud.getJsonInputs()) { %>\r\n            $validated['<$ input.name $>'] = json_decode($validated['<$ input.name $>'], true);\r\n            \r\n            <% } %>\r\n        <% } %>\r\n        <# --- #>\r\n        <# Checking for CRUD BelongsToMany relationships #>\r\n        <% if(this.crud.hasBelongsToManyCheckboxGroups()) { %>\r\n            <% for(let component of this.crud.getBelongsToManyCheckboxGroupsForEditForm()) { %>\r\n                <###>\r\n                <% let relationshipModelPluralCamelCase = component.relationship.model.plural.case('camelCase') %>\r\n                <###>\r\n                $<$ modelNameCamelCase $>-><$ relationshipModelPluralCamelCase $>()->sync($request-><$ relationshipModelPluralCamelCase $>);\r\n            <% } %>\r\n        <% } %>\r\n\r\n        $<$ modelNameCamelCase $>->update($validated);\r\n\r\n        <% if(hasPermissions) { %>\r\n        $<$ modelNameCamelCase $>->syncRoles($request->roles);\r\n        <% } %>\r\n\r\n        return redirect()->route('<$ routesPrefix $>.show', $<$ modelNameCamelCase $>)->withSuccess(__('crud.common.saved'));\r\n    }\r\n\r\n    /**\r\n     * Remove the specified resource from storage.\r\n     */\r\n    public function destroy(\r\n        Request $request, \r\n        <$ this.model.name $> $<$ modelNameCamelCase $>\r\n    ): RedirectResponse\r\n    {\r\n        $this->authorize('delete', $<$ modelNameCamelCase $>);\r\n\r\n        <% if(this.crud.hasFileOrImageInputs()) { %>\r\n            <% for(let input of this.crud.getFileAndImageInputs()) { %>\r\n            if($<$ modelNameCamelCase $>-><$ input.name $>) {\r\n                Storage::delete($<$ modelNameCamelCase $>-><$ input.name $>);\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n        $<$ modelNameCamelCase $>->delete();\r\n\r\n        return redirect()->route('<$ routesPrefix $>.index')->withSuccess(__('crud.common.removed'));\r\n    }\r\n}\r\n",
                        "ignorePlugins": false
                    },
                    "ApiHasManyController.vemtl": {
                        "path": "ApiHasManyController.vemtl",
                        "content": "<?php\r\n<# TEMPLATE VARIABLES #>\r\n<% let modelName = this.crud.model.name %>\r\n<% let modelNameCamelCase = modelName.case('camelCase') %>\r\n<% let controllerName = this.relationship.getControllerName() %>\r\n<% let modelsNamespace = this.projectHelper.getModelsNamespace() %>\r\n<####>\r\n\r\nnamespace <$ this.projectHelper.getApiControllersNamespace() $>;\r\n\r\nuse <$ modelsNamespace $>\\<$ modelName $>;\r\nuse App\\Http\\Resources\\<$ this.relationship.model.name $>Resource;\r\nuse App\\Http\\Resources\\<$ this.relationship.model.name $>Collection;\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Http\\Controllers\\Controller;\r\n<% if(this.relationshipCrud.hasPasswordInputs()) { %>\r\nuse Illuminate\\Support\\Facades\\Hash;\r\n<% } %>\r\n\r\nclass <$ controllerName $> extends Controller\r\n{\r\n    public function index(Request $request, <$ modelName $> $<$ modelNameCamelCase $>): <$ this.relationship.model.name $>Collection\r\n    {\r\n        $this->authorize('view', $<$ modelNameCamelCase $>);\r\n\r\n        $search = (string)$request->get('search', '');\r\n\r\n        $<$ this.relationship.model.plural.case('camelCase') $> = $<$ modelNameCamelCase $>-><$ this.relationship.name $>()->search($search)\r\n            ->latest()\r\n            ->paginate(10);\r\n\r\n        return new <$ this.relationship.model.name $>Collection($<$ this.relationship.model.plural.case('camelCase') $>);\r\n    }\r\n\r\n    public function store(Request $request, <$ modelName $> $<$ modelNameCamelCase $>): <$ this.relationship.model.name $>Resource\r\n    {\r\n        $this->authorize('create', <$ this.relationship.model.name $>::class);\r\n\r\n        $validated = $request->validate([\r\n            <% for (let input of this.relationshipCrud.inputs) { %>\r\n                <# Inputs store validation #>\r\n                <% if(input.hasValidation() && !input.isRelatedToModel(this.crud.model)) { %>\r\n                '<$ input.name $>' => <$ input.getValidationForTemplate() $>,\r\n                <% } %>\r\n            <% } %>\r\n        ]);\r\n        \r\n        <% if(this.relationshipCrud.hasPasswordInputs()) { %>\r\n\r\n            <% for(let input of this.relationshipCrud.getPasswordInputs()) { %>\r\n                <###>\r\n                <% if(!input.isRequiredOnCreate()) { %>\r\n                if(!empty($validated['<$ input.name $>'])) {\r\n                <% } %>\r\n                $validated['<$ input.name $>'] = Hash::make($validated['<$ input.name $>']);\r\n                <% if(!input.isRequiredOnCreate()) { %>\r\n                }\r\n                <% } %>\r\n\r\n            <% } %>\r\n        <% } %>\r\n        <% if(this.relationshipCrud.hasFileOrImageInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relationshipCrud.getFileAndImageInputs()) { %>\r\n            if($request->hasFile('<$ input.name $>')) {\r\n                $validated['<$ input.name $>'] = $request->file('<$ input.name $>')->store('public');\r\n            }\r\n            \r\n            <% } %>\r\n        <% } %>\r\n\r\n        $<$ this.relationship.model.name.case('camelCase') $> = $<$ modelNameCamelCase $>-><$ this.relationship.name $>()->create($validated);\r\n\r\n        <% if(this.generatorSettings.modules.permissions && this.relationship.model.isAuthModel()) { %>\r\n        $<$ this.relationship.model.name.case('camelCase') $>->syncRoles($request->roles);\r\n        <% } %>\r\n\r\n        return new <$ this.relationship.model.name $>Resource($<$ this.relationship.model.name.case('camelCase') $>);\r\n    }\r\n}\r\n",
                        "ignorePlugins": false
                    },
                    "Routes.vemtl": {
                        "path": "Routes.vemtl",
                        "content": "<?php\r\n\r\nuse Illuminate\\Support\\Facades\\Route;\r\n<% for(let crud of this.project.getMainCruds()) { %>\r\nuse <$ this.project.getControllersNamespace() $>\\<$ crud.model.getControllerName() $>;\r\n<% } %>\r\n<###>\r\n<% if(this.generatorSettings.modules.permissions) { %>\r\nuse <$ this.project.getControllersNamespace() $>\\RoleController;\r\nuse <$ this.project.getControllersNamespace() $>\\PermissionController;\r\n<% } %>\r\n<###>\r\n<% if(this.generatorSettings.modules.uiTemplate && this.project.usesBreezeTemplate()) { %>\r\nuse App\\Http\\Controllers\\ProfileController;\r\n<% } %>\r\nuse Illuminate\\Foundation\\Auth\\EmailVerificationRequest;\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Support\\Facades\\Route;\r\n\r\n/*\r\n|--------------------------------------------------------------------------\r\n| Web Routes\r\n|--------------------------------------------------------------------------\r\n|\r\n| Here is where you can register web routes for your application. These\r\n| routes are loaded by the RouteServiceProvider within a group which\r\n| contains the \"web\" middleware group. Now create something great!\r\n|\r\n*/\r\n\r\nRoute::get('/', function () {\r\n    return view('welcome');\r\n});\r\n\r\nRoute::get('/email/verify', function () {\r\n    return view('auth.verify-email');\r\n})\r\n    ->middleware('auth')\r\n    ->name('verification.notice');\r\n\r\nRoute::get('/email/verify/{id}/{hash}', function (\r\n    EmailVerificationRequest $request\r\n) {\r\n    $request->fulfill();\r\n    return redirect('/dashboard');\r\n})\r\n    ->middleware(['auth', 'signed'])\r\n    ->name('verification.verify');\r\n\r\nRoute::post('/email/verification-notification', function (Request $request) {\r\n    $request->user()->sendEmailVerificationNotification();\r\n\r\n    return back()->with('message', 'Verification link sent!');\r\n})\r\n    ->middleware(['auth', 'throttle:6,1'])\r\n    ->name('verification.send');\r\n\r\n<# Generate the specific routes when it uses LaravelUI templates #>\r\n<% if(this.generatorSettings.modules.uiTemplate && this.project.usesLaravelUiTemplate()) { %>\r\nAuth::routes();\r\n\r\nRoute::get('/home', [HomeController::class, 'index'])->name('home');\r\n<% } %>\r\n\r\n<# Generate the specific routes when it uses Jetstream templates #>\r\n<% if(this.generatorSettings.modules.uiTemplate && this.project.usesJetstreamTemplate()) { %>\r\nRoute::middleware(['auth:sanctum', 'verified'])->get('/dashboard', function () {\r\n    return view('dashboard');\r\n})->name('dashboard');\r\n<% } %>\r\n\r\n<# Generate the specific routes when it uses Breeze templates #>\r\n<% if(this.generatorSettings.modules.uiTemplate && this.project.usesBreezeTemplate()) { %>\r\nRoute::middleware(['auth'])->get('/dashboard', function () {\r\n    return view('dashboard');\r\n})->name('dashboard');\r\n\r\nrequire __DIR__ . '/auth.php';\r\n\r\nRoute::middleware('auth')->group(function () {\r\n    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');\r\n    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');\r\n    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');\r\n});\r\n<% } %>\r\n\r\nRoute::prefix('/')\r\n    <% if(this.project.usesJetstreamTemplate()) { %>\r\n    ->middleware(['auth:sanctum', 'verified'])\r\n    <% } else { %>\r\n    ->middleware('auth')\r\n    <% } %>\r\n    ->group(function () {\r\n    \r\n<% if(this.generatorSettings.modules.permissions) { %>\r\n    Route::resource('roles', RoleController::class);\r\n    Route::resource('permissions', PermissionController::class);\r\n<% } %>\r\n\r\n<# Generate CRUD routes #>\r\n<% for(let crud of this.project.getMainCruds()) { %>\r\n    <# VARIABLES #>\r\n    <% let controllerName = crud.model.getControllerName(); %>\r\n    <% let crudModelNameCamelCase = crud.model.name.case('camelCase') %>\r\n    <% let crudModelPluralParamCase = crud.model.plural.case('paramCase') %>\r\n    <###>\r\n    <% if(this.project.settings.routesMode == 'resource' && !crud.model.pluralAndSingularAreSame) { %>\r\n    Route::resource('<$ crud.url $>', <$ controllerName $>::class);\r\n    <% } else { %>\r\n    Route::get('<$ crud.url $>', [<$ controllerName $>::class, 'index'])->name('<$ crudModelPluralParamCase $>.index');\r\n    Route::post('<$ crud.url $>', [<$ controllerName $>::class, 'store'])->name('<$ crudModelPluralParamCase $>.store');\r\n    Route::get('<$ crud.url $>/create', [<$ controllerName $>::class, 'create'])->name('<$ crudModelPluralParamCase $>.create');\r\n    Route::get('<$ crud.url $>/{<$ crudModelNameCamelCase $>}', [<$ controllerName $>::class, 'show'])->name('<$ crudModelPluralParamCase $>.show');\r\n    Route::get('<$ crud.url $>/{<$ crudModelNameCamelCase $>}/edit', [<$ controllerName $>::class, 'edit'])->name('<$ crudModelPluralParamCase $>.edit');\r\n    Route::put('<$ crud.url $>/{<$ crudModelNameCamelCase $>}', [<$ controllerName $>::class, 'update'])->name('<$ crudModelPluralParamCase $>.update');\r\n    Route::delete('<$ crud.url $>/{<$ crudModelNameCamelCase $>}', [<$ controllerName $>::class, 'destroy'])->name('<$ crudModelPluralParamCase $>.destroy');\r\n    \r\n    <% } %>\r\n<% } %> \r\n});",
                        "ignorePlugins": false
                    },
                    "Model.vemtl": {
                        "path": "Model.vemtl",
                        "content": "<?php\r\n<# TEMPLATE VARIABLES #>\r\n<% let isAuthModel = this.model.isAuthModel() %>\r\n<% let modelNamePascalCase = this.model.name.case('pascalCase') %>\r\n<% let modelsNamespace = this.projectHelper.getModelsNamespace() %>\r\n<% let jetstreamEnabled = this.generatorSettings.modules.uiTemplate && this.project.settings.uiTemplate === 'jetstream' %>\r\n<####>\r\n\r\nnamespace <$ modelsNamespace $>;\r\n\r\n<% if(this.project.laravelVersion > 7) { %>\r\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\r\n<% } %>\r\n<# --- #>\r\n<# Add use statements if it is an auth model #>\r\n<% if(isAuthModel) { %>\r\nuse Illuminate\\Notifications\\Notifiable;\r\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\r\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\r\n<% if(this.generatorSettings.modules.permissions) { %>\r\nuse Spatie\\Permission\\Traits\\HasRoles;\r\n<% } %>\r\n<# --- #>\r\n<% if(this.generatorSettings.base.apiSanctumAuth) { %>\r\nuse Laravel\\Sanctum\\HasApiTokens;\r\n<% } %>\r\n<# --- #>\r\n<% if(jetstreamEnabled) { %>\r\nuse Laravel\\Sanctum\\HasApiTokens;\r\nuse Laravel\\Jetstream\\HasProfilePhoto;\r\nuse Laravel\\Fortify\\TwoFactorAuthenticatable;\r\n<% } %>\r\n<# --- #>\r\n<% } else { %>\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n<% } %>\r\n<% if(this.model.softDeletes) { %>\r\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\r\n<% } %>\r\nuse <$ modelsNamespace $>\\Scopes\\Searchable;\r\n<# --- #>\r\n<% if(this.model.hasUuidPrimaryKey()) { %>\r\n    <% let correctUuidNamespace = this.project.laravelVersion < 9 ? 'App\\\\Traits\\\\HasUUID' : 'Illuminate\\\\Database\\\\Eloquent\\\\Concerns\\\\HasUuids' %>\r\n    <###>\r\nuse <$ correctUuidNamespace $>;\r\n<% } %>\r\n<# --- #>\r\n\r\n<% if(isAuthModel) { %>\r\nclass <$ modelNamePascalCase $> extends Authenticatable implements MustVerifyEmail {\r\n<% } else { %>\r\nclass <$ modelNamePascalCase $> extends Model {\r\n<% } %>\r\n    <% if(isAuthModel) { %>\r\n    use Notifiable;\r\n    <% if(this.generatorSettings.modules.permissions) { %>\r\n    use HasRoles;\r\n    <% } %>\r\n    <% if(this.generatorSettings.base.apiSanctumAuth) { %>\r\n    use HasApiTokens;\r\n    <% } %>\r\n    <% if(jetstreamEnabled) { %>\r\n    use HasApiTokens;\r\n    use HasProfilePhoto;\r\n    use TwoFactorAuthenticatable;\r\n    <% } %>\r\n    <% } %>\r\n    <% if(this.model.softDeletes) { %>\r\n    use SoftDeletes;\r\n    <% } %>\r\n    <% if(this.model.hasUuidPrimaryKey()) { %>\r\n        <% let correctUuidTrait = this.project.laravelVersion < 9 ? 'HasUUID' : 'HasUuids' %>\r\n        <###>\r\n    use <$ correctUuidTrait $>;\r\n    <% } %>\r\n    <% if(this.project.laravelVersion > 7) { %>\r\n    use HasFactory;\r\n    <% } %>\r\n    use Searchable;\r\n    <% if(this.project.settings.massAssignment == 'guarded') { %>\r\n\r\n    protected $guarded = [\r\n        <# Model fields #>\r\n        <% for (let field of this.model.guardedFields()) { %>\r\n            <% if(!field.isPrimaryKey()) { %>\r\n            '<$ field.name $>',\r\n            <% } %>\r\n        <% } %>\r\n    ];\r\n    <% } else { %>\r\n    \r\n    protected $fillable = [\r\n        <# Model fields #>\r\n        <% for (let field of this.model.fillableFields()) { %>\r\n            <% if(!field.isPrimaryKey()) { %>\r\n            '<$ field.name $>',\r\n            <% } %>\r\n        <% } %>\r\n    ];\r\n    <% } %>\r\n\r\n    protected $searchableFields = ['*'];\r\n\r\n    <% if(!this.model.tableNameFollowsStandard()) { %>\r\n    protected $table = '<$ this.model.table $>';\r\n    <% } %>\r\n\r\n    <% if(!this.model.timestamps) { %>\r\n    public $timestamps = false;\r\n    <% } %>\r\n\r\n    <% if(this.model.hasHiddenFields()) { %>\r\n    protected $hidden = [\r\n        <# Model fields #>\r\n        <% for (let field of this.model.hiddenFields()) { %>\r\n        '<$ field.name $>',\r\n        <% } %>\r\n    ];\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% if(this.model.hasCastFields()) { %>\r\n    protected $casts = [\r\n        <# Model fields #>\r\n        <% for (let field of this.model.validFields()) { %>\r\n            <% if (field.type == \"boolean\") { %>\r\n            '<$ field.name $>' => 'boolean',\r\n            <% } else if (field.type == \"json\") { %>\r\n            '<$ field.name $>' => 'array',\r\n            <% } else if (field.type == \"date\") { %>\r\n            '<$ field.name $>' => 'date',\r\n            <% } else if (field.type == \"time\") { %>\r\n            '<$ field.name $>' => 'datetime:H:i:s',\r\n            <% } else if (field.isDateTime()) { %>\r\n            '<$ field.name $>' => 'datetime',\r\n            <% } %>\r\n        <% } %>\r\n    ];\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% if(this.model.basicRelationships.length) { %>\r\n        <# Relationships #>\r\n        <% for (let relationship of this.model.basicRelationships) { %>\r\n            <# Belongs To #>\r\n            <% if(relationship.type == \"belongsTo\") { %>\r\n            public function <$ relationship.name $>() \r\n            {\r\n                return $this->belongsTo(<$ relationship.model.name $>::class\r\n                <# Check if foreign key or parent key are different #>\r\n                <up if(relationship.hasDifferentForeignOrParentKey()) { up>\r\n                , '<$ relationship.foreignKey.name $>'\r\n                <up } up>\r\n                <# --- #>\r\n                <up if(relationship.hasDifferentParentKey()) { up>\r\n                , '<$ relationship.parentKey.name $>'\r\n                <up } up>);\r\n            }\r\n\r\n            <% } %>\r\n            <# Has Many #>\r\n            <% if(relationship.type == \"hasMany\") { %>\r\n            public function <$ relationship.name $>() \r\n            {\r\n                return $this->hasMany(<$ relationship.model.name $>::class\r\n                <# Check if foreign key or parent key are different #>\r\n                <up if(relationship.hasDifferentForeignOrParentKey()) { up>\r\n                , '<$ relationship.foreignKey.name $>'\r\n                <up } up>\r\n                <# --- #>\r\n                <up if(relationship.hasDifferentParentKey()) { up>\r\n                , '<$ relationship.parentKey.name $>'\r\n                <up } up>);\r\n            }\r\n\r\n            <% } %>\r\n            <# Has One #>\r\n            <% if(relationship.type == \"hasOne\") { %>\r\n            public function <$ relationship.name $>() \r\n            {\r\n                return $this->hasOne(<$ relationship.model.name $>::class\r\n                <# Check if foreign key or parent key are different #>\r\n                <up if(relationship.hasDifferentForeignOrParentKey()) { up>\r\n                , '<$ relationship.foreignKey.name $>'\r\n                <up } up>\r\n                <# --- #>\r\n                <up if(relationship.hasDifferentParentKey()) { up>\r\n                , '<$ relationship.parentKey.name $>'\r\n                <up } up>);\r\n            }\r\n\r\n            <% } %>\r\n\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% if(this.model.manyToManyRelationships.length) { %>\r\n        <# Relationships #>\r\n        <% for (let relationship of this.model.manyToManyRelationships) { %>\r\n            <# Belongs To Many #>\r\n            <% if(relationship.type == \"belongsToMany\") { %>\r\n            public function <$ relationship.name $>() \r\n            {\r\n                return $this->belongsToMany(<$ relationship.model.name $>::class\r\n                <# Needs to add the pivot table if localKey or foreignKey are not default #>\r\n                <up if(relationship.needsToAddPivotToModelTemplate()) { up>\r\n                , '<$ relationship.pivot.table $>'\r\n                <up } up>\r\n                <# --- #>\r\n                <up if(relationship.hasDifferentLocalOrRelatedModelKeys()) { up>\r\n                , '<$ relationship.localModelKey.name $>'\r\n                <up } up>\r\n                <# --- #>\r\n                <up if(relationship.hasDifferentModelKey()) { up>\r\n                , '<$ relationship.modelKey.name $>'\r\n                <up } up>);\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% if(this.model.morphRelationships.length) { %>\r\n        <# Morph Relationships #>\r\n        <% for (let relationship of this.model.morphRelationships) { %>\r\n        public function <$ relationship.name $>() \r\n        {\r\n            return $this-><$ relationship.type $>(<$ relationship.model.name $>::class, '<$ relationship.morphTo $>');\r\n        }\r\n\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% if(this.model.hasManyThroughRelationships.length) { %>\r\n        <# Has Many Through Relationships #>\r\n        <% for (let relationship of this.model.hasManyThroughRelationships) { %>\r\n        public function <$ relationship.name $>() \r\n        {\r\n            return $this-><$ relationship.type $>(<$ relationship.related.name $>::class, <$ relationship.through.name $>::class\r\n            <up if(relationship.hasDifferentRelatedModelKeyName()) { up>\r\n            , '<$ relationship.relatedModelKeyOriginalName $>'\r\n            <up } up>\r\n            <up if(relationship.hasDifferentThroughModelKeyName()) { up>\r\n            , '<$ relationship.throughModelKeyOriginalName $>'\r\n            <up } up>);\r\n        }\r\n\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% let basicInverseMorphs = this.model.getBasicMorphInverseRelationships() %>\r\n    <% if(basicInverseMorphs.length) { %>\r\n        <# Inverse Morph Relationships #>\r\n        <% for (let relationship of basicInverseMorphs) { %>\r\n        public function <$ relationship.morphTo $>() \r\n        {\r\n            return $this->morphTo();\r\n        }\r\n\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% let manytoManyInverseMorphs = this.model.getManyToManyMorphRelatedRelationships() %>\r\n    <% if(manytoManyInverseMorphs.length) { %>\r\n        <# Inverse Morph Relationships #>\r\n        <% for (let relationship of manytoManyInverseMorphs) { %>\r\n        <% let relLocalModel = relationship.localModel %>\r\n        public function <$ relLocalModel.plural.case('camelCase') $>() \r\n        {\r\n            return $this->morphedByMany(<$ relLocalModel.name $>::class, '<$ relationship.morphTo $>');\r\n        }\r\n\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n\r\n    <% if(isAuthModel) { %>\r\n        <% if(this.generatorSettings.modules.permissions) { %>\r\n        public function isSuperAdmin(): bool\r\n        {\r\n            return $this->hasRole('super-admin');\r\n        }\r\n        <% } else { %>\r\n        public function isSuperAdmin(): bool\r\n        {\r\n            return in_array($this->email, config('auth.super_admins'));\r\n        }\r\n        <% } %>\r\n    <% } else { this.removeLastLineBreak() } %>\r\n}",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Date.vemtl": {
                        "path": "views/inputs/blade/Date.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.date\r\n    <% if(this.crud.isForLivewire) { %>\r\n    name=\"<$ this.getLivewireSingleName() $>\"\r\n    <% } else { %>\r\n    name=\"<$ this.name $>\"\r\n    <% } %>\r\n    label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n    wire:model=\"<$ this.getLivewireSingleName() $>\"\r\n    <% } else { %>\r\n    value=\"{{ old('<$ this.name $>', ($editing ? optional($<$ this.crud.model.name.case('camelCase') $>-><$ this.name $>)->format('Y-m-d') : '<$ this.defaultValue $>')) }}\"\r\n    <% } %>\r\n    <$ this.min ? ` min=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` max=\"${this.max}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.date>\r\n    <% } else { %>\r\n    <x-inputs.date\r\n            name=\"<$ this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n            value=\"{{ old('<$ this.name $>', '<$ this.defaultValue $>') }}\"\r\n    <$ this.min ? ` min=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` max=\"${this.max}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.date>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Email.vemtl": {
                        "path": "views/inputs/blade/Email.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.email\r\n        name=\"<$ this.livewireInputReference || this.name $>\"\r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n    wire:model=\"<$ this.livewireInputReference $>\"\r\n    <% } else { %>\r\n    :value=\"old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>'))\"\r\n    <% } %>\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.email>\r\n    <% } else { %>\r\n    <x-inputs.email\r\n        name=\"<$ this.name $>\"\r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n        :value=\"old('<$ this.name $>', '<$ this.defaultValue $>')\"\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.email>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/File.vemtl": {
                        "path": "views/inputs/blade/File.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <x-inputs.partials.label\r\n        name=\"<$ this.crud.isForLivewire ? this.getLivewireSingleName() : this.name $>\"\r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    ></x-inputs.partials.label>\r\n    <br/>\r\n\r\n    <input\r\n        type=\"file\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n        name=\"<$ this.getLivewireSingleName() $>\"\r\n        id=\"<$ this.getLivewireSingleName() $>{{ $uploadIteration }}\"\r\n        wire:model=\"<$ this.getLivewireSingleName() $>\"\r\n    <% } else { %>\r\n        name=\"<$ this.name $>\"\r\n        id=\"<$ this.name $>\"\r\n    <% } %>\r\n        class=\"form-control-file\"\r\n    />\r\n\r\n    <% if(this.crud.isManyToManyDetail) { %>\r\n    @if($<$ this.getLivewireSingleName() $>)\r\n    <% } else { %>\r\n    @if($editing && $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $>)\r\n    <% } %>\r\n        <div class=\"mt-2\">\r\n            <% let imageReference = this.crud.isManyToManyDetail ? this.getLivewireSingleName() : `${this.crud.model.name.case('camelCase')}->${this.name}` %>\r\n            <a href=\"{{ \\Storage::url($<$ imageReference $>) }}\" target=\"_blank\">\r\n                <i class=\"icon ion-md-download\"></i>\r\n                Download\r\n            </a>\r\n        </div>\r\n    @endif\r\n\r\n    @error('<$ this.crud.isForLivewire ? this.getLivewireSingleName() : this.name $>')\r\n    @include('components.inputs.partials.error')\r\n    @enderror\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Number.vemtl": {
                        "path": "views/inputs/blade/Number.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.number\r\n            name=\"<$ this.livewireInputReference || this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n    wire:model=\"<$ this.livewireInputReference $>\"\r\n    <% } else { %>\r\n    :value=\"old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>'))\"\r\n    <% } %>\r\n    <$ this.min ? ` min=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` max=\"${this.max}\"` : '' $>\r\n    <$ this.step ? ` step=\"${this.step}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.number>\r\n    <% } else { %>\r\n    <x-inputs.number\r\n            name=\"<$ this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n            :value=\"old('<$ this.name $>', '<$ this.defaultValue $>')\"\r\n    <$ this.min ? ` min=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` max=\"${this.max}\"` : '' $>\r\n    <$ this.step ? ` step=\"${this.step}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.number>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Password.vemtl": {
                        "path": "views/inputs/blade/Password.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.password\r\n    <% if(this.crud.isForLivewire) { %>\r\n    name=\"<$ this.getLivewireSingleName() $>\"\r\n    <% } else { %>\r\n    name=\"<$ this.name $>\"\r\n    <% } %>\r\n    label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n    wire:model=\"<$ this.getLivewireSingleName() $>\"\r\n    <% } %>\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.password>\r\n    <% } else { %>\r\n    <x-inputs.password\r\n        name=\"<$ this.name $>\"\r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.password>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Select.vemtl": {
                        "path": "views/inputs/blade/Select.vemtl",
                        "content": "<% let isForLivewire = this.crud.isForLivewire %>\r\n\r\n<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.select\r\n        name=\"<$ this.livewireInputReference || this.name $>\"\r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(isForLivewire) { %>\r\n    wire:model=\"<$ this.livewireInputReference $>\"\r\n    <% } %>\r\n    >\r\n    <% if(!isForLivewire) { %>\r\n    @php $selected = old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>')) @endphp\r\n    <% } %>\r\n\r\n    <% for(let item of this.items) { %>\r\n    <% let selectedCondition = this.crud.isManyToManyDetail ? '' : `{{ $selected == '${item.value}' ? 'selected' : '' }}`  %>\r\n    <option value=\"<$ item.value $>\" <$ selectedCondition $> ><$ item.label $></option>\r\n    <% } %>\r\n    </x-inputs.select>\r\n    <% } else { %>\r\n    <x-inputs.select name=\"<$ this.name $>\" label=\"<$ this.label $>\">\r\n        <% for(let item of this.items) { %>\r\n        <option value=\"<$ item.value $>\"><$ item.label $></option>\r\n        <% } %>\r\n    </x-inputs.select>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/SelectForRelationship.vemtl": {
                        "path": "views/inputs/blade/SelectForRelationship.vemtl",
                        "content": "<% let isForLivewire = this.crud.isForLivewire %>\r\n<% let relationshipModel = this.relationshipId ? this.relationship.model : this.foreign.relatedEntity %>\r\n<% let starterOptionLabel = 'Please select the ' + relationshipModel.name.case('capitalCase') %>\r\n\r\n<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <x-inputs.tomselect\r\n        name=\"<$ this.livewireInputReference || this.name $>\"\r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(isForLivewire) { %>\r\n    wire:model=\"<$ this.livewireInputReference $>\"\r\n    <% } %>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    >\r\n    <% if(!isForLivewire) { %>\r\n    @php $selected = old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>')) @endphp\r\n    <option disabled {{ empty($selected) ? 'selected' : '' }}><$ this.starterOptionText ? this.starterOptionText : starterOptionLabel $></option>\r\n    <% } else { %>\r\n    <option value=\"null\" disabled><$ this.starterOptionText ? this.starterOptionText : starterOptionLabel $></option>\r\n    <% } %>\r\n    @foreach($<$ this.getVariableForRelationshipSelect() $> as $value => $label)\r\n    <option value=\"{{ $value }}\" <% if(!isForLivewire) { %>{{ $selected == $value ? 'selected' : '' }}<% } %> >{{ $label }}</option>\r\n    @endforeach\r\n    </x-inputs.tomselect>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Text.vemtl": {
                        "path": "views/inputs/blade/Text.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.text\r\n            name=\"<$ this.livewireInputReference || this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n    wire:model=\"<$ this.livewireInputReference $>\"\r\n    <% } else { %>\r\n    :value=\"old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>'))\"\r\n    <% } %>\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.text>\r\n    <% } else { %>\r\n    <x-inputs.text\r\n            name=\"<$ this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n            :value=\"old('<$ this.name $>', '<$ this.defaultValue $>')\"\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    ></x-inputs.text>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Textarea.vemtl": {
                        "path": "views/inputs/blade/Textarea.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.textarea\r\n            name=\"<$ this.livewireInputReference || this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <% if(this.crud.isForLivewire) { %>\r\n    wire:model=\"<$ this.livewireInputReference $>\"\r\n    <% } %>\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <% if(this.isJson()) { %>\r\n    >\r\n        {{ old('<$ this.name $>', ($editing ? json_encode($<$ this.crud.model.name.case('camelCase') $>-><$ this.name $>) : '<$ this.defaultValue $>')) }}\r\n    </x-inputs.textarea>\r\n    <% } else { %>\r\n    >\r\n        {{ old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>')) }}\r\n    </x-inputs.textarea>\r\n    <% } %>\r\n    <% } else { %>\r\n    ></x-inputs.textarea>\r\n    <% } %>\r\n    <% } else { %>\r\n    <x-inputs.textarea\r\n            name=\"<$ this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n    <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n    <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n    <% if(!this.crud.isForLivewire) { %>\r\n    <$ this.getRequiredAttributeForTemplate() $>\r\n    <% } %>\r\n    >\r\n        {{ old('<$ this.name $>', '<$ this.defaultValue $>') }}\r\n    </x-inputs.textarea>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Image.vemtl": {
                        "path": "views/inputs/blade/Image.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.crud.isForLivewire) { %>\r\n        <###>\r\n        <% if(this.crud.isManyToManyDetail) { %>\r\n        <div image-url=\"{{ $<$ this.getLivewireSingleName() $> ? \\Storage::url($<$ this.getLivewireSingleName() $>) : '' }}\"\r\n            x-data=\"imageViewer()\"\r\n            @refresh.window=\"refreshUrl()\"\r\n        >\r\n        <% } else { %>\r\n        <div image-url=\"{{ $editing && $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> ? \\Storage::url($<$ this.crud.model.name.case('camelCase') $>-><$ this.name $>) : '' }}\"\r\n            x-data=\"imageViewer()\"\r\n            @refresh.window=\"refreshUrl()\"\r\n        >\r\n        <% } %>\r\n    <% } else { %>\r\n    <div \r\n        x-data=\"imageViewer('{{ $editing && $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> ? \\Storage::url($<$ this.crud.model.name.case('camelCase') $>-><$ this.name $>) : '' }}')\"\r\n    >\r\n    <% } %>\r\n        <x-inputs.partials.label\r\n            name=\"<$ this.crud.isForLivewire ? this.getLivewireSingleName() : this.name $>\"\r\n            label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n        ></x-inputs.partials.label>\r\n        <br/>\r\n        \r\n        <!-- Show the image -->\r\n        <template x-if=\"imageUrl\">\r\n            <img :src=\"imageUrl\" \r\n                class=\"object-cover rounded border border-gray-200\" \r\n                style=\"width: 100px; height: 100px;\"\r\n            />\r\n        </template>\r\n        \r\n        <!-- Show the gray box when image is not available -->\r\n        <template x-if=\"!imageUrl\">\r\n            <div \r\n                class=\"border rounded border-gray-200 bg-gray-100\" \r\n                style=\"width: 100px; height: 100px;\"\r\n            ></div>\r\n        </template>\r\n        \r\n        <div class=\"mt-2\">\r\n            <input type=\"file\" \r\n                <% if(this.crud.isForLivewire) { %>\r\n                name=\"<$ this.getLivewireSingleName() $>\" \r\n                id=\"<$ this.getLivewireSingleName() $>{{ $uploadIteration }}\" \r\n                wire:model=\"<$ this.getLivewireSingleName() $>\"\r\n                <% } else { %>\r\n                name=\"<$ this.name $>\"\r\n                id=\"<$ this.name $>\"\r\n                <% } %>\r\n                @change=\"fileChosen\"\r\n            />\r\n        </div>\r\n\r\n        @error('<$ this.crud.isForLivewire ? this.getLivewireSingleName() : this.name $>')\r\n            @include('components.inputs.partials.error')\r\n        @enderror\r\n    </div>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Checkbox.vemtl": {
                        "path": "views/inputs/blade/Checkbox.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.checkbox \r\n        name=\"<$ this.livewireInputReference || this.name $>\" \r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n        <% if(this.crud.isForLivewire) { %>\r\n        wire:model=\"<$ this.livewireInputReference $>\"\r\n        <% } else { %>\r\n        :checked=\"old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : <$ this.checked ? 1 : 0 $>))\"\r\n        <% } %>\r\n    ></x-inputs.checkbox>\r\n    <% } else { %>\r\n    <x-inputs.checkbox \r\n        name=\"<$ this.name $>\" \r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n        :checked=\"old('<$ this.name $>', '<$ this.defaultValue $>') ? true : false\"\r\n    ></x-inputs.checkbox>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/AppLayout_MainHeaderContent.vemtl": {
                        "path": "views/frameworks/tailwind/AppLayout_MainHeaderContent.vemtl",
                        "content": "<meta charset=\"utf-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n<!-- CSRF Token -->\r\n<meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n\r\n<title>{{ config('app.name', '<$ this.project.name $>') }}</title>\r\n\r\n<!-- Fonts -->\r\n<link rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\">\r\n<link href=\"https://fonts.googleapis.com/css?family=Nunito\" rel=\"stylesheet\">\r\n\r\n<!-- Styles -->\r\n<% if(this.project.usesMixAsCompiler()) { %>\r\n<link rel=\"stylesheet\" href=\"{{ mix('css/app.css') }}\">\r\n<% } %>\r\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\r\n\r\n<!-- Icons -->\r\n<link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\r\n\r\n<!-- Scripts -->\r\n<% if(this.project.usesMixAsCompiler()) { %>\r\n<script src=\"{{ mix('js/app.js') }}\" defer></script>\r\n<% } %>\r\n<% if(this.project.usesViteAsCompiler()) { %>\r\n@vite(['resources/css/app.css', 'resources/js/app.js'])\r\n<% } %>\r\n<script src=\"https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js\" defer></script>",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/IndexView_Table.vemtl": {
                        "path": "views/frameworks/tailwind/IndexView_Table.vemtl",
                        "content": "<% let cols = 1 %>\r\n<div class=\"block w-full overflow-auto scrolling-touch\">\r\n    <table class=\"w-full max-w-full mb-4 bg-transparent\">\r\n        <thead class=\"text-gray-700\">\r\n            <tr>\r\n                <% for(let input of this.crud.inputs) { %>\r\n                    <% if(input.isAllowedOnIndexPages() && input.onIndex) { %>\r\n                        <% cols++ %>\r\n                        <% if(input.isNumeric()) { %>\r\n                            <th class=\"px-4 py-3 text-right\">@lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')</th>\r\n                        <% } else { %>\r\n                            <th class=\"px-4 py-3 text-left\">@lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')</th>\r\n                        <% } %>\r\n                    <% } %>\r\n                <% } %>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"text-gray-600\">\r\n            @forelse($<$ modelPluralCamelCase $> as $<$ modelNameCamelCase $>)\r\n            <tr class=\"hover:bg-gray-50\">\r\n                <% for(let input of this.crud.inputs) { %>\r\n                    <# COMPUTED INPUT #>\r\n                    <% if(input.isComputed && input.onIndex) { %>\r\n                        <% if(input.isNumeric()) { %>\r\n                        <td class=\"px-4 py-3 text-right\">{{ <$ input.computedFormula $> }}</td>\r\n                        <% } else { %>\r\n                        <td class=\"px-4 py-3 text-left\">{{ <$ input.computedFormula $> }}</td>\r\n                        <% } %>\r\n                    <% } %>\r\n                    <# INPUT LINKED TO FIELD #>\r\n                    <% if(input.isLinkedToField() && input.onIndex) { %>\r\n                    /** <$ input.getType() $> */\r\n                        <% if(input.isImage()) { %>\r\n                        <td class=\"px-4 py-3 text-left\"><x-partials.thumbnail src=\"{{ $<$ modelNameCamelCase $>-><$ input.name $> ? \\Storage::url($<$ modelNameCamelCase $>-><$ input.name $>) : '' }}\"/></td>\r\n                        <% } else if(input.isFile()) { %>\r\n                        <td class=\"px-4 py-3 text-left\">@if($<$ modelNameCamelCase $>-><$ input.name $>) <a href=\"{{ \\Storage::url($<$ modelNameCamelCase $>-><$ input.name $>) }}\" target=\"blank\"><i class=\"mr-1 icon ion-md-download\"></i>&nbsp;Download</a> @else - @endif</td>\r\n                        <% } else { %>\r\n                            <% if(input.isForRelationship()) { %>\r\n                            <td class=\"px-4 py-3 text-left\">{{ optional($<$ modelNameCamelCase $>-><$ input.relationship.name $>)-><$ input.relationship.model.getLabelFieldName() $> ?? '-' }}</td>\r\n                            <% } else if(input.isNumeric()) { %>\r\n                            <td class=\"px-4 py-3 text-right\">{{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}</td>\r\n                            <% } else if(input.isJson()) { %>\r\n                            <td class=\"px-4 py-3 text-right\"><pre>{{ json_encode($<$ modelNameCamelCase $>-><$ input.name $>) ?? '-' }}</pre></td>\r\n                            <% } else if(input.isUrl()) { %>\r\n                            <td class=\"px-4 py-3 text-left\"><a class=\"underline cursor-pointer\" target=\"_blank\" href=\"{{ $<$ modelNameCamelCase $>-><$ input.name $> }}\">{{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}</a></td>\r\n                            <% } else if(input.type == 'datetime') { %>\r\n                            <td class=\"px-4 py-3 text-left\">{{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('D, d M Y, H:i') }}</td>\r\n                            <% } else if(input.type == 'time') { %>\r\n                            <td class=\"px-4 py-3 text-left\">{{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('H:i') }}</td>\r\n                            <% } else if(input.isDate()) { %>\r\n                            <td class=\"px-4 py-3 text-left\">{{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('D, d M Y') }}</td>\r\n                            <% } else { %>\r\n                            <td class=\"px-4 py-3 text-left\">{{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}</td>\r\n                            <% } %>\r\n                        <% } %>\r\n                    <% } %>\r\n                <% } %>\r\n                <td class=\"px-4 py-3 text-center\" style=\"width: 134px;\">\r\n                    <div role=\"group\" aria-label=\"Row Actions\" class=\"relative inline-flex align-middle\">\r\n                        @can('update', $<$ modelNameCamelCase $>)\r\n                        <a href=\"{{ route('<$ modelPluralParamCase $>.edit', $<$ modelNameCamelCase $>) }}\" class=\"mr-1\">\r\n                            <button type=\"button\" class=\"button\">\r\n                                <i class=\"icon ion-md-create\"></i>\r\n                            </button>\r\n                        </a>\r\n                        @endcan\r\n                        \r\n                        @can('view', $<$ modelNameCamelCase $>)\r\n                        <a href=\"{{ route('<$ modelPluralParamCase $>.show', $<$ modelNameCamelCase $>) }}\" class=\"mr-1\">\r\n                            <button type=\"button\" class=\"button\">\r\n                                <i class=\"icon ion-md-eye\"></i>\r\n                            </button>\r\n                        </a>\r\n                        @endcan\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            @empty\r\n            <tr>\r\n                <td colspan=\"<$ cols $>\">@lang('crud.common.no_items_found')</td>\r\n            </tr>\r\n            @endforelse\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <td colspan=\"<$ cols $>\">\r\n                    <div class=\"mt-10 px-4\">\r\n                        {!! $<$ modelPluralCamelCase $>->render() !!}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n</div>",
                        "ignorePlugins": false
                    },
                    "views/inputs/blade/Url.vemtl": {
                        "path": "views/inputs/blade/Url.vemtl",
                        "content": "<x-inputs.group class=\"<$ this.project.css().getReponsiveClassesForInput(this) $>\">\r\n    <% if(this.isLinkedToField()) { %>\r\n    <x-inputs.url \r\n        name=\"<$ this.livewireInputReference || this.name $>\" \r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n        <% if(this.crud.isForLivewire) { %>\r\n        wire:model=\"<$ this.livewireInputReference $>\"\r\n        <% } else { %>\r\n        :value=\"old('<$ this.name $>', ($editing ? $<$ this.crud.model.name.case('camelCase') $>-><$ this.name $> : '<$ this.defaultValue $>'))\"\r\n        <% } %>\r\n        <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n        <$ this.max ? ` maxlength=\"${this.max}\"` : '' $> \r\n        <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n        <% if(!this.crud.isForLivewire) { %>\r\n        <$ this.getRequiredAttributeForTemplate() $>\r\n        <% } %>\r\n    ></x-inputs.url>\r\n    <% } else { %>\r\n    <x-inputs.url \r\n        name=\"<$ this.name $>\" \r\n        label=\"{{ __('crud.<$ this.crud.model.plural.case('snakeCase') $>.inputs.<$ this.name.case('snakeCase') $>') }}\"\r\n        :value=\"old('<$ this.name $>', '<$ this.defaultValue $>')\" \r\n        <$ this.min ? ` minlength=\"${this.min}\"` : '' $>\r\n        <$ this.max ? ` maxlength=\"${this.max}\"` : '' $>\r\n        <$ this.placeholder ? ` placeholder=\"{{ __('crud.${this.crud.model.plural.case('snakeCase')}.inputs.${this.name.case('snakeCase')}') }}\"` : '' $>\r\n        <% if(!this.crud.isForLivewire) { %>\r\n        <$ this.getRequiredAttributeForTemplate() $>\r\n        <% } %>\r\n    ></x-inputs.url>\r\n    <% } %>\r\n</x-inputs.group>",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/ShowView.vemtl": {
                        "path": "views/frameworks/tailwind/ShowView.vemtl",
                        "content": "<# TEMPLATE VARIABLES #>\r\n<% let modelPluralParamCase = this.model.plural.case('paramCase') %>\r\n<% let modelNameCamelCase = this.model.name.case('camelCase') %>\r\n<% let crudNameSnakeCase = this.crud.name.case('snakeCase') %>\r\n<####>\r\n<x-app-layout>\r\n    <x-slot name=\"header\">\r\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\r\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\r\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\r\n            </a>\r\n            @lang('crud.<$ crudNameSnakeCase $>.show_title')\r\n        </h2>\r\n    </x-slot>\r\n\r\n    <div class=\"py-12\">\r\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n            <x-partials.card>\r\n                {{--\r\n                <x-slot name=\"title\">\r\n                    <span>@lang('card.title')</span>\r\n                </x-slot>\r\n                --}}\r\n\r\n                <div class=\"flex flex-wrap mt-2 px-4\">\r\n                    <# CRUD inputs elements #>\r\n                    <% for(let input of this.crud.inputs) { %>\r\n                        <% if(input.isLinkedToField() && input.onShow) { %>\r\n                        <# Input types #>\r\n                            <% if(input.isImage()) { %>\r\n                            <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                <h5 class=\"font-medium text-gray-700\">\r\n                                    @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                </h5>\r\n                                <x-partials.thumbnail \r\n                                    src=\"{{ $<$ modelNameCamelCase $>-><$ input.name $> ? \\Storage::url($<$ modelNameCamelCase $>-><$ input.name $>) : '' }}\" \r\n                                    size=\"150\"\r\n                                />\r\n                            </div>\r\n                            <% } else if (input.isFile()) { %>\r\n                            <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                <h5 class=\"font-medium text-gray-700\">\r\n                                    @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                </h5>\r\n                                @if($<$ modelNameCamelCase $>-><$ input.name $>)\r\n                                    <a href=\"{{ \\Storage::url($<$ modelNameCamelCase $>-><$ input.name $>) }}\" target=\"blank\">\r\n                                        <i class=\"mr-1 icon ion-md-download\"></i>\r\n                                        Download\r\n                                    </a>\r\n                                @else\r\n                                    -\r\n                                @endif\r\n                            </div>\r\n                            <% } else { %>\r\n                                <% if(input.isForRelationship()) { %>\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <span>\r\n                                        {{ optional($<$ modelNameCamelCase $>-><$ input.relationship.name $>)-><$ input.relationship.model.getLabelFieldName() $> ?? '-' }}\r\n                                    </span>\r\n                                </div>\r\n                                <% } else if(input.type == 'time') { %>\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <span>\r\n                                        {{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('H:i') }}\r\n                                    </span>\r\n                                </div>\r\n                                <% } else if(input.type == 'datetime') { %>\r\n                                /* Datetime */\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <span>\r\n                                        {{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('l, d F Y, H:i') }}\r\n                                    </span>\r\n                                </div>\r\n                                <% } else if(input.isDate()) { %>\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <span>\r\n                                        {{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('l, d F Y') }}\r\n                                    </span>\r\n                                </div>\r\n                                <% } else if(input.isJson()) { %>\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <pre>\r\n                                        {{ json_encode($<$ modelNameCamelCase $>-><$ input.name $>) ?? '-' }}\r\n                                    </pre>\r\n                                </div>\r\n                                <% } else if(input.isUrl()) {  %>\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <a class=\"underline cursor-pointer\" target=\"_blank\" href=\"{{ $<$ modelNameCamelCase $>-><$ input.name $> }}\">\r\n                                        {{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}\r\n                                    </a>\r\n                                </div>\r\n                                <% } else { %>\r\n                                <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                    <h5 class=\"font-medium text-gray-700\">\r\n                                        @lang('crud.<$ crudNameSnakeCase $>.inputs.<$ input.name $>')\r\n                                    </h5>\r\n                                    <span>\r\n                                        {{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}\r\n                                    </span>\r\n                                </div>\r\n                                <% } %>\r\n                            <% } %>\r\n                        <% } %>\r\n                    <% } %>\r\n                </div>\r\n            </x-partials.card>\r\n\r\n            <# If the permissions module has been enabled and it is for the auth model #>\r\n            <% if(this.generatorSettings.modules.permissions && this.model.isAuthModel()) { %>\r\n            <x-partials.card class=\"mt-5\">\r\n                <div class=\"flex flex-wrap mt-2 px-4\">\r\n                    <div class=\"mb-4\">\r\n                        <h5 class=\"font-medium text-gray-700\">@lang('crud.roles.name')</h5>\r\n                        <div>\r\n                            @forelse ($<$ modelNameCamelCase $>->roles as $role)\r\n                                <div class=\"inline-block p-1 text-center text-sm rounded bg-blue-400 text-white\">{{ $role->name }}</div>\r\n                                <br>\r\n                            @empty\r\n                                -\r\n                            @endforelse\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </x-partials.card>\r\n            <% } %>\r\n\r\n            <x-partials.card class=\"mt-5\">\r\n                <x-slot name=\"title\">\r\n                    <span>@lang('text.actions')</span>\r\n                </x-slot>\r\n                <div class=\"mt-4 px-4\">\r\n                    <a href=\"{{ route('<$ modelPluralParamCase $>.index') }}\" class=\"button\">\r\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\r\n                        @lang('crud.common.back')\r\n                    </a>\r\n\r\n                    @can('update', $<$ modelNameCamelCase $>)\r\n                        <a\r\n                            href=\"{{ route('<$ modelPluralParamCase $>.edit', $<$ modelNameCamelCase $>) }}\"\r\n                            class=\"button\"\r\n                        >\r\n                            <i class=\"mr-1 icon ion-md-create\"></i>\r\n                            @lang('crud.common.edit')\r\n                        </a>\r\n                    @endcan @can('delete', $<$ modelNameCamelCase $>)\r\n                        <div class=\"float-right\">\r\n                            <form\r\n                                action=\"{{ route('<$ modelPluralParamCase $>.destroy', $<$ modelNameCamelCase $>) }}\"\r\n                                method=\"POST\"\r\n                                onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\r\n                            >\r\n                                @csrf @method('DELETE')\r\n                                <button type=\"submit\" class=\"button\">\r\n                                    <i class=\"mr-1 icon ion-md-trash text-red-600\">\r\n                                    </i>\r\n                                    <span class=\"text-red-600\">\r\n                                    @lang('crud.common.delete')\r\n                                </span>\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    @endcan\r\n                </div>\r\n            </x-partials.card>\r\n\r\n            <% if(this.crud.hasManyDetails) { %>\r\n                <# HasManyDetail components #>\r\n                <% for(let detail of this.crud.getHasManyDetailsForShowPage()) { %>\r\n                <% let detailModelNameCamelCase = detail.crud.model.name.case('camelCase') %>\r\n                @can('view-any', <$ this.projectHelper.getModelsNamespace() $>\\<$ detail.relatedCrud.model.name $>::class)\r\n                <x-partials.card class=\"mt-5\">\r\n                    <x-slot name=\"title\">\r\n                        @lang('crud.<$ detail.relatedCrud.name.case('snakeCase') $>.name')\r\n                    </x-slot>\r\n\r\n                    <livewire:<$ detail.getLivewireViewName() $> :<$ detailModelNameCamelCase $>=\"$<$ detailModelNameCamelCase $>\" />\r\n                </x-partials.card>\r\n                @endcan\r\n                <% } %>\r\n            <% } %>\r\n\r\n            <% if(this.crud.manyToManyDetails) { %>\r\n                <# ManyToManyDetail components #>\r\n                <% for(let detail of this.crud.getManyToManyDetailsForShowPage()) { %>\r\n                <% let detailModelNameCamelCase = detail.crud.model.name.case('camelCase') %>\r\n                @can('view-any', <$ this.projectHelper.getModelsNamespace() $>\\<$ detail.relatedCrud.model.name $>::class)\r\n                <x-partials.card class=\"mt-5\">\r\n                    <x-slot name=\"title\">\r\n                        @lang('crud.<$ detail.relatedCrud.name.case('snakeCase') $>.name')\r\n                    </x-slot>\r\n\r\n                    <livewire:<$ detail.getLivewireViewName() $> :<$ detailModelNameCamelCase $>=\"$<$ detailModelNameCamelCase $>\" />\r\n                </x-partials.card>\r\n                @endcan\r\n                <% } %>\r\n            <% } %>\r\n        </div>\r\n    </div>\r\n</x-app-layout>",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/FormInputsView.vemtl": {
                        "path": "views/frameworks/tailwind/FormInputsView.vemtl",
                        "content": "<# TEMPLATE VARIABLES #>\r\n<% let modelNameCamelCase = this.model.name.case('camelCase') %>\r\n<####>\r\n@php $editing = isset($<$ modelNameCamelCase $>) @endphp\r\n\r\n<style>\r\n    .ts-control {\r\n        border: none;\r\n        padding: 0;\r\n    }\r\n\r\n    .ts-dropdown,\r\n    .ts-control,\r\n    .ts-control input {\r\n        color: rgb(31 41 55 / var(--tw-text-opacity));\r\n        font-family: inherit;\r\n        font-size: 1rem;\r\n        line-height: 1.5;\r\n    }\r\n\r\n</style>\r\n\r\n<x-partials.card>\r\n    {{-- \r\n    <x-slot name=\"title\">\r\n        <span>@lang('card.title')</span>\r\n    </x-slot>\r\n    --}}\r\n\r\n    <div class=\"flex flex-wrap\">\r\n        <% for(let input of this.crud.getRenderableInputs()) { %>\r\n            <% if(!input.isComputed && (input.onCreate || input.onUpdate)) { %>\r\n                <% let inputOnlyForCreate = input.onCreate && !input.onUpdate %>\r\n                <% let inputOnlyForUpdate = input.onUpdate && !input.onCreate %>\r\n                <###>\r\n                <% if(inputOnlyForCreate) { %>\r\n                    @if(!$editing)\r\n                <% } %>\r\n                <###>\r\n                <% if(inputOnlyForUpdate) { %>\r\n                    @if($editing)\r\n                <% } %>\r\n                <# We'll replace this [INPUT:id] code with input template #>\r\n                [INPUT:<$ input.id $>]\r\n                <###>\r\n                <% if(inputOnlyForCreate || inputOnlyForUpdate) { %>\r\n                    @endif\r\n                <% } %>\r\n            <% } %>\r\n\r\n        <% } %>\r\n\r\n        <% for(let component of this.crud.getDependentSelects()) { %>\r\n            @livewire('selects.<$ component.getName().case(\"param-case\") $>', ['<$ modelNameCamelCase $>' => $editing ? $<$ modelNameCamelCase $>-><$ this.model.getPrimaryKeyName() $> : null])\r\n        <% } %>\r\n\r\n        <% for(let component of this.crud.getBelongsToManyCheckboxGroups()) { %>\r\n            <% let model = component.relationship.model %>\r\n            <% let componentModelNameCamelCase = model.name.case('camelCase') %>\r\n            <% let modelPluralCamelCase = model.plural.case('camelCase') %>\r\n            <% let componentCondition = component.condition || component.getDefaultCondition() %>\r\n                <###>\r\n                <% if(component.onCreate || component.onEdit) { %>\r\n                <###>\r\n                <% let componentOnlyForCreate = component.onCreate && !component.onEdit %>\r\n                <% let componentOnlyForEdit = component.onEdit && !component.onCreate %>\r\n                <###>\r\n                <% if(componentOnlyForCreate) { %>\r\n                    @if(!$editing)\r\n                <% } %>\r\n                <###>\r\n                <% if(componentOnlyForEdit) { %>\r\n                    @if($editing)\r\n                <% } %>\r\n                    <div class=\"px-4 my-4\">\r\n                        <h4 class=\"font-bold text-lg text-gray-700\">Assign @lang('crud.<$ model.plural.case('snakeCase') $>.name')</h4>\r\n\r\n                        <div class=\"py-2\">\r\n                            @foreach ($<$ modelPluralCamelCase $> as $<$ componentModelNameCamelCase $>)\r\n                            <div>\r\n                                <x-inputs.checkbox\r\n                                    id=\"<$ componentModelNameCamelCase $>{{ $<$ componentModelNameCamelCase $>->id }}\"\r\n                                    name=\"<$ modelPluralCamelCase $>[]\"\r\n                                    label=\"{{ ucfirst($<$ componentModelNameCamelCase $>-><$ model.getLabelFieldName() $>) }}\"\r\n                                    value=\"{{ $<$ componentModelNameCamelCase $>-><$ model.getPrimaryKeyName() $> }}\"\r\n                                    :checked=\"isset($<$ modelNameCamelCase $>) ? <$ componentCondition $> : false\"\r\n                                    :add-hidden-value=\"false\"\r\n                                ></x-inputs.checkbox>\r\n                            </div>\r\n                            @endforeach\r\n                        </div>\r\n                    </div>\r\n                <###>\r\n                <% if(componentOnlyForCreate || componentOnlyForEdit) { %>\r\n                    @endif\r\n                <% } %>\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <# If the permissions module has been enabled and it is a CRUD for the auth model #>\r\n        <% if(this.generatorSettings.modules.permissions && this.model.isAuthModel()) { %>\r\n        <div class=\"px-4 my-4\">\r\n            <h4 class=\"font-bold text-lg text-gray-700\">Assign @lang('crud.roles.name')</h4>\r\n\r\n            <div class=\"py-2\">\r\n                @foreach ($roles as $role)\r\n                <div>\r\n                    <x-inputs.checkbox\r\n                        id=\"role{{ $role->id }}\"\r\n                        name=\"roles[]\"\r\n                        label=\"{{ ucfirst($role->name) }}\"\r\n                        value=\"{{ $role->id }}\"\r\n                        :checked=\"isset($<$ modelNameCamelCase $>) ? $<$ modelNameCamelCase $>->hasRole($role) : false\"\r\n                        :add-hidden-value=\"false\"\r\n                    ></x-inputs.checkbox>\r\n                </div>\r\n                @endforeach\r\n            </div>\r\n        </div>\r\n        <% } %>\r\n    </div>\r\n</x-partials.card>",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/CreateView.vemtl": {
                        "path": "views/frameworks/tailwind/CreateView.vemtl",
                        "content": "<# TEMPLATE VARIABLES #>\r\n<% let modelPluralSnakeCase = this.model.plural.case('snakeCase') %>\r\n<% let modelPluralParamCase = this.model.plural.case('paramCase') %>\r\n<% let crudNameSnakeCase = this.crud.name.case('snakeCase') %>\r\n<####>\r\n<x-app-layout>\r\n    <x-slot name=\"header\">\r\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\r\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\r\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\r\n            </a>\r\n            @lang('crud.<$ crudNameSnakeCase $>.create_title')\r\n        </h2>\r\n    </x-slot>\r\n\r\n    <div class=\"py-12\">\r\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n            <x-form method=\"POST\" action=\"{{ route('<$ modelPluralParamCase $>.store') }}\" <$ this.crud.hasFileOrImageInputs() ? 'has-files' : '' $>>\r\n\r\n                @include('<$ this.project.viewsPath() $>.<$ modelPluralSnakeCase $>.form-inputs')\r\n\r\n                <x-partials.card class=\"mt-5\">\r\n                    <x-slot name=\"title\">\r\n                        <span>@lang('text.actions')</span>\r\n                    </x-slot>\r\n                    <div class=\"mt-4 px-4\">\r\n                        <a href=\"{{ route('<$ modelPluralParamCase $>.index') }}\" class=\"button\">\r\n                            <i class=\"mr-1 icon ion-md-return-left text-primary\">\r\n                            </i>\r\n                            @lang('crud.common.back')\r\n                        </a>\r\n\r\n                        <button type=\"submit\" class=\"button button-primary float-right\">\r\n                            <i class=\"mr-1 icon ion-md-save\"></i>\r\n                            @lang('crud.common.create')\r\n                        </button>\r\n                    </div>\r\n                </x-partials.card>\r\n\r\n            </x-form>\r\n        </div>\r\n    </div>\r\n</x-app-layout>",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/EditView.vemtl": {
                        "path": "views/frameworks/tailwind/EditView.vemtl",
                        "content": "<# TEMPLATE VARIABLES #>\r\n<% let modelPluralSnakeCase = this.model.plural.case('snakeCase') %>\r\n<% let modelPluralParamCase = this.model.plural.case('paramCase') %>\r\n<% let modelNameCamelCase = this.model.name.case('camelCase') %>\r\n<% let crudNameSnakeCase = this.crud.name.case('snakeCase') %>\r\n<####>\r\n<x-app-layout>\r\n    <x-slot name=\"header\">\r\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\r\n            <a href=\"javascript: history.go(-1)\" class=\"mr-4\">\r\n                <i class=\"mr-1 icon ion-md-arrow-back\"></i>\r\n            </a>\r\n            @lang('crud.<$ crudNameSnakeCase $>.edit_title')\r\n        </h2>\r\n    </x-slot>\r\n\r\n    <div class=\"py-12\">\r\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n\r\n            <x-form method=\"PUT\" action=\"{{ route('<$ modelPluralParamCase $>.update', $<$ modelNameCamelCase $>) }}\" <$ this.crud.hasFileOrImageInputs() ? 'has-files' : '' $>>\r\n\r\n                @include('<$ this.project.viewsPath() $>.<$ modelPluralSnakeCase $>.form-inputs')\r\n\r\n                <x-partials.card class=\"mt-5\">\r\n                    <x-slot name=\"title\">\r\n                        <span>@lang('text.actions')</span>\r\n                    </x-slot>\r\n                    <div class=\"mt-4 px-4\">\r\n                        <a href=\"{{ route('<$ modelPluralParamCase $>.index') }}\" class=\"button\">\r\n                            <i class=\"mr-1 icon ion-md-return-left text-primary\"></i>\r\n                            @lang('crud.common.back')\r\n                        </a>\r\n\r\n                        <a\r\n                            href=\"{{ route('<$ modelPluralParamCase $>.show', $<$ modelNameCamelCase $>) }}\"\r\n                            class=\"button\"\r\n                        >\r\n                            <i class=\"mr-1 icon ion-md-backspace text-primary\">\r\n                            </i>\r\n                            @lang('crud.common.cancel')\r\n                        </a>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            class=\"button button-primary float-right\"\r\n                        >\r\n                            <i class=\"mr-1 icon ion-md-save\"></i>\r\n                            @lang('crud.common.update')\r\n                        </button>\r\n                    </div>\r\n                </x-partials.card>\r\n\r\n            </x-form> \r\n\r\n            <% if(this.crud.hasManyDetails) { %>\r\n                <# HasManyDetail components #>\r\n                <% for(let detail of this.crud.getHasManyDetailsForEditPage()) { %>\r\n                <% let detailModelNameCamelCase = detail.crud.model.name.case('camelCase') %>\r\n                @can('view-any', <$ this.projectHelper.getModelsNamespace() $>\\<$ detail.relatedCrud.model.name $>::class)\r\n                <x-partials.card class=\"mt-5\">\r\n                    <x-slot name=\"title\">\r\n                        @lang('crud.<$ detail.relatedCrud.name.case('snakeCase') $>.name')\r\n                    </x-slot>\r\n\r\n                    <livewire:<$ detail.getLivewireViewName() $> :<$ detailModelNameCamelCase $>=\"$<$ detailModelNameCamelCase $>\" />\r\n                </x-partials.card>\r\n                @endcan\r\n                <% } %>\r\n            <% } %>\r\n\r\n            <% if(this.crud.manyToManyDetails) { %>\r\n                <# ManyToManyDetail components #>\r\n                <% for(let detail of this.crud.getManyToManyDetailsForEditPage()) { %>\r\n                <% let detailModelNameCamelCase = detail.crud.model.name.case('camelCase') %>\r\n                @can('view-any', <$ this.projectHelper.getModelsNamespace() $>\\<$ detail.relationship.model.name $>::class)\r\n                <x-partials.card class=\"mt-5\">\r\n                    <x-slot name=\"title\">\r\n                        @lang('crud.<$ detail.relatedCrud.name.case('snakeCase') $>.name')\r\n                    </x-slot>\r\n\r\n                    <livewire:<$ detail.getLivewireViewName() $> :<$ detailModelNameCamelCase $>=\"$<$ detailModelNameCamelCase $>\" />\r\n                </x-partials.card>\r\n                @endcan\r\n                <% } %>\r\n            <% } %>\r\n        </div>\r\n    </div>\r\n</x-app-layout>",
                        "ignorePlugins": false
                    },
                    "HasManyDetailLivewireComponent.vemtl": {
                        "path": "HasManyDetailLivewireComponent.vemtl",
                        "content": "<?php\r\n<# TEMPLATE VARIABLES #>\r\n<% let parentCrudModel = this.crud.model %>\r\n<% let relatedCrudModel = this.relatedCrud.model %>\r\n<% let modelsNamespace = this.projectHelper.getModelsNamespace() %>\r\n<% let parentCrudModelNameCamelCase = parentCrudModel.name.case('camelCase') %>\r\n<% let relatedCrudModelNameCamelCase = relatedCrudModel.name.case('camelCase') %>\r\n<% let relatedCrudModelPluralCamelCase = relatedCrudModel.plural.case('camelCase') %>\r\n<% let relForeignKeyName = this.relationship.foreignKey.name %>\r\n<####>\r\n\r\nnamespace App\\Http\\Livewire;\r\n\r\nuse Livewire\\Component;\r\nuse Livewire\\WithPagination;\r\nuse Illuminate\\View\\View;\r\nuse <$ modelsNamespace $>\\<$ parentCrudModel.name $>;\r\nuse <$ modelsNamespace $>\\<$ relatedCrudModel.name $>;\r\n<% if(this.relatedCrud.hasBelongsToInputs()) { %>\r\n    <###>\r\n    <% for(let input of this.relatedCrud.getBelongsToInputs()) { %>\r\n        <##>\r\n        <% if(input.relationship.modelId !== relatedCrudModel.id) { %>\r\n        use <$ modelsNamespace $>\\<$ input.relationship.model.name $>;\r\n        <% } %>\r\n    <% } %>\r\n<% } %>\r\n<###>\r\n<% if(this.relatedCrud.hasPasswordInputs()) { %>\r\nuse Illuminate\\Support\\Facades\\Hash;\r\n<% } %>\r\n<###>\r\n<% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\nuse Livewire\\WithFileUploads;\r\nuse Illuminate\\Support\\Facades\\Storage;\r\n<% } %>\r\n<###>\r\n<% if(relatedCrudModel.hasUniqueFields() && !this.hasSpecificRequests) { %>\r\nuse Illuminate\\Validation\\Rule;\r\n<% } %>\r\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\r\n\r\nclass <$ this.fileNameWithoutExtension $> extends Component\r\n{\r\n    <% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\n    use WithFileUploads;\r\n    <% } %>\r\n    use AuthorizesRequests;\r\n    use WithPagination;\r\n\r\n    public <$ parentCrudModel.name $> $<$ parentCrudModelNameCamelCase $>;\r\n    public <$ relatedCrudModel.name $> $<$ relatedCrudModelNameCamelCase $>;\r\n    <% if(this.relatedCrud.hasBelongsToInputs()) { %>\r\n        <# BelongsTo inputs grouped by collection name #>\r\n        <% for(let input of this.relatedCrud.getBelongsToInputsGroupedByCollection()) { %>\r\n            <###>\r\n            <% if(input.relationship.modelId !== relatedCrudModel.id) { %>\r\n            public $<$ input.getVariableForRelationshipSelect() $> = [];\r\n            <% } %>\r\n        <% } %>\r\n    <% } %>\r\n    <###>\r\n    <% if(this.relatedCrud.hasPasswordInputs()) { %>\r\n        <# Password inputs property #>\r\n        <% for(let input of this.relatedCrud.getPasswordInputs()) { %>\r\n        public $<$ input.getLivewireSingleName() $>;\r\n        <% } %>\r\n    <% } %>\r\n    <###>\r\n    <% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\n        <# File inputs property #>\r\n        <% for(let input of this.relatedCrud.getFileAndImageInputs()) { %>\r\n        public $<$ input.getLivewireSingleName() $>;\r\n        <% } %>\r\n    public $uploadIteration = 0;\r\n    <% } %>\r\n    <###>\r\n    <# Date inputs property #>\r\n    <% for(let input of this.relatedCrud.getDateAndDatetimeInputs()) { %>\r\n    public $<$ input.getLivewireSingleName() $>;\r\n    <% } %>\r\n\r\n    public $selected = [];\r\n    public $editing = false;\r\n    public $allSelected = false;\r\n    public $showingModalView = false;\r\n    public $showingModalForm = false;\r\n\r\n    public $modalTitle = 'New <$ relatedCrudModel.name $>';\r\n\r\n    protected $rules = [\r\n        <% for (let input of this.relatedCrud.inputs) { %>\r\n            <###>\r\n            <% if(input.hasValidation()) { %>\r\n            <% let inputName = (input.canUseLivewireReference()) ? input.livewireInputReference : input.getLivewireSingleName() %>\r\n            '<$ inputName $>' => <$ input.getValidationForTemplate() $>,\r\n            <% } %>\r\n        <% } %>\r\n    ];\r\n\r\n    public function mount(<$ parentCrudModel.name $> $<$ parentCrudModelNameCamelCase $>): void\r\n    {\r\n        $this-><$ parentCrudModelNameCamelCase $> = $<$ parentCrudModelNameCamelCase $>;\r\n        <% if(this.relatedCrud.hasBelongsToInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getBelongsToInputsGroupedByCollection()) { %>\r\n                <# Default values for belongsTo inputs #>\r\n                <% if(input.relationship.modelId !== relatedCrudModel.id) { %>\r\n                <% let relationshipModel = input.relationship.model %>\r\n                $this-><$ input.getVariableForRelationshipSelect() $> = <$ relationshipModel.name $>::pluck('<$ relationshipModel.getLabelFieldName() $>', '<$ relationshipModel.getPrimaryKeyName() $>');\r\n                <% } %>\r\n            <% } %>\r\n        <% } %>\r\n        $this->reset<$ relatedCrudModel.name.case('pascalCase') $>Data();\r\n    }\r\n\r\n    public function reset<$ relatedCrudModel.name.case('pascalCase') $>Data(): void\r\n    {\r\n        $this-><$ relatedCrudModelNameCamelCase $> = new <$ relatedCrudModel.name $>();\r\n\r\n        <# Reset password inputs #>\r\n        <% if(this.relatedCrud.hasPasswordInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getPasswordInputs()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = '';\r\n            <% } %>\r\n        <% } %>\r\n        <# Reset file inputs #>\r\n        <% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getFileAndImageInputs()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = null;\r\n            <% } %>\r\n        <% } %>\r\n        <# Reset date inputs #>\r\n        <% for(let input of this.relatedCrud.getDateAndDatetimeInputs()) { %>\r\n            <###>\r\n            <% if(input.isLinkedToField()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = null;\r\n            <% } %>\r\n        <% } %>\r\n        <# Reset select inputs #>\r\n        <% if(this.relatedCrud.hasSelectInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getSelectInputs()) { %>\r\n                <###>\r\n                <% if(input.defaultValue) { %>\r\n                $this-><$ input.getLivewirePropertyReference() $> = '<$ input.defaultValue $>';\r\n                <% } else { %>\r\n                <% let firstItem = input.getFirstItem() %>\r\n                $this-><$ input.getLivewirePropertyReference() $> = <$ firstItem ? `'${firstItem.value}'` : 'null' $>;\r\n                <% } %>\r\n            <% } %>\r\n        <% } %>\r\n\r\n        $this->dispatchBrowserEvent('refresh');\r\n    }\r\n\r\n    public function new<$ relatedCrudModel.name.case('pascalCase') $>(): void\r\n    {\r\n        $this->editing = false;\r\n        $this->modalTitle = trans('crud.<$ this.relatedCrud.name.case('snakeCase') $>.new_title');\r\n        $this->reset<$ relatedCrudModel.name.case('pascalCase') $>Data();\r\n\r\n        $this->showModal();\r\n    }\r\n\r\n    public function view<$ relatedCrudModel.name.case('pascalCase') $>(<$ relatedCrudModel.name $> $<$ relatedCrudModelNameCamelCase $>): void\r\n    {\r\n        $this->editing = false;\r\n        $this->modalTitle = trans('crud.<$ this.relatedCrud.name.case('snakeCase') $>.show_title');\r\n        $this-><$ relatedCrudModelNameCamelCase $> = $<$ relatedCrudModelNameCamelCase $>;\r\n\r\n        <% for(let input of this.relatedCrud.getDatetimeInputs()) { %>\r\n            <###>\r\n            <% if(input.isLinkedToField()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = optional($this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $>)->format('Y-m-d H:i:s');\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <% for(let input of this.relatedCrud.getDateInputs()) { %>\r\n            <###>\r\n            <% if(input.isLinkedToField()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = optional($this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $>)->format('Y-m-d');\r\n            <% } %>\r\n        <% } %>\r\n\r\n        $this->dispatchBrowserEvent('refresh');\r\n\r\n        $this->showModalView();\r\n    }\r\n\r\n    public function edit<$ relatedCrudModel.name.case('pascalCase') $>(<$ relatedCrudModel.name $> $<$ relatedCrudModelNameCamelCase $>): void\r\n    {\r\n        $this->editing = true;\r\n        $this->modalTitle = trans('crud.<$ this.relatedCrud.name.case('snakeCase') $>.edit_title');\r\n        $this-><$ relatedCrudModelNameCamelCase $> = $<$ relatedCrudModelNameCamelCase $>;\r\n\r\n        <% for(let input of this.relatedCrud.getDatetimeInputs()) { %>\r\n            <###>\r\n            <% if(input.isLinkedToField()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = optional($this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $>)->format('Y-m-d H:i:s');\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <% for(let input of this.relatedCrud.getDateInputs()) { %>\r\n            <###>\r\n            <% if(input.isLinkedToField()) { %>\r\n            $this-><$ input.getLivewireSingleName() $> = optional($this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $>)->format('Y-m-d');\r\n            <% } %>\r\n        <% } %>\r\n\r\n        $this->dispatchBrowserEvent('refresh');\r\n\r\n        $this->showModalForm();\r\n    }\r\n\r\n    public function showModalView(): void\r\n    {\r\n        $this->resetErrorBag();\r\n        $this->showingModalView = true;\r\n        $this->showingModalForm = false;\r\n    }\r\n\r\n    public function showModalForm(): void\r\n    {\r\n        $this->resetErrorBag();\r\n        $this->showingModalView = false;\r\n        $this->showingModalForm = true;\r\n    }\r\n\r\n    public function hideModal(): void\r\n    {\r\n        $this->showingModalView = false;\r\n        $this->showingModalForm = false;\r\n    }\r\n\r\n    public function save(): void\r\n    {\r\n        <% if(this.relatedCrud.hasDifferentUpdateValidation()) { %>\r\n        if(!$this-><$ relatedCrudModelNameCamelCase $>-><$ relForeignKeyName $>) {\r\n            $this->validate();\r\n        } else {\r\n            $this->validate([\r\n                <% for (let input of this.relatedCrud.inputs) { %>\r\n                    <###>\r\n                    <% let inputName = (input.canUseLivewireReference()) ? input.livewireInputReference : input.getLivewireSingleName() %>\r\n                    <% if(input.hasUpdateValidation()) { %>\r\n                    '<$ inputName $>' => <$ input.getUpdateValidationWithUniqueRules(true) $>,\r\n                    <% } else { %>\r\n                    '<$ inputName $>' => 'nullable',\r\n                    <% } %>\r\n                <% } %>\r\n            ]);\r\n        }\r\n        <% } else { %>\r\n        $this->validate();\r\n        <% } %>\r\n\r\n        if(!$this-><$ relatedCrudModelNameCamelCase $>-><$ relForeignKeyName $>) {\r\n            $this->authorize('create', <$ relatedCrudModel.name $>::class);\r\n\r\n            $this-><$ relatedCrudModelNameCamelCase $>-><$ relForeignKeyName $> = $this-><$ parentCrudModelNameCamelCase $>-><$ parentCrudModel.getPrimaryKeyName() $>;\r\n        } else {\r\n            $this->authorize('update', $this-><$ relatedCrudModelNameCamelCase $>);\r\n        }\r\n\r\n        <# Password Inputs #>\r\n        <% if(this.relatedCrud.hasPasswordInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getPasswordInputs()) { %>\r\n            if(!empty($this-><$ input.getLivewireSingleName() $>)) {\r\n                $this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $> = Hash::make($this-><$ input.getLivewireSingleName() $>);\r\n            }\r\n            <% } %>\r\n\r\n        <% } %>\r\n\r\n        <# File Inputs #>\r\n        <% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getFileAndImageInputs()) { %>\r\n            if($this-><$ input.getLivewireSingleName() $>) {\r\n                $this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $> = $this-><$ input.getLivewireSingleName() $>->store('public');\r\n            }\r\n\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <# Json Inputs #>\r\n        <% if(this.relatedCrud.hasJsonInputs()) { %>\r\n            <###>\r\n            <% for(let input of this.relatedCrud.getJsonInputs()) { %>\r\n            $this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $> = json_decode($this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $>, true);\r\n\r\n            <% } %>\r\n        <% } %>\r\n\r\n        <# Date Inputs #>\r\n        <% for(let input of this.relatedCrud.getDateAndDatetimeInputs()) { %>\r\n            <###>\r\n            <% if(input.isLinkedToField()) { %>\r\n            $this-><$ relatedCrudModelNameCamelCase $>-><$ input.name $> = \\Carbon\\Carbon::make($this-><$ input.getLivewireSingleName() $>);\r\n            <% } %>\r\n        <% } %>\r\n\r\n        $this-><$ relatedCrudModelNameCamelCase $>->save();\r\n\r\n        <% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\n        $this->uploadIteration++;\r\n        <% } %>\r\n\r\n        $this->hideModal();\r\n    }\r\n\r\n    public function destroySelected(): void\r\n    {\r\n        $this->authorize('delete-any', <$ relatedCrudModel.name $>::class);\r\n\r\n        <% if(this.relatedCrud.hasFileOrImageInputs()) { %>\r\n        collect($this->selected)->each(function(string $id) {\r\n            $<$ relatedCrudModelNameCamelCase $> = <$ relatedCrudModel.name $>::findOrFail($id);\r\n\r\n            <# Destroy file when destroying the item #>\r\n            <% for(let input of this.relatedCrud.getFileAndImageInputs()) { %>\r\n            if($<$ relatedCrudModelNameCamelCase $>-><$ input.name $>) {\r\n                Storage::delete($<$ relatedCrudModelNameCamelCase $>-><$ input.name $>);\r\n            }\r\n\r\n            <% } %>\r\n            $<$ relatedCrudModelNameCamelCase $>->delete();\r\n        });\r\n        <% } else { %>\r\n        <$relatedCrudModel.name $>::whereIn('<$relatedCrudModel.getPrimaryKeyName() $>', $this->selected)->delete();\r\n        <% } %>\r\n\r\n        $this->selected = [];\r\n        $this->allSelected = false;\r\n\r\n        $this->reset<$ relatedCrudModel.name.case('pascalCase') $>Data();\r\n    }\r\n\r\n    public function toggleFullSelection(): void\r\n    {\r\n        if(!$this->allSelected) {\r\n            $this->selected = [];\r\n            return;\r\n        }\r\n\r\n        foreach ($this-><$ parentCrudModelNameCamelCase $>-><$ relatedCrudModelPluralCamelCase $> as $<$ relatedCrudModelNameCamelCase $>) {\r\n            array_push($this->selected, $<$ relatedCrudModelNameCamelCase $>->id);\r\n        }\r\n    }\r\n\r\n    public function render(): View\r\n    {\r\n        return view('livewire.<$ this.detail.getLivewireViewName() $>', [\r\n            '<$ relatedCrudModelPluralCamelCase $>' => $this-><$ parentCrudModelNameCamelCase $>-><$ relatedCrudModelPluralCamelCase $>()->paginate(100)\r\n        ]);\r\n    }\r\n}\r\n",
                        "ignorePlugins": false
                    },
                    "views/frameworks/tailwind/HasManyDetailLivewireView.vemtl": {
                        "path": "views/frameworks/tailwind/HasManyDetailLivewireView.vemtl",
                        "content": "<# TEMPLATE VARIABLES #>\r\n<% let modelPluralParamCase = this.relatedCrud.model.plural.case('paramCase') %>\r\n<% let modelNameCamelCase = this.relatedCrud.model.name.case('camelCase') %>\r\n<% let crudNameSnakeCase = this.relatedCrud.model.name.case('snakeCase') %>\r\n<div>\r\n    <div>\r\n        @can('create', <$ this.projectHelper.getModelsNamespace() $>\\<$ this.relatedCrud.model.name $>::class)\r\n            <button class=\"button\" wire:click=\"new<$ this.relatedCrud.model.name.case('pascalCase') $>\">\r\n                <i class=\"mr-1 icon ion-md-add text-primary\"></i>\r\n                @lang('crud.common.new')\r\n            </button>\r\n        @endcan\r\n\r\n        @can('delete-any', <$ this.projectHelper.getModelsNamespace() $>\\<$ this.relatedCrud.model.name $>::class)\r\n            <button class=\"button button-danger\" {{ empty($selected) ? 'disabled' : '' }} onclick=\"confirm('{{ __('crud.common.are_you_sure') }}') || event.stopImmediatePropagation()\" wire:click=\"destroySelected\" >\r\n                <i class=\"mr-1 icon ion-md-trash text-primary\"></i>\r\n                @lang('crud.common.delete_selected')\r\n            </button>\r\n        @endcan\r\n    </div>\r\n\r\n    <x-modal wire:model=\"showingModalView\">\r\n        <div class=\"px-6 py-4\">\r\n            <div class=\"text-lg font-bold\">{{ $modalTitle }}</div>\r\n\r\n            <div class=\"mt-5\">\r\n                <div class=\"flex flex-wrap\">\r\n                    <# CRUD inputs elements #>\r\n                    <% for(let input of this.relatedCrud.inputs) { %>\r\n                        <% if(input.isLinkedToField() && input.onShow) { %>\r\n                            <# Input types #>\r\n                            <div class=\"mb-4 <$ this.project.css().getReponsiveClassesForInput(input) $>\">\r\n                                <h5 class=\"font-medium text-gray-700\">\r\n                                    @lang('crud.<$ modelPluralParamCase $>.inputs.<$ input.name $>')\r\n                                </h5>\r\n                            <% if(input.isImage()) { %>\r\n                                <x-partials.thumbnail \r\n                                    src=\"{{ $<$ modelNameCamelCase $>-><$ input.name $> ? \\Storage::url($<$ modelNameCamelCase $>-><$ input.name $>) : '' }}\" \r\n                                    size=\"150\"\r\n                                />\r\n                            <% } else if (input.isFile()) { %>\r\n                                @if($<$ modelNameCamelCase $>-><$ input.name $>)\r\n                                    <a href=\"{{ \\Storage::url($<$ modelNameCamelCase $>-><$ input.name $>) }}\" target=\"blank\">\r\n                                        <i class=\"mr-1 icon ion-md-download\"></i>\r\n                                        Download\r\n                                    </a>\r\n                                @else\r\n                                    -\r\n                                @endif\r\n                            <% } else if(input.isForRelationship()) { %>\r\n                                <span>\r\n                                    {{ optional($<$ modelNameCamelCase $>-><$ input.relationship.name $>)-><$ input.relationship.model.getLabelFieldName() $> ?? '-' }}\r\n                                </span>\r\n                            <% } else if(input.type == 'time') { %>\r\n                                <span>\r\n                                    {{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('H:i') }}\r\n                                </span>\r\n                            <% } else if(input.type == 'datetime') { %>\r\n                                <span>\r\n                                    {{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('l, d F Y, H:i') }}\r\n                                </span>\r\n                            <% } else if(input.isDate()) { %>\r\n                                <span>\r\n                                    {{ optional($<$ modelNameCamelCase $>-><$ input.name $>)->format('l, d F Y') }}\r\n                                </span>\r\n                            <% } else if(input.isJson()) { %>\r\n                                <pre>\r\n                                    {{ json_encode($<$ modelNameCamelCase $>-><$ input.name $>) ?? '-' }}\r\n                                </pre>\r\n                            <% } else if(input.isUrl()) {  %>\r\n                                <a class=\"underline cursor-pointer\" target=\"_blank\" href=\"{{ $<$ modelNameCamelCase $>-><$ input.name $> }}\">\r\n                                    {{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}\r\n                                </a>\r\n                            <% } else { %>\r\n                                <span>\r\n                                    {{ $<$ modelNameCamelCase $>-><$ input.name $> ?? '-' }}\r\n                                </span>\r\n                            <% } %>\r\n                            </div>\r\n                        <% } %>\r\n                    <% } %>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"px-6 py-4 bg-gray-50 flex justify-between\">\r\n            <button\r\n                type=\"button\"\r\n                class=\"button\"\r\n                wire:click=\"$toggle('showingModalView')\"\r\n            >\r\n                <i class=\"mr-1 icon ion-md-close\"></i>\r\n                @lang('text.close')\r\n            </button>\r\n            @can('update', $<$ modelNameCamelCase $>)\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"button mr-1\"\r\n                    wire:click=\"edit<$ this.relatedCrud.model.name.case('pascalCase') $>('{{ $<$ modelNameCamelCase $>->id }}')\"\r\n                >\r\n                    <i class=\"mr-1 icon ion-md-create\"></i>\r\n                    @lang('crud.common.edit')\r\n                </button>\r\n            @endcan\r\n        </div>\r\n    </x-modal>\r\n\r\n    <x-modal wire:model=\"showingModalForm\">\r\n        <div class=\"px-6 py-4\">\r\n            <div class=\"text-lg font-bold\">\r\n                {{ $modalTitle }}\r\n            </div>\r\n\r\n            <div class=\"mt-5\">\r\n                <div class=\"flex flex-wrap\">\r\n                    <% for(let input of this.relatedCrud.inputs) { %>\r\n                        <% if(!input.isComputed && (input.onCreate || input.onUpdate)) { %>\r\n                            <###>\r\n                            <% let inputOnlyForCreate = input.onCreate && !input.onUpdate %>\r\n                            <% let inputOnlyForUpdate = input.onUpdate && !input.onCreate %>\r\n                            <###>\r\n                            <% if(inputOnlyForCreate) { %>\r\n                                @if(!$<$ this.relatedCrud.model.name.case('camelCase') $>->exists)\r\n                            <% } %>\r\n                            <###>\r\n                            <% if(inputOnlyForUpdate) { %>\r\n                                @if($<$ this.relatedCrud.model.name.case('camelCase') $>->exists)\r\n                            <% } %>\r\n                            <# We'll replace this [INPUT:id] code with input template #>\r\n                            [INPUT:<$ input.id $>]\r\n                            <###>\r\n                            <% if(inputOnlyForCreate || inputOnlyForUpdate) { %>\r\n                                @endif\r\n                            <% } %>\r\n                        <% } %>\r\n                    <% } %>\r\n                </div>\r\n            </div>\r\n\r\n            <% if(this.relatedCrud.hasManyDetails.length > 0) { %>\r\n                @if($editing)\r\n                    <% for(let detail of this.relatedCrud.hasManyDetails) { %>\r\n                        @can('view-any', <$ this.projectHelper.getModelsNamespace() $>\\<$ detail.relatedCrud.model.name $>::class)\r\n                            <x-partials.card class=\"mt-5 shadow-none bg-gray-50\">\r\n                                <h4 class=\"text-sm text-gray-600 font-bold mb-3\">\r\n                                    <$ detail.name $>\r\n                                </h4>\r\n\r\n                                <livewire:<$ detail.getLivewireViewName() $> :<$ detail.crud.model.name.case('camelCase') $>=\"$<$ detail.crud.model.name.case('camelCase') $>\" />\r\n                            </x-partials.card>\r\n                        @endcan\r\n                    <% } %>\r\n                @endif\r\n            <% } %>\r\n        </div>\r\n\r\n        <div class=\"px-6 py-4 bg-gray-50 flex justify-between\">\r\n            <button type=\"button\" class=\"button\" wire:click=\"$toggle('showingModalForm')\">\r\n                <i class=\"mr-1 icon ion-md-close\"></i>\r\n                @lang('crud.common.cancel')\r\n            </button>\r\n\r\n            <button type=\"button\" class=\"button button-primary\" wire:click=\"save\">\r\n                <i class=\"mr-1 icon ion-md-save\"></i>\r\n                @lang('crud.common.save')\r\n            </button>\r\n        </div>\r\n    </x-modal>\r\n\r\n    <% let cols = 1 %>\r\n    <div class=\"block w-full overflow-auto scrolling-touch mt-4\">\r\n        <table class=\"w-full max-w-full mb-4 bg-transparent\">\r\n            <thead class=\"text-gray-700\">\r\n            <tr>\r\n                <th class=\"px-4 py-3 text-left w-1\">\r\n                    <input type=\"checkbox\" wire:model=\"allSelected\" wire:click=\"toggleFullSelection\" title=\"{{ trans('crud.common.select_all') }}\">\r\n                </th>\r\n                <% for(let input of this.relatedCrud.inputs) { %>\r\n                    <% if(input.onIndex && input.isAllowedOnIndexPages()) { %>\r\n                        <% cols++ %>\r\n                        <% if(input.isNumeric()) { %>\r\n                            <th class=\"px-4 py-3 text-right\">\r\n                                @lang('crud.<$ this.relatedCrud.name.case('snakeCase') $>.inputs.<$ input.name $>')\r\n                            </th>\r\n                        <% } else { %>\r\n                            <th class=\"px-4 py-3 text-left\">\r\n                                @lang('crud.<$ this.relatedCrud.name.case('snakeCase') $>.inputs.<$ input.name $>')\r\n                            </th>\r\n                        <% } %>\r\n                    <% } %>\r\n                <% } %>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody class=\"text-gray-600\">\r\n            @foreach ($<$ this.relatedCrud.model.plural.case('camelCase') $> as $<$ this.relatedCrud.model.name.case('camelCase') $>)\r\n                <tr class=\"hover:bg-gray-100\">\r\n                    <td class=\"px-4 py-3 text-left\">\r\n                        <input type=\"checkbox\" value=\"{{ $<$ this.relatedCrud.model.name.case('camelCase') $>->id }}\" wire:model=\"selected\">\r\n                    </td>\r\n                    <% for(let input of this.relatedCrud.inputs) { %>\r\n                        <# COMPUTED INPUT #>\r\n                        <% if(input.isComputed && input.onIndex) { %>\r\n                            <% if(input.isNumeric()) { %>\r\n                                <td class=\"px-4 py-3 text-right\">{{ <$ input.computedFormula $> }}</td>\r\n                            <% } else { %>\r\n                                <td class=\"px-4 py-3 text-left\">{{ <$ input.computedFormula $> }}</td>\r\n                            <% } %>\r\n                        <% } %>\r\n                        <# INPUT LINKED TO FIELD #>\r\n                        <% if(input.isLinkedToField() && input.onIndex) { %>\r\n                            <% if(input.isImage()) { %>\r\n                                <td class=\"px-4 py-3 text-left\">\r\n                                    <x-partials.thumbnail src=\"{{ $<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $> ? \\Storage::url($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>) : '' }}\"/>\r\n                                </td>\r\n                            <% } else if(input.isFile()) { %>\r\n                                <td class=\"px-4 py-3 text-left\">\r\n                                    @if($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>)\r\n                                        <a href=\"{{ \\Storage::url($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>) }}\" target=\"blank\">\r\n                                            <i class=\"mr-1 icon ion-md-download\"></i>\r\n                                            Download\r\n                                        </a>\r\n                                    @else\r\n                                        -\r\n                                    @endif\r\n                                </td>\r\n                            <% } else { %>\r\n                                <% if(input.isForRelationship()) { %>\r\n                                    <td class=\"px-4 py-3 text-left\">\r\n                                        {{ optional($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.relationship.name $>)-><$ input.relationship.model.getLabelFieldName() $> ?? '-' }}\r\n                                    </td>\r\n                                <% } else if(input.isNumeric()) { %>\r\n                                    <td class=\"px-4 py-3 text-right\">\r\n                                        {{ $<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $> ?? '-' }}\r\n                                    </td>\r\n                                <% } else if(input.isJson()) { %>\r\n                                    <td class=\"px-4 py-3 text-right\">\r\n                                        <pre>\r\n                                            {{ json_encode($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>) ?? '-' }}\r\n                                        </pre>\r\n                                    </td>\r\n                                <% } else if(input.type == 'datetime') { %>\r\n                                    <td class=\"px-4 py-3 text-left\">\r\n                                        {{ optional($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>)->format('D, d M Y, H:i') }}\r\n                                    </td>\r\n                                <% } else if(input.type == 'time') { %>\r\n                                    <td class=\"px-4 py-3 text-left\">    \r\n                                        {{ optional($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>)->format('H:i') }}\r\n                                    </td>\r\n                                <% } else if(input.isDate()) { %>\r\n                                    <td class=\"px-4 py-3 text-left\">\r\n                                        {{ optional($<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $>)->format('D, d M Y') }}\r\n                                    </td>\r\n                                <% } else { %>\r\n                                    <td class=\"px-4 py-3 text-left\">\r\n                                        {{ $<$ this.relatedCrud.model.name.case('camelCase') $>-><$ input.name $> ?? '-' }}\r\n                                    </td>\r\n                                <% } %>\r\n                            <% } %>\r\n                        <% } %>\r\n                    <% } %>\r\n                    <td class=\"px-4 py-3 text-right\" style=\"width: 134px;\">\r\n                        <div role=\"group\" aria-label=\"Row Actions\" class=\"relative inline-flex align-middle\" >\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"button mr-1\"\r\n                                    wire:click=\"view<$ this.relatedCrud.model.name.case('pascalCase') $>('{{ $<$ this.relatedCrud.model.name.case('camelCase') $>->id }}')\"\r\n                            >\r\n                                <i class=\"icon ion-md-eye\"></i>\r\n                            </button>\r\n                            @can('update', $<$ this.relatedCrud.model.name.case('camelCase') $>)\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"button mr-1\"\r\n                                    wire:click=\"edit<$ this.relatedCrud.model.name.case('pascalCase') $>('{{ $<$ this.relatedCrud.model.name.case('camelCase') $>->id }}')\"\r\n                                >\r\n                                    <i class=\"icon ion-md-create\" ></i>\r\n                                </button>\r\n                            @endcan\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            @endforeach\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=\"<$ cols $>\">\r\n                        <div class=\"mt-10 px-4\">\r\n                            {{ $<$ this.relatedCrud.model.plural.case('camelCase') $>->render() }}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n    </div>\r\n\r\n</div>\r\n",
                        "ignorePlugins": false
                    }
                },
                "usesVite": true,
                "id": 12,
                "createdAt": "2023-05-11 05:39:57",
                "updatedAt": "2024-06-04 21:43:45"
            }
        },
        "manytomanycomponents": {},
        "manytomanydetails": {},
        "dependentselects": {},
        "manytomanyrelationships": {},
        "morphrelationships": {},
        "hasmanythroughrelatioships": {}
    },
    "exportedItems": [
        "projects:12"
    ],
    "exportedRelationships": [
        "Project:12:cruds",
        "Crud:158:inputs",
        "Crud:158:manyToManyComponents",
        "Crud:158:hasManyDetails",
        "Crud:158:manyToManyDetails",
        "Crud:158:dependentSelects",
        "Crud:187:inputs",
        "Crud:187:manyToManyComponents",
        "Crud:187:hasManyDetails",
        "Crud:187:manyToManyDetails",
        "Crud:187:dependentSelects",
        "Crud:188:inputs",
        "Crud:188:manyToManyComponents",
        "Crud:188:hasManyDetails",
        "HasManyDetail:129:relatedCrud",
        "Crud:189:inputs",
        "Crud:189:manyToManyComponents",
        "Crud:189:hasManyDetails",
        "Crud:189:manyToManyDetails",
        "Crud:189:dependentSelects",
        "Crud:188:manyToManyDetails",
        "Crud:188:dependentSelects",
        "Crud:190:inputs",
        "Crud:190:manyToManyComponents",
        "Crud:190:hasManyDetails",
        "Crud:190:manyToManyDetails",
        "Crud:190:dependentSelects",
        "Crud:191:inputs",
        "Crud:191:manyToManyComponents",
        "Crud:191:hasManyDetails",
        "Crud:191:manyToManyDetails",
        "Crud:191:dependentSelects",
        "Crud:196:inputs",
        "Crud:196:manyToManyComponents",
        "Crud:196:hasManyDetails",
        "Crud:196:manyToManyDetails",
        "Crud:196:dependentSelects",
        "Project:12:entities",
        "Entity:185:authProject",
        "Entity:185:cruds",
        "Entity:185:fields",
        "Field:1730:inputs",
        "Field:1730:foreign",
        "Field:1730:relatedForeigns",
        "Foreign:184:inputs",
        "Field:1730:basicParentRelationships",
        "BasicRelationship:368:inputs",
        "BasicRelationship:368:contrary",
        "BasicRelationship:367:inputs",
        "BasicRelationship:367:contrary",
        "BasicRelationship:368:hasManyDetails",
        "BasicRelationship:367:hasManyDetails",
        "Field:1730:basicForeignRelationships",
        "Field:1730:manyToManyModelRelationships",
        "Field:1730:manyToManylocalModelRelationships",
        "Field:1730:typedMorphRelationships",
        "Field:1730:identifiedMorphRelationships",
        "Field:2001:inputs",
        "Field:2001:foreign",
        "Field:2001:relatedForeigns",
        "Field:2001:basicParentRelationships",
        "Field:2001:basicForeignRelationships",
        "Field:2001:manyToManyModelRelationships",
        "Field:2001:manyToManylocalModelRelationships",
        "Field:2001:typedMorphRelationships",
        "Field:2001:identifiedMorphRelationships",
        "Field:2002:inputs",
        "Field:2002:foreign",
        "Field:2002:relatedForeigns",
        "Field:2002:basicParentRelationships",
        "Field:2002:basicForeignRelationships",
        "Field:2002:manyToManyModelRelationships",
        "Field:2002:manyToManylocalModelRelationships",
        "Field:2002:typedMorphRelationships",
        "Field:2002:identifiedMorphRelationships",
        "Field:1731:inputs",
        "Field:1731:foreign",
        "Foreign:162:inputs",
        "Field:1731:relatedForeigns",
        "Field:1731:basicParentRelationships",
        "Field:1731:basicForeignRelationships",
        "BasicRelationship:323:inputs",
        "BasicRelationship:323:contrary",
        "BasicRelationship:324:inputs",
        "BasicRelationship:324:contrary",
        "BasicRelationship:323:hasManyDetails",
        "BasicRelationship:324:hasManyDetails",
        "Field:1731:manyToManyModelRelationships",
        "Field:1731:manyToManylocalModelRelationships",
        "Field:1731:typedMorphRelationships",
        "Field:1731:identifiedMorphRelationships",
        "Field:1743:inputs",
        "Field:1743:foreign",
        "Field:1743:relatedForeigns",
        "Field:1743:basicParentRelationships",
        "Field:1743:basicForeignRelationships",
        "Field:1743:manyToManyModelRelationships",
        "Field:1743:manyToManylocalModelRelationships",
        "Field:1743:typedMorphRelationships",
        "Field:1743:identifiedMorphRelationships",
        "Field:1995:inputs",
        "Field:1995:foreign",
        "Field:1995:relatedForeigns",
        "Field:1995:basicParentRelationships",
        "Field:1995:basicForeignRelationships",
        "Field:1995:manyToManyModelRelationships",
        "Field:1995:manyToManylocalModelRelationships",
        "Field:1995:typedMorphRelationships",
        "Field:1995:identifiedMorphRelationships",
        "Field:1735:inputs",
        "Field:1735:foreign",
        "Field:1735:relatedForeigns",
        "Field:1735:basicParentRelationships",
        "Field:1735:basicForeignRelationships",
        "Field:1735:manyToManyModelRelationships",
        "Field:1735:manyToManylocalModelRelationships",
        "Field:1735:typedMorphRelationships",
        "Field:1735:identifiedMorphRelationships",
        "Field:1736:inputs",
        "Field:1736:foreign",
        "Field:1736:relatedForeigns",
        "Field:1736:basicParentRelationships",
        "Field:1736:basicForeignRelationships",
        "Field:1736:manyToManyModelRelationships",
        "Field:1736:manyToManylocalModelRelationships",
        "Field:1736:typedMorphRelationships",
        "Field:1736:identifiedMorphRelationships",
        "Field:1996:inputs",
        "Field:1996:foreign",
        "Field:1996:relatedForeigns",
        "Field:1996:basicParentRelationships",
        "Field:1996:basicForeignRelationships",
        "Field:1996:manyToManyModelRelationships",
        "Field:1996:manyToManylocalModelRelationships",
        "Field:1996:typedMorphRelationships",
        "Field:1996:identifiedMorphRelationships",
        "Field:1739:inputs",
        "Field:1739:foreign",
        "Field:1739:relatedForeigns",
        "Field:1739:basicParentRelationships",
        "Field:1739:basicForeignRelationships",
        "Field:1739:manyToManyModelRelationships",
        "Field:1739:manyToManylocalModelRelationships",
        "Field:1739:typedMorphRelationships",
        "Field:1739:identifiedMorphRelationships",
        "Field:1738:inputs",
        "Field:1738:foreign",
        "Field:1738:relatedForeigns",
        "Field:1738:basicParentRelationships",
        "Field:1738:basicForeignRelationships",
        "Field:1738:manyToManyModelRelationships",
        "Field:1738:manyToManylocalModelRelationships",
        "Field:1738:typedMorphRelationships",
        "Field:1738:identifiedMorphRelationships",
        "Field:1737:inputs",
        "Field:1737:foreign",
        "Field:1737:relatedForeigns",
        "Field:1737:basicParentRelationships",
        "Field:1737:basicForeignRelationships",
        "Field:1737:manyToManyModelRelationships",
        "Field:1737:manyToManylocalModelRelationships",
        "Field:1737:typedMorphRelationships",
        "Field:1737:identifiedMorphRelationships",
        "Field:1742:inputs",
        "Field:1742:foreign",
        "Field:1742:relatedForeigns",
        "Field:1742:basicParentRelationships",
        "Field:1742:basicForeignRelationships",
        "Field:1742:manyToManyModelRelationships",
        "Field:1742:manyToManylocalModelRelationships",
        "Field:1742:typedMorphRelationships",
        "Field:1742:identifiedMorphRelationships",
        "Field:1734:inputs",
        "Field:1734:foreign",
        "Field:1734:relatedForeigns",
        "Field:1734:basicParentRelationships",
        "Field:1734:basicForeignRelationships",
        "Field:1734:manyToManyModelRelationships",
        "Field:1734:manyToManylocalModelRelationships",
        "Field:1734:typedMorphRelationships",
        "Field:1734:identifiedMorphRelationships",
        "Field:1733:inputs",
        "Field:1733:foreign",
        "Field:1733:relatedForeigns",
        "Field:1733:basicParentRelationships",
        "Field:1733:basicForeignRelationships",
        "Field:1733:manyToManyModelRelationships",
        "Field:1733:manyToManylocalModelRelationships",
        "Field:1733:typedMorphRelationships",
        "Field:1733:identifiedMorphRelationships",
        "Field:1732:inputs",
        "Field:1732:foreign",
        "Field:1732:relatedForeigns",
        "Field:1732:basicParentRelationships",
        "Field:1732:basicForeignRelationships",
        "Field:1732:manyToManyModelRelationships",
        "Field:1732:manyToManylocalModelRelationships",
        "Field:1732:typedMorphRelationships",
        "Field:1732:identifiedMorphRelationships",
        "Field:1740:inputs",
        "Field:1740:foreign",
        "Field:1740:relatedForeigns",
        "Field:1740:basicParentRelationships",
        "Field:1740:basicForeignRelationships",
        "Field:1740:manyToManyModelRelationships",
        "Field:1740:manyToManylocalModelRelationships",
        "Field:1740:typedMorphRelationships",
        "Field:1740:identifiedMorphRelationships",
        "Field:1741:inputs",
        "Field:1741:foreign",
        "Field:1741:relatedForeigns",
        "Field:1741:basicParentRelationships",
        "Field:1741:basicForeignRelationships",
        "Field:1741:manyToManyModelRelationships",
        "Field:1741:manyToManylocalModelRelationships",
        "Field:1741:typedMorphRelationships",
        "Field:1741:identifiedMorphRelationships",
        "Field:2044:inputs",
        "Field:2044:foreign",
        "Field:2044:relatedForeigns",
        "Field:2044:basicParentRelationships",
        "Field:2044:basicForeignRelationships",
        "Field:2044:manyToManyModelRelationships",
        "Field:2044:manyToManylocalModelRelationships",
        "Field:2044:typedMorphRelationships",
        "Field:2044:identifiedMorphRelationships",
        "Field:1997:inputs",
        "Field:1997:foreign",
        "Field:1997:relatedForeigns",
        "Field:1997:basicParentRelationships",
        "Field:1997:basicForeignRelationships",
        "Field:1997:manyToManyModelRelationships",
        "Field:1997:manyToManylocalModelRelationships",
        "Field:1997:typedMorphRelationships",
        "Field:1997:identifiedMorphRelationships",
        "Field:2038:inputs",
        "Field:2038:foreign",
        "Field:2038:relatedForeigns",
        "Field:2038:basicParentRelationships",
        "Field:2038:basicForeignRelationships",
        "Field:2038:manyToManyModelRelationships",
        "Field:2038:manyToManylocalModelRelationships",
        "Field:2038:typedMorphRelationships",
        "Field:2038:identifiedMorphRelationships",
        "Field:2039:inputs",
        "Field:2039:foreign",
        "Field:2039:relatedForeigns",
        "Field:2039:basicParentRelationships",
        "Field:2039:basicForeignRelationships",
        "Field:2039:manyToManyModelRelationships",
        "Field:2039:manyToManylocalModelRelationships",
        "Field:2039:typedMorphRelationships",
        "Field:2039:identifiedMorphRelationships",
        "Entity:185:foreigns",
        "Entity:185:pivotRelationships",
        "Entity:185:pivotMorphRelationships",
        "Entity:185:basicRelationships",
        "Entity:185:hasManyThroughRelationships",
        "Entity:185:basicRelatedRelationships",
        "Entity:185:manyToManyRelationships",
        "Entity:185:manyToManyRelatedRelationships",
        "Entity:185:morphRelationships",
        "Entity:185:morphRelatedRelationships",
        "Entity:204:authProject",
        "Entity:204:cruds",
        "Entity:204:fields",
        "Field:1998:inputs",
        "Field:1998:foreign",
        "Field:1998:relatedForeigns",
        "Field:1998:basicParentRelationships",
        "Field:1998:basicForeignRelationships",
        "Field:1998:manyToManyModelRelationships",
        "Field:1998:manyToManylocalModelRelationships",
        "Field:1998:typedMorphRelationships",
        "Field:1998:identifiedMorphRelationships",
        "Field:2011:inputs",
        "Field:2011:foreign",
        "Field:2011:relatedForeigns",
        "Field:2011:basicParentRelationships",
        "Field:2011:basicForeignRelationships",
        "Field:2011:manyToManyModelRelationships",
        "Field:2011:manyToManylocalModelRelationships",
        "Field:2011:typedMorphRelationships",
        "Field:2011:identifiedMorphRelationships",
        "Field:2004:inputs",
        "Field:2004:foreign",
        "Field:2004:relatedForeigns",
        "Field:2004:basicParentRelationships",
        "Field:2004:basicForeignRelationships",
        "Field:2004:manyToManyModelRelationships",
        "Field:2004:manyToManylocalModelRelationships",
        "Field:2004:typedMorphRelationships",
        "Field:2004:identifiedMorphRelationships",
        "Field:2005:inputs",
        "Field:2005:foreign",
        "Field:2005:relatedForeigns",
        "Field:2005:basicParentRelationships",
        "Field:2005:basicForeignRelationships",
        "Field:2005:manyToManyModelRelationships",
        "Field:2005:manyToManylocalModelRelationships",
        "Field:2005:typedMorphRelationships",
        "Field:2005:identifiedMorphRelationships",
        "Field:2006:inputs",
        "Field:2006:foreign",
        "Field:2006:relatedForeigns",
        "Field:2006:basicParentRelationships",
        "Field:2006:basicForeignRelationships",
        "Field:2006:manyToManyModelRelationships",
        "Field:2006:manyToManylocalModelRelationships",
        "Field:2006:typedMorphRelationships",
        "Field:2006:identifiedMorphRelationships",
        "Field:2003:inputs",
        "Field:2003:foreign",
        "Field:2003:relatedForeigns",
        "Field:2003:basicParentRelationships",
        "Field:2003:basicForeignRelationships",
        "Field:2003:manyToManyModelRelationships",
        "Field:2003:manyToManylocalModelRelationships",
        "Field:2003:typedMorphRelationships",
        "Field:2003:identifiedMorphRelationships",
        "Field:2045:inputs",
        "Field:2045:foreign",
        "Field:2045:relatedForeigns",
        "Field:2045:basicParentRelationships",
        "Field:2045:basicForeignRelationships",
        "Field:2045:manyToManyModelRelationships",
        "Field:2045:manyToManylocalModelRelationships",
        "Field:2045:typedMorphRelationships",
        "Field:2045:identifiedMorphRelationships",
        "Field:2008:inputs",
        "Field:2008:foreign",
        "Field:2008:relatedForeigns",
        "Field:2008:basicParentRelationships",
        "Field:2008:basicForeignRelationships",
        "Field:2008:manyToManyModelRelationships",
        "Field:2008:manyToManylocalModelRelationships",
        "Field:2008:typedMorphRelationships",
        "Field:2008:identifiedMorphRelationships",
        "Field:2009:inputs",
        "Field:2009:foreign",
        "Field:2009:relatedForeigns",
        "Field:2009:basicParentRelationships",
        "Field:2009:basicForeignRelationships",
        "Field:2009:manyToManyModelRelationships",
        "Field:2009:manyToManylocalModelRelationships",
        "Field:2009:typedMorphRelationships",
        "Field:2009:identifiedMorphRelationships",
        "Field:2010:inputs",
        "Field:2010:foreign",
        "Field:2010:relatedForeigns",
        "Field:2010:basicParentRelationships",
        "Field:2010:basicForeignRelationships",
        "Field:2010:manyToManyModelRelationships",
        "Field:2010:manyToManylocalModelRelationships",
        "Field:2010:typedMorphRelationships",
        "Field:2010:identifiedMorphRelationships",
        "Field:2007:inputs",
        "Field:2007:foreign",
        "Field:2007:relatedForeigns",
        "Field:2007:basicParentRelationships",
        "Field:2007:basicForeignRelationships",
        "Field:2007:manyToManyModelRelationships",
        "Field:2007:manyToManylocalModelRelationships",
        "Field:2007:typedMorphRelationships",
        "Field:2007:identifiedMorphRelationships",
        "Field:2041:inputs",
        "Field:2041:foreign",
        "Field:2041:relatedForeigns",
        "Field:2041:basicParentRelationships",
        "Field:2041:basicForeignRelationships",
        "Field:2041:manyToManyModelRelationships",
        "Field:2041:manyToManylocalModelRelationships",
        "Field:2041:typedMorphRelationships",
        "Field:2041:identifiedMorphRelationships",
        "Field:2042:inputs",
        "Field:2042:foreign",
        "Field:2042:relatedForeigns",
        "Field:2042:basicParentRelationships",
        "Field:2042:basicForeignRelationships",
        "Field:2042:manyToManyModelRelationships",
        "Field:2042:manyToManylocalModelRelationships",
        "Field:2042:typedMorphRelationships",
        "Field:2042:identifiedMorphRelationships",
        "Entity:204:foreigns",
        "Entity:204:pivotRelationships",
        "Entity:204:pivotMorphRelationships",
        "Entity:204:basicRelationships",
        "Entity:204:hasManyThroughRelationships",
        "Entity:204:basicRelatedRelationships",
        "Entity:204:manyToManyRelationships",
        "Entity:204:manyToManyRelatedRelationships",
        "Entity:204:morphRelationships",
        "Entity:204:morphRelatedRelationships",
        "Entity:184:authProject",
        "Project:12:comments",
        "Entity:184:cruds",
        "Entity:184:fields",
        "Field:1719:inputs",
        "Field:1719:foreign",
        "Field:1719:relatedForeigns",
        "Foreign:185:inputs",
        "Foreign:186:inputs",
        "Foreign:187:inputs",
        "Field:1719:basicParentRelationships",
        "BasicRelationship:370:inputs",
        "BasicRelationship:370:contrary",
        "BasicRelationship:369:inputs",
        "BasicRelationship:369:contrary",
        "BasicRelationship:370:hasManyDetails",
        "BasicRelationship:369:hasManyDetails",
        "BasicRelationship:372:inputs",
        "BasicRelationship:372:contrary",
        "BasicRelationship:371:inputs",
        "BasicRelationship:371:contrary",
        "BasicRelationship:372:hasManyDetails",
        "BasicRelationship:371:hasManyDetails",
        "BasicRelationship:374:inputs",
        "BasicRelationship:374:contrary",
        "BasicRelationship:373:inputs",
        "BasicRelationship:373:contrary",
        "BasicRelationship:374:hasManyDetails",
        "BasicRelationship:373:hasManyDetails",
        "Field:1719:basicForeignRelationships",
        "Field:1719:manyToManyModelRelationships",
        "Field:1719:manyToManylocalModelRelationships",
        "Field:1719:typedMorphRelationships",
        "Field:1719:identifiedMorphRelationships",
        "Field:1720:inputs",
        "Field:1720:foreign",
        "Field:1720:relatedForeigns",
        "Field:1720:basicParentRelationships",
        "Field:1720:basicForeignRelationships",
        "Field:1720:manyToManyModelRelationships",
        "Field:1720:manyToManylocalModelRelationships",
        "Field:1720:typedMorphRelationships",
        "Field:1720:identifiedMorphRelationships",
        "Field:1721:inputs",
        "Field:1721:foreign",
        "Field:1721:relatedForeigns",
        "Field:1721:basicParentRelationships",
        "Field:1721:basicForeignRelationships",
        "Field:1721:manyToManyModelRelationships",
        "Field:1721:manyToManylocalModelRelationships",
        "Field:1721:typedMorphRelationships",
        "Field:1721:identifiedMorphRelationships",
        "Field:1722:inputs",
        "Field:1722:foreign",
        "Field:1722:relatedForeigns",
        "Field:1722:basicParentRelationships",
        "Field:1722:basicForeignRelationships",
        "Field:1722:manyToManyModelRelationships",
        "Field:1722:manyToManylocalModelRelationships",
        "Field:1722:typedMorphRelationships",
        "Field:1722:identifiedMorphRelationships",
        "Field:1723:inputs",
        "Field:1723:foreign",
        "Field:1723:relatedForeigns",
        "Field:1723:basicParentRelationships",
        "Field:1723:basicForeignRelationships",
        "Field:1723:manyToManyModelRelationships",
        "Field:1723:manyToManylocalModelRelationships",
        "Field:1723:typedMorphRelationships",
        "Field:1723:identifiedMorphRelationships",
        "Field:1724:inputs",
        "Field:1724:foreign",
        "Field:1724:relatedForeigns",
        "Field:1724:basicParentRelationships",
        "Field:1724:basicForeignRelationships",
        "Field:1724:manyToManyModelRelationships",
        "Field:1724:manyToManylocalModelRelationships",
        "Field:1724:typedMorphRelationships",
        "Field:1724:identifiedMorphRelationships",
        "Field:1725:inputs",
        "Field:1725:foreign",
        "Field:1725:relatedForeigns",
        "Field:1725:basicParentRelationships",
        "Field:1725:basicForeignRelationships",
        "Field:1725:manyToManyModelRelationships",
        "Field:1725:manyToManylocalModelRelationships",
        "Field:1725:typedMorphRelationships",
        "Field:1725:identifiedMorphRelationships",
        "Field:1726:inputs",
        "Field:1726:foreign",
        "Field:1726:relatedForeigns",
        "Field:1726:basicParentRelationships",
        "Field:1726:basicForeignRelationships",
        "Field:1726:manyToManyModelRelationships",
        "Field:1726:manyToManylocalModelRelationships",
        "Field:1726:typedMorphRelationships",
        "Field:1726:identifiedMorphRelationships",
        "Field:1727:inputs",
        "Field:1727:foreign",
        "Field:1727:relatedForeigns",
        "Field:1727:basicParentRelationships",
        "Field:1727:basicForeignRelationships",
        "Field:1727:manyToManyModelRelationships",
        "Field:1727:manyToManylocalModelRelationships",
        "Field:1727:typedMorphRelationships",
        "Field:1727:identifiedMorphRelationships",
        "Field:1728:inputs",
        "Field:1728:foreign",
        "Field:1728:relatedForeigns",
        "Field:1728:basicParentRelationships",
        "Field:1728:basicForeignRelationships",
        "Field:1728:manyToManyModelRelationships",
        "Field:1728:manyToManylocalModelRelationships",
        "Field:1728:typedMorphRelationships",
        "Field:1728:identifiedMorphRelationships",
        "Field:1729:inputs",
        "Field:1729:foreign",
        "Field:1729:relatedForeigns",
        "Field:1729:basicParentRelationships",
        "Field:1729:basicForeignRelationships",
        "Field:1729:manyToManyModelRelationships",
        "Field:1729:manyToManylocalModelRelationships",
        "Field:1729:typedMorphRelationships",
        "Field:1729:identifiedMorphRelationships",
        "Entity:184:foreigns",
        "Entity:184:pivotRelationships",
        "Entity:184:pivotMorphRelationships",
        "Entity:184:basicRelationships",
        "Entity:184:hasManyThroughRelationships",
        "Entity:184:basicRelatedRelationships",
        "Entity:184:manyToManyRelationships",
        "Entity:184:manyToManyRelatedRelationships",
        "Entity:184:morphRelationships",
        "Entity:184:morphRelatedRelationships",
        "Entity:205:authProject",
        "Entity:205:cruds",
        "Entity:205:fields",
        "Field:2012:inputs",
        "Field:2012:foreign",
        "Field:2012:relatedForeigns",
        "Field:2012:basicParentRelationships",
        "Field:2012:basicForeignRelationships",
        "Field:2012:manyToManyModelRelationships",
        "Field:2012:manyToManylocalModelRelationships",
        "Field:2012:typedMorphRelationships",
        "Field:2012:identifiedMorphRelationships",
        "Field:2015:inputs",
        "Field:2015:foreign",
        "Field:2015:relatedForeigns",
        "Field:2015:basicParentRelationships",
        "Field:2015:basicForeignRelationships",
        "Field:2015:manyToManyModelRelationships",
        "Field:2015:manyToManylocalModelRelationships",
        "Field:2015:typedMorphRelationships",
        "Field:2015:identifiedMorphRelationships",
        "Field:2014:inputs",
        "Field:2014:foreign",
        "Field:2014:relatedForeigns",
        "Field:2014:basicParentRelationships",
        "Field:2014:basicForeignRelationships",
        "Field:2014:manyToManyModelRelationships",
        "Field:2014:manyToManylocalModelRelationships",
        "Field:2014:typedMorphRelationships",
        "Field:2014:identifiedMorphRelationships",
        "Field:2016:inputs",
        "Field:2016:foreign",
        "Field:2016:relatedForeigns",
        "Field:2016:basicParentRelationships",
        "Field:2016:basicForeignRelationships",
        "Field:2016:manyToManyModelRelationships",
        "Field:2016:manyToManylocalModelRelationships",
        "Field:2016:typedMorphRelationships",
        "Field:2016:identifiedMorphRelationships",
        "Field:2017:inputs",
        "Field:2017:foreign",
        "Field:2017:relatedForeigns",
        "Field:2017:basicParentRelationships",
        "Field:2017:basicForeignRelationships",
        "Field:2017:manyToManyModelRelationships",
        "Field:2017:manyToManylocalModelRelationships",
        "Field:2017:typedMorphRelationships",
        "Field:2017:identifiedMorphRelationships",
        "Field:2018:inputs",
        "Field:2018:foreign",
        "Field:2018:relatedForeigns",
        "Field:2018:basicParentRelationships",
        "Field:2018:basicForeignRelationships",
        "Field:2018:manyToManyModelRelationships",
        "Field:2018:manyToManylocalModelRelationships",
        "Field:2018:typedMorphRelationships",
        "Field:2018:identifiedMorphRelationships",
        "Field:2037:inputs",
        "Field:2037:foreign",
        "Field:2037:relatedForeigns",
        "Field:2037:basicParentRelationships",
        "Field:2037:basicForeignRelationships",
        "Field:2037:manyToManyModelRelationships",
        "Field:2037:manyToManylocalModelRelationships",
        "Field:2037:typedMorphRelationships",
        "Field:2037:identifiedMorphRelationships",
        "Entity:205:foreigns",
        "Entity:205:pivotRelationships",
        "Entity:205:pivotMorphRelationships",
        "Entity:205:basicRelationships",
        "Entity:205:hasManyThroughRelationships",
        "Entity:205:basicRelatedRelationships",
        "Entity:205:manyToManyRelationships",
        "Entity:205:manyToManyRelatedRelationships",
        "Entity:205:morphRelationships",
        "Entity:205:morphRelatedRelationships",
        "Entity:207:authProject",
        "Entity:207:cruds",
        "Entity:207:fields",
        "Field:2028:inputs",
        "Field:2028:foreign",
        "Field:2028:relatedForeigns",
        "Field:2028:basicParentRelationships",
        "Field:2028:basicForeignRelationships",
        "Field:2028:manyToManyModelRelationships",
        "Field:2028:manyToManylocalModelRelationships",
        "Field:2028:typedMorphRelationships",
        "Field:2028:identifiedMorphRelationships",
        "Field:2029:inputs",
        "Field:2029:foreign",
        "Field:2029:relatedForeigns",
        "Field:2029:basicParentRelationships",
        "Field:2029:basicForeignRelationships",
        "Field:2029:manyToManyModelRelationships",
        "Field:2029:manyToManylocalModelRelationships",
        "Field:2029:typedMorphRelationships",
        "Field:2029:identifiedMorphRelationships",
        "Field:2030:inputs",
        "Field:2030:foreign",
        "Field:2030:relatedForeigns",
        "Field:2030:basicParentRelationships",
        "Field:2030:basicForeignRelationships",
        "Field:2030:manyToManyModelRelationships",
        "Field:2030:manyToManylocalModelRelationships",
        "Field:2030:typedMorphRelationships",
        "Field:2030:identifiedMorphRelationships",
        "Field:2031:inputs",
        "Field:2031:foreign",
        "Field:2031:relatedForeigns",
        "Field:2031:basicParentRelationships",
        "Field:2031:basicForeignRelationships",
        "Field:2031:manyToManyModelRelationships",
        "Field:2031:manyToManylocalModelRelationships",
        "Field:2031:typedMorphRelationships",
        "Field:2031:identifiedMorphRelationships",
        "Field:2036:inputs",
        "Field:2036:foreign",
        "Field:2036:relatedForeigns",
        "Field:2036:basicParentRelationships",
        "Field:2036:basicForeignRelationships",
        "Field:2036:manyToManyModelRelationships",
        "Field:2036:manyToManylocalModelRelationships",
        "Field:2036:typedMorphRelationships",
        "Field:2036:identifiedMorphRelationships",
        "Field:2034:inputs",
        "Field:2034:foreign",
        "Field:2034:relatedForeigns",
        "Field:2034:basicParentRelationships",
        "Field:2034:basicForeignRelationships",
        "Field:2034:manyToManyModelRelationships",
        "Field:2034:manyToManylocalModelRelationships",
        "Field:2034:typedMorphRelationships",
        "Field:2034:identifiedMorphRelationships",
        "Field:2033:inputs",
        "Field:2033:foreign",
        "Field:2033:relatedForeigns",
        "Field:2033:basicParentRelationships",
        "Field:2033:basicForeignRelationships",
        "Field:2033:manyToManyModelRelationships",
        "Field:2033:manyToManylocalModelRelationships",
        "Field:2033:typedMorphRelationships",
        "Field:2033:identifiedMorphRelationships",
        "Field:2035:inputs",
        "Field:2035:foreign",
        "Field:2035:relatedForeigns",
        "Field:2035:basicParentRelationships",
        "Field:2035:basicForeignRelationships",
        "Field:2035:manyToManyModelRelationships",
        "Field:2035:manyToManylocalModelRelationships",
        "Field:2035:typedMorphRelationships",
        "Field:2035:identifiedMorphRelationships",
        "Field:2032:inputs",
        "Field:2032:foreign",
        "Field:2032:relatedForeigns",
        "Field:2032:basicParentRelationships",
        "Field:2032:basicForeignRelationships",
        "Field:2032:manyToManyModelRelationships",
        "Field:2032:manyToManylocalModelRelationships",
        "Field:2032:typedMorphRelationships",
        "Field:2032:identifiedMorphRelationships",
        "Entity:207:foreigns",
        "Entity:207:pivotRelationships",
        "Entity:207:pivotMorphRelationships",
        "Entity:207:basicRelationships",
        "Entity:207:hasManyThroughRelationships",
        "Entity:207:basicRelatedRelationships",
        "Entity:207:manyToManyRelationships",
        "Entity:207:manyToManyRelatedRelationships",
        "Entity:207:morphRelationships",
        "Entity:207:morphRelatedRelationships",
        "Entity:206:authProject",
        "Entity:206:cruds",
        "Entity:206:fields",
        "Field:2019:inputs",
        "Field:2019:foreign",
        "Field:2019:relatedForeigns",
        "Field:2019:basicParentRelationships",
        "Field:2019:basicForeignRelationships",
        "Field:2019:manyToManyModelRelationships",
        "Field:2019:manyToManylocalModelRelationships",
        "Field:2019:typedMorphRelationships",
        "Field:2019:identifiedMorphRelationships",
        "Field:2021:inputs",
        "Field:2021:foreign",
        "Field:2021:relatedForeigns",
        "Field:2021:basicParentRelationships",
        "Field:2021:basicForeignRelationships",
        "Field:2021:manyToManyModelRelationships",
        "Field:2021:manyToManylocalModelRelationships",
        "Field:2021:typedMorphRelationships",
        "Field:2021:identifiedMorphRelationships",
        "Field:2020:inputs",
        "Field:2020:foreign",
        "Field:2020:relatedForeigns",
        "Field:2020:basicParentRelationships",
        "Field:2020:basicForeignRelationships",
        "Field:2020:manyToManyModelRelationships",
        "Field:2020:manyToManylocalModelRelationships",
        "Field:2020:typedMorphRelationships",
        "Field:2020:identifiedMorphRelationships",
        "Field:2024:inputs",
        "Field:2024:foreign",
        "Field:2024:relatedForeigns",
        "Field:2024:basicParentRelationships",
        "Field:2024:basicForeignRelationships",
        "Field:2024:manyToManyModelRelationships",
        "Field:2024:manyToManylocalModelRelationships",
        "Field:2024:typedMorphRelationships",
        "Field:2024:identifiedMorphRelationships",
        "Field:2022:inputs",
        "Field:2022:foreign",
        "Field:2022:relatedForeigns",
        "Field:2022:basicParentRelationships",
        "Field:2022:basicForeignRelationships",
        "Field:2022:manyToManyModelRelationships",
        "Field:2022:manyToManylocalModelRelationships",
        "Field:2022:typedMorphRelationships",
        "Field:2022:identifiedMorphRelationships",
        "Field:2025:inputs",
        "Field:2025:foreign",
        "Field:2025:relatedForeigns",
        "Field:2025:basicParentRelationships",
        "Field:2025:basicForeignRelationships",
        "Field:2025:manyToManyModelRelationships",
        "Field:2025:manyToManylocalModelRelationships",
        "Field:2025:typedMorphRelationships",
        "Field:2025:identifiedMorphRelationships",
        "Field:2026:inputs",
        "Field:2026:foreign",
        "Field:2026:relatedForeigns",
        "Field:2026:basicParentRelationships",
        "Field:2026:basicForeignRelationships",
        "Field:2026:manyToManyModelRelationships",
        "Field:2026:manyToManylocalModelRelationships",
        "Field:2026:typedMorphRelationships",
        "Field:2026:identifiedMorphRelationships",
        "Field:2027:inputs",
        "Field:2027:foreign",
        "Field:2027:relatedForeigns",
        "Field:2027:basicParentRelationships",
        "Field:2027:basicForeignRelationships",
        "Field:2027:manyToManyModelRelationships",
        "Field:2027:manyToManylocalModelRelationships",
        "Field:2027:typedMorphRelationships",
        "Field:2027:identifiedMorphRelationships",
        "Entity:206:foreigns",
        "Entity:206:pivotRelationships",
        "Entity:206:pivotMorphRelationships",
        "Entity:206:basicRelationships",
        "Entity:206:hasManyThroughRelationships",
        "Entity:206:basicRelatedRelationships",
        "Entity:206:manyToManyRelationships",
        "Entity:206:manyToManyRelatedRelationships",
        "Entity:206:morphRelationships",
        "Entity:206:morphRelatedRelationships"
    ]
}
